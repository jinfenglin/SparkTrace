issue_id,issue_resolved_date,issue_resolution,issue_content,issue_priority,issue_assignee,issue_assignee_username,issue_created_date,issue_summary,issue_status,issue_type
MNG-1,Thu May 19 00:00:00 EDT 2005,Fixed,1. artifacts in mevenide to synchronize pom with ide we need to display artifacts if they are not already added to ide (and vice-versa). for that purpose we need to have a comparison mechanism. so a equals() method is needed  but also other utility methods like (non exhaustive) :  o myArtifact.conflicts(myOtherArtifact) and o myArtifact.relaxEquals(myOtherArtifact) f.i. conflicts would return true if same groupId and sameAritfactId but incompatible version  relaxEquals would return true if version is compatible  etc.. (just some quick thoughts) 2. directories  although not as needed as artifact comparison it would be util to have utility to compare a Resource with a given path that might be relative or to $ {basedir}  or absolute.,Minor,null,null,Tue Apr 13 00:00:00 EDT 2004,[MNG-1] directory and artifact comparison,Closed,improvement
MNG-1026,Fri Oct 07 00:00:00 EDT 2005,Fixed,The Maven mailing list archive links point to the apache mailing list archives which are nearly useless because you cannot search by keyword.  Please change the links to point to MARC: http://marc.theaimsgroup.com/?l=turbine-maven-user&amp;r=1&amp;w=2 http://marc.theaimsgroup.com/?l=turbine-maven-dev&amp;r=1&amp;w=2 The whole point of archives is to allow your users to search them to minimize duplicate questions.,Major,null,null,Tue Sep 27 00:00:00 EDT 2005,[MNG-1026] mailing list archive link,Closed,improvement
MNG-1083,Sun Dec 31 00:00:00 EST 2006,Fixed,Expose manipulation of the settings object in the embedder.,Major,null,null,Mon Oct 03 00:00:00 EDT 2005,[MNG-1083] Provide read/write methods for manipulating Maven settings,Closed,improvement
MNG-1090,Tue Oct 11 00:00:00 EDT 2005,Fixed,the plugin version manager should be searching the reactorProjects collection before it tries against the repository system  in order to pickup plugins that are going to be built in this maven execution. The only trick here is ensuring that the plugins actually are built ahead of their invocation...,Major,John Casey,jdcasey,Tue Oct 04 00:00:00 EDT 2005,[MNG-1090] search reactorProjects for plugin versions before going to the repository system,Closed,improvement
MNG-1098,Fri Oct 07 00:00:00 EDT 2005,Fixed,Actually we have it only on sucess,Minor,Brett Porter,brettporter,Wed Oct 05 00:00:00 EDT 2005,[MNG-1098] Add reactor summary when m2 fails,Closed,improvement
MNG-110,Wed Aug 03 00:00:00 EDT 2005,Fixed,Add eclipse.dependency property behavior to eclipse plugin as described in http://maven.apache.org/reference/plugins/eclipse/.,Major,null,null,Sun Jan 16 00:00:00 EST 2005,[MNG-110] Add eclipse.dependency property to eclipse plugin,Closed,improvement
MNG-1117,Wed Feb 28 00:00:00 EST 2007,Fixed,Currently MavenEmbedder.writeModel( w  model) method does not take into account formatting of the existing pom.xml. This is critical limitation from an end-user prospective.,Critical,Jason van Zyl,jvanzyl,Thu Oct 06 00:00:00 EDT 2005,[MNG-1117] MavenEmbedder.writeModel( w  model) should allow to preserve xml formatting,Closed,improvement
MNG-1119,Sun Dec 27 00:00:00 EST 2009,Fixed,Currently all dependencies come from MavenEmbedder.readProjectWithDependencies() method that is using passed pom.xml to resolve dependencies from m2 repositories. It is possible that some of the dependencies could exist as other Eclipse projects in the same workspace. It would be interesting to hook up Eclipse-specific pom resolver  so it would implement IDE-specific logic to check if there are poms avaialble and if nothing is there use default resolution strategy.,Major,null,null,Thu Oct 06 00:00:00 EDT 2005,[MNG-1119] Allow to use custom pom resolution strategy,Closed,improvement
MNG-1124,Fri Oct 07 00:00:00 EDT 2005,Fixed,Multiproject and project.properties info as per thread "&#91;m2&#93; m1 pom conversion".,Minor,null,null,Fri Oct 07 00:00:00 EDT 2005,[MNG-1124] guide-m1-m2 patch,Closed,improvement
MNG-1150,Thu Oct 13 00:00:00 EDT 2005,Fixed,It should be allowed to configure the custom settings of each wagon provider. This would give lot of flexiblity to the user to adapt the wagon provider to his environment.  For example  in wagon-ssh i would like to configure WAGONSSH-12 settings or in a https wagon i would things related with CA keys and trust. ,Major,John Casey,jdcasey,Sun Oct 09 00:00:00 EDT 2005,[MNG-1150] be able to configure custom wagon's properties,Closed,improvement
MNG-1182,Wed Dec 07 00:00:00 EST 2005,Fixed,we are still using plexus-utils with old versions of FileUtils that don't properly close files on exception - this could be an issue when we get to embedding.,Major,John Casey,jdcasey,Wed Oct 12 00:00:00 EDT 2005,[MNG-1182] update plexus-utils code for stream handling,Closed,improvement
MNG-1183,Sat Oct 15 00:00:00 EDT 2005,Fixed,If one uses -s mysettings.xml file as allowed by MNG-1179  the m2-bootstrapper build will not propagate that information to the IT Verifier. Then a different repository will be used. Patch attached.,Minor,Brett Porter,brettporter,Wed Oct 12 00:00:00 EDT 2005,[MNG-1183] Make core integration tests aware of user local directory thanks to settings file,Closed,improvement
MNG-1198,Wed Oct 26 00:00:00 EDT 2005,Fixed,the artifact resolver should continue with the next artifact in the resolution group even after it could not find one  and throw an exception at the end that lists all the artifacts that could not be found.,Major,Jason van Zyl,jvanzyl,Thu Oct 13 00:00:00 EDT 2005,[MNG-1198] group artifact not found exceptions,Closed,improvement
MNG-1217,Wed Nov 02 00:00:00 EST 2005,Fixed,The message you get everytime is &#91;WARNING&#93;   This artifact has been relocated to javax.sql:jdbc-stdext:2.0. now print something useful instead of "This"  and better if there's a way to know where it comes from,Major,Edwin Punzalan,elpunzalan,Sat Oct 15 00:00:00 EDT 2005,[MNG-1217] Relocation messages don't mention the artifact that was relocated,Closed,improvement
MNG-122,Thu Oct 13 00:00:00 EDT 2005,Fixed,we need to get rid of the traces for non-fatal errors  and give something user friendly. The traces for fatal errors need to be more descriptive.,Minor,Brett Porter,brettporter,Sun Feb 06 00:00:00 EST 2005,[MNG-122] clean up of exception handling  error reporting and logging,Closed,improvement
MNG-123,Sun Nov 20 00:00:00 EST 2005,Fixed,currently  the bootstrap builds with mboot  but never rebuilds m2 with itself. It would be good to be able to build m2 with itself and include that step in the bootstrap. This would also make development quicker as you could build a single component and install it into your installation rather than having to re-bootstrap on changes.,Trivial,Brett Porter,brettporter,Sun Feb 06 00:00:00 EST 2005,[MNG-123] bootstrap should build with itself,Closed,improvement
MNG-1265,Tue Dec 06 00:00:00 EST 2005,Fixed,We should add information such as "Built on &lt;date + time&gt;" instead of just the version. For example  imagine I have version 2.0.1-SNAPSHOT I have built 2 days ago. I'm building it again from sources.Some problems happen during the build. I want to see if the new version corresponds to what I have just built. If it just says 2.0.1-SNAPSHOT  I won't know. Displaying:  2.0.1-SNAPSHOT build on 2005-10-20 at 14:29 GMT+1 would be much better. ,Major,John Casey,jdcasey,Fri Oct 21 00:00:00 EDT 2005,[MNG-1265] Improve information displayed by "mvn --version",Closed,improvement
MNG-1271,Tue Nov 01 00:00:00 EST 2005,Fixed,I was installing Maven 2 per the Installation Instructions and after running mvn --version and seeing 2.0 I decided to "try it out" - now realize I am a build/release guy  not a java coder so I'm coming from this as a complete newbie. So  happy that Maven 2 was installed I went over to the working directory for our Maven 1 project and typed "mvn compile" and after a couple minutes of some downloading I get the following: &#91;ERROR&#93; BUILD ERROR ... &#91;INFO&#93; Cannot execute mojo: resources. It requires a project  but the build is not using one. ... &#91;INFO&#93; For more information  run Maven with the -e switch ok  hmm  I'm thinking "well  I see project.xml - what the heck does it want" but I run mvn -e compile to be safe.  That spews a nice stack trace (and if I was a java guy it would probably make sense) but still nothing says "hey fool - this is Maven 2 - you need a pom.xml file not that so-last-decade project.xml file!" anywho - sorry for the long winded report - can you change the INFO message to mention pom.xml? ,Major,Edwin Punzalan,elpunzalan,Fri Oct 21 00:00:00 EDT 2005,[MNG-1271] Maven 2 needs to give a warning when it is being run in a Maven 1 project and there isn't a pom.xml file,Closed,improvement
MNG-1276,Wed Nov 16 00:00:00 EST 2005,Fixed,Basically   per module we get about 10-15 of these flying by : &#91;WARNING&#93; POM for: 'avalon-logkit:avalon-logkit:pom:2.1' does not appear to be valid. Its will be ignored for artifact resolution. Reason: Invalid POM (not v4.0.0 modelVersion) We have 65 modules  i'm sure you get the picture  see also http://article.gmane.org/gmane.comp.jakarta.turbine.maven.user/28826,Major,Edwin Punzalan,elpunzalan,Fri Oct 21 00:00:00 EDT 2005,[MNG-1276] warning too verbose for invalid poms,Closed,improvement
MNG-128,Sun Mar 06 00:00:00 EST 2005,Fixed,need to have a method for logging from m2 and mojos. Base it on an event structure so that it can be embedded easily and provide feedback.,Major,John Casey,jdcasey,Mon Feb 07 00:00:00 EST 2005,[MNG-128] logging and events,Closed,improvement
MNG-1286,Wed Nov 02 00:00:00 EST 2005,Fixed,When using an artifact that was relocated you need to exclude the one used directly  it doesn't work if you use the final relocated artifact. This is confusing when you get an artifact in your war but you need to exclude other. eg. if you don't use exclusions you get jdbc-stdext in the war. Using option b doesn't work  currently you need to use option a.        &lt;dependency&gt;            &lt;artifactId&gt;commons-dbcp&lt;/artifactId&gt;            &lt;groupId&gt;commons-dbcp&lt;/groupId&gt;            &lt;version&gt;1.2&lt;/version&gt;            &lt;exclusions&gt; &lt;!-- option a --&gt;                &lt;exclusion&gt;                    &lt;artifactId&gt;jdbc&lt;/artifactId&gt;                    &lt;groupId&gt;jdbc&lt;/groupId&gt;                &lt;/exclusion&gt; &lt;!-- option b --&gt;                &lt;exclusion&gt;                    &lt;artifactId&gt;jdbc-stdext&lt;/artifactId&gt;                    &lt;groupId&gt;javax.sql&lt;/groupId&gt;                &lt;/exclusion&gt;            &lt;/exclusions&gt;        &lt;/dependency&gt;,Major,Lester T. Ecarma,lecarma,Sat Oct 22 00:00:00 EDT 2005,[MNG-1286] Check exclusions against relocated artifacts,Closed,improvement
MNG-1287,Tue Nov 01 00:00:00 EST 2005,Fixed,When getting a "Failed to resolve artifact." error in previous betas maven showed the path to that dependency  in the 2.0 final is missing. &#91;INFO&#93; Failed to resolve artifact. GroupId: logkit ArtifactId: logkit Version: 1.0.6 Reason: Unable to download the artifact from any repository   logkit:logkit:1.0.6:jar,Major,Edwin Punzalan,elpunzalan,Sat Oct 22 00:00:00 EDT 2005,[MNG-1287] Bring back dependency path tree in "Failed to resolve artifact." error,Closed,improvement
MNG-129,Sat Mar 12 00:00:00 EST 2005,Fixed,m2 -r jar:install in plexus  for example  doesn't work because of the lack of poms in the local repository. m2 -r install should be finished after the lifecycle stuff to ensure this works. The unified source directory will also help here.,Major,null,null,Mon Feb 07 00:00:00 EST 2005,[MNG-129] generic install technique,Closed,improvement
MNG-1299,Thu Jan 11 00:00:00 EST 2007,Fixed,The m2 site plugin now supports the $ {basedir} /xdocs directory.,Major,null,null,Mon Oct 24 00:00:00 EDT 2005,[MNG-1299] Document m1 xdocs compatibility with the m2 site plug-in,Closed,improvement
MNG-1300,Sat Jan 21 00:00:00 EST 2006,Fixed,Give people examples of how the optional and exclusions elements and explain in detail how they work.,Major,John Casey,jdcasey,Mon Oct 24 00:00:00 EDT 2005,[MNG-1300] Document optional and exclusions element for dependencies,Closed,improvement
MNG-1301,Wed Jan 25 00:00:00 EST 2006,Fixed,empty,Major,Allan Ramirez,aramirez,Mon Oct 24 00:00:00 EDT 2005,[MNG-1301] Document test inclusions and exclusions using the surefire plugin,Closed,improvement
MNG-1352,Tue Dec 06 00:00:00 EST 2005,Fixed,As you can see below the message has an "OR" but the 2 alternatives are the same: C:\dev\cargo\trunk\samples\extensions\maven2&gt;mvn clean org.codehaus.cargo.maven2:cargo-maven2-plugin:start &#91;INFO&#93; Scanning for projects... &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Building Cargo Sample for the Maven2 plugin &#91;INFO&#93;    task-segment: &#91;clean  org.codehaus.cargo.maven2:cargo-maven2-plugin:start&#93; &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; &#91;clean:clean&#93; &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;ERROR&#93; BUILD ERROR &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; One or more required plugin parameters are invalid/missing for 'cargo2:start' &#91;0&#93; inside the definition for plugin: 'cargo-maven2-plugin'specify the following: &lt;configuration&gt;   ...   &lt;container&gt;VALUE&lt;/container&gt; &lt;/configuration&gt; OR &lt;configuration&gt;   ...   &lt;container&gt;VALUE&lt;/container&gt; &lt;/configuration&gt; . &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; For more information  run Maven with the -e switch &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Total time: 1 second &#91;INFO&#93; Finished at: Fri Oct 28 11:38:41 CEST 2005 &#91;INFO&#93; Final Memory: 2M/5M &#91;INFO&#93; ---------------------------------------------------------------------------- C:\dev\cargo\trunk\samples\extensions\maven2&gt;,Major,John Casey,jdcasey,Fri Oct 28 00:00:00 EDT 2005,[MNG-1352] Improve message when a required config is not present in pom.xml,Closed,improvement
MNG-1361,Sat Oct 29 00:00:00 EDT 2005,Fixed,When using a dependencyManagement element it's not easy to tell which dependency element in the current POM actually has the problem because we get a message like the following: &#8212; Project ID: org.apache.geronimo.specs:j2ee POM Location: /home/jvanzyl/js/org/apache/geronimo/specs/trunk/j2ee/pom.xml Validation Messages:     &#91;0&#93;  'dependencies.dependency.version' is missing.     &#91;1&#93;  'dependencies.dependency.version' is missing.     &#91;2&#93;  'dependencies.dependency.version' is missing.     &#91;3&#93;  'dependencies.dependency.version' is missing.     &#91;4&#93;  'dependencies.dependency.version' is missing. &#8212; Would be nice if it also displayed the standard g:a so you can tell what it's referring to.,Major,Jason van Zyl,jvanzyl,Sat Oct 29 00:00:00 EDT 2005,[MNG-1361] Improve the message when the version is missing from a dependency,Closed,improvement
MNG-1369,Fri Nov 18 00:00:00 EST 2005,Fixed,Talk about the replacement of the arbitrary chaining of goals with the standard lifecycle.,Major,Jason van Zyl,jvanzyl,Sun Oct 30 00:00:00 EDT 2005,[MNG-1369] Why are there no pre/post goals in Maven 2.x,Closed,improvement
MNG-1404,Wed Nov 16 00:00:00 EST 2005,Fixed,When a pom is invalid the error message should identify the problem. For example  in the POM below the closing "dependencies" element is misspelled  yet the error messages is only: &#91;WARNING&#93; POM for: 'springframework:spring:pom:1.2.6' does not appear to &gt; be valid. Its will be ignored for artifact resolution. &gt; Reason: Parse error reading POM &gt; &#91;DEBUG&#93;   springframework:spring:jar:1.2.6 (selected for compile) &lt;project&gt; &gt;   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &gt;   &lt;groupId&gt;springframework&lt;/groupId&gt; &gt;   &lt;artifactId&gt;spring&lt;/artifactId&gt; &gt;   &lt;!-- Really 1.2.6-SNAPSHOT --&gt; &gt;   &lt;version&gt;1.2.6&lt;/version&gt; &gt; &gt;   &lt;dependencies&gt; &gt;     &lt;dependency&gt; &gt;       &lt;groupId&gt;commons-logging&lt;/groupId&gt; &gt;       &lt;artifactId&gt;commons-logging&lt;/artifactId&gt; &gt;       &lt;version&gt;1.0.4&lt;/version&gt; &gt;       &lt;scope&gt;compile&lt;/scope&gt; &gt;     &lt;/dependency&gt; &gt;   &lt;/depenencies&gt; &gt; &gt; &lt;/project&gt;,Major,John Casey,jdcasey,Wed Nov 02 00:00:00 EST 2005,[MNG-1404] Provide informative messages when POM is invalid,Closed,improvement
MNG-141,Thu Feb 17 00:00:00 EST 2005,Fixed,need to add feedback handlers to wagon so that you can see the download progress.,Blocker,Brett Porter,brettporter,Wed Feb 09 00:00:00 EST 2005,[MNG-141] add download feedback,Closed,improvement
MNG-1416,Fri Nov 18 00:00:00 EST 2005,Fixed,I had trouble figuring out how to set properties in settings.xml  so I'm including a patch to the documentation.   Essentially  I added to following to the description of the properties element: Contents take the form of &lt;property.name&gt;property.value&lt;/property.name&gt;,Minor,Jason van Zyl,jvanzyl,Thu Nov 03 00:00:00 EST 2005,[MNG-1416] Patch:  Small addition to Settings.xml documentation,Closed,improvement
MNG-1427,Thu Nov 17 00:00:00 EST 2005,Fixed,"Dependency Scope" used to be documented on this page (http://maven.apache.org/maven2/dependency-mechanism.html) but does not exist in the new site.,Major,null,null,Fri Nov 04 00:00:00 EST 2005,[MNG-1427] "Dependency Scope" not documented in the new site,Closed,improvement
MNG-145,Thu May 05 00:00:00 EDT 2005,Fixed,this probably relates to repository work as much as Maven work. Currently  if users wish to use a mirror of ibiblio  they specify that as an alternative remote repository. In m1  this causes a problem because if you add a new repository not equivalent to that in your project  it is not in the build.properties. In m2  they are all added to the list  so the mirror will be used first  but the others may also be checked. This is better  but still requires the user specify it in their configuration and it may be used on projects it is never needed for. It would be good if we could have a repository descriptor at the base of the repository that lists mirrors. On first use of the repository  the user could be prompted to select any mirrors they'd like to use  and it can be saved in their configuration for that repository ID. That way any project listing ibiblio as a repository could actually use  say  planetmirror instead (and fall back to ibiblio last).,Major,Brett Porter,brettporter,Wed Feb 16 00:00:00 EST 2005,[MNG-145] built in notion of a mirror repository,Closed,improvement
MNG-1479,Thu Mar 09 00:00:00 EST 2006,Fixed,Besides the multi-module doc  my experience wishes for the POM entry descriptions - some are too vague.  More detail (what is it for/why would you use it  how to use it)  examples  valid values  etc. would help a lot. I think the project descriptor has big potential as a solid reference vehicle  with the added info.  I would value that more than many of the "guides". For a simple example  the &lt;packaging&gt; element doesn't describe valid values  so a search begins to learn them.  Viewing the schema doesn't help  as the packaging type is "string".  Additionally  I think the phrase "type of artifact" is not intuitive to newbies  so listing the valid values would bring contextual explanation  as well as their definition. (from http://mail-archives.apache.org/mod_mbox/maven-users/200511.mbox/%3c1131545979.18047.488.camel@localhost.localdomain%3e),Major,Brett Porter,brettporter,Wed Nov 09 00:00:00 EST 2005,[MNG-1479] Improve pom annotations to create a great reference,Closed,improvement
MNG-1493,Tue Feb 05 00:00:00 EST 2008,Fixed,Command line version of Maven 2 supports POMs with a different name using the -f option. Unfortunately such POMs cannot be used as modules  since the value of the module tag is defined as a directory to another pom.xml instead of a pathname to another POM. Only if the value is not already an existing file the value should be treated as directory with a present pom.xml file. Similar situation applies to the relativePath element of the parent tag. This makes the generation of different artifacts from the same sources (with some modifications) much more easy. Currently you will have to put the POMs in separate directories and modify the sourec location into another module.,Minor,John Casey,jdcasey,Thu Nov 10 00:00:00 EST 2005,[MNG-1493] Support in multiproject environment modules with different named POMs,Closed,improvement
MNG-1497,Thu Nov 02 00:00:00 EST 2006,Fixed,The Maven Directory Layout page (http://maven.apache.org/reference/dirlayout.html) notes for the "src" directory that "The code may be placed into separate source code directories by language  as in src/java/ and src/php/ for source code in the Java and PHP languages respectively. The separation into directories according to function (src/share  src/core  src/web) is currently not supported by Maven. It is highly recommended that sub-directories be used under src/." The Maven Conventions Page (http://maven.apache.org/reference/conventions.html) advises that projects should follow another directory structure: src/main/$LANGUAGE  src/test/$LANGUAGE  src/site/xdocs  etc.  To me this seems to contradict the statement that Maven doesn't support separation into directories according to function.  The examples given of structures to avoid (src/core and src/web) match closely to what's encouraged elsewhere (src/main and src/site). The directory layout page is marked as being for v1.0.2  but the conventions page is not marked with a version.  If the conventions are different for different versions  clearer labeling is needed.  If the conventions are constant across versions  then the documentation should be changed so that it is not contradicting itself.,Minor,null,null,Wed Aug 17 00:00:00 EDT 2005,[MNG-1497] remove old html files from the site,Closed,improvement
MNG-1498,Thu Mar 22 00:00:00 EDT 2007,Fixed,Maven's mailing list page (http://maven.apache.org/mail-lists.html) currently lists only the user and dev lists. I think it would be more useful for new users if this page listed all maven-related mailing lists (even though some lists belong to sub-projects  such as Wagon and SCM).,Minor,null,null,Fri Oct 15 00:00:00 EDT 2004,[MNG-1498] [PATCH] Add all mailing lists to Maven's main site,Closed,improvement
MNG-15,Wed May 12 00:00:00 EDT 2004,Fixed,empty,Major,null,null,Sat May 08 00:00:00 EDT 2004,[MNG-15] Generate the plugin.xml from @tags in the plugin,Closed,improvement
MNG-1500,Tue Jan 08 00:00:00 EST 2008,Fixed,empty,Major,Siveton Vincent,siveton,Thu Nov 10 00:00:00 EST 2005,[MNG-1500] document the running of a single test or group of tests using the -Dtest=FooTest option,Closed,improvement
MNG-1502,Fri Nov 18 00:00:00 EST 2005,Fixed,Hi    Since this is a common occurence especially for new users  it might be beneficial including a FAQ entry similar to the following: ================= Why am I getting a "&lt;plugin name&gt; does not exist or no valid version" error? This means that Maven is unable to access the required plugin from your local repository  and unable to access the official or 'central' Maven2 plugin repository. You may troubleshoot the problem by performing the following actions: &lt;ul&gt; &lt;li&gt; If you are behind a http proxy  please check the Maven2 &lt;a href="http://maven.apache.org/guides/mini/guide-proxies.html"&gt;proxy settings guide&lt;/a&gt;. &lt;/li&gt; &lt;li&gt; If the plugin you seek cannot be redistributed freely then you may &lt;a href="http://maven.apache.org/guides/mini/guide-coping-with-sun-jars.html"&gt;add it manually&lt;/a&gt; to your repository. &lt;/li&gt; &lt;/ul&gt; If the problem still persists you may seek help from the Maven user list  or &lt;a href="http://jira.codehaus.org/browse/MNG"&gt;log a ticket&lt;/a&gt; describing your problem. =================,Major,null,null,Thu Nov 10 00:00:00 EST 2005,[MNG-1502] FAQ submission: Missing plugin,Closed,improvement
MNG-1508,Thu Nov 02 00:00:00 EST 2006,Fixed,The compile phase has a process-classes phase after it to do instrumentation.  The test-compile phase should have a similar phase after it also.,Major,kenneyw,kenneyw,Thu Nov 10 00:00:00 EST 2005,[MNG-1508] Need a process-test-classes phase,Closed,improvement
MNG-1530,Wed May 24 00:00:00 EDT 2006,Fixed,A simple mvn plugins that converts a maven 1 project.xml to a maven 2 pom.xml. Apart from the pom v3 to v4 conversion it also adds specific plugin configurations to pom.xml from project.properties (there are a few samples for some compiler  surefire  war settings and it can be easily extended). After installing it using mvn:install you can run "mvn maven1:convert" on maven 1 project for a quick start on maven 2. Note: the org.apache.maven.model.v3_0_0.* classes are actually embedded in the plugin due to MNG-1436 and MAVENUPLOAD-583 If there is interest in this I can commit it to svn  please comment/vote here. ,Minor,Carlos Sanchez,carlos,Sat Nov 12 00:00:00 EST 2005,[MNG-1530] Converter for maven 1 projects,Closed,improvement
MNG-1540,Wed Oct 25 00:00:00 EDT 2006,Fixed, ,Critical,Jason van Zyl,jvanzyl,Sat Nov 12 00:00:00 EST 2005,[MNG-1540] ability to categorise guides in the maven site,Closed,improvement
MNG-1550,Tue Dec 06 00:00:00 EST 2005,Fixed,when a file is downloaded  the checksum is verified  but not saved in the local repository. It should also be copied when the download was valid and the checksum succeeded.,Major,John Casey,jdcasey,Sun Nov 13 00:00:00 EST 2005,[MNG-1550] save checksum in local repository,Closed,improvement
MNG-1560,Thu Nov 09 00:00:00 EST 2006,Fixed,The attachment describes a way (in APT format) to use a remote repository through HTTPS with client-side certificate authentication. This may be useful in corporate or private development settings.,Minor,Siveton Vincent,siveton,Mon Nov 14 00:00:00 EST 2005,[MNG-1560] Guide to accessing repository with https client authentication,Closed,improvement
MNG-1563,Sun Jan 19 00:00:00 EST 2014,Fixed,There doesn't seem to be a guide about either testing or integration testing. It would be nice to see two guides: plain vanilla junit tests:   how to write a simple one that will run in m2   how to write one that uses the test suite API integration testing:   test building e.g. plugin that does code generation   test resulting application e.g. command-line app or gui   test deployment e.g. to a test web service container I have no idea what of this is currently implemented or even possible using mvn  but then the documentation isn't giving my wishes any boundaries either...,Major,null,null,Mon Nov 14 00:00:00 EST 2005,[MNG-1563] how to write integration tests,Closed,improvement
MNG-1564,Thu Nov 17 00:00:00 EST 2005,Fixed,This issue is being used to manage an update to the content of the maven-release plugin mini guide  "Guide to Releasing".   The mini guide content has been extended to provide more examples and explainations to the use of the maven-release plugin.  Over the last couple of weeks I have been posting questions about the plugin as result did not want to lose the understanding. First time contributing and so feedback is always cool. The included file has modified the following site project file http://svn.apache.org/viewcvs.cgi/maven/site/trunk/src/site/apt/guides/mini/\guide-releasing.apt,Major,Jason van Zyl,jvanzyl,Mon Nov 14 00:00:00 EST 2005,[MNG-1564] Content update to maven-release mini guide,Closed,improvement
MNG-157,Tue Apr 26 00:00:00 EDT 2005,Fixed,example: many of the mojo's have identical parameters in the modello plugin. They could all be declared on the abstract modello mojo instead.,Major,John Casey,jdcasey,Sun Feb 27 00:00:00 EST 2005,[MNG-157] java mojo extractor should search extended classes for annotations,Closed,improvement
MNG-1582,Thu Jan 10 00:00:00 EST 2008,Fixed,guide to convert pregoals and postgoals to lifecycle give a pointer to the integration test that covers lifecycle as a example ,Major,Siveton Vincent,siveton,Tue Nov 15 00:00:00 EST 2005,[MNG-1582] Add how to convert pregoals and postgoals to lifecycle to the m1-m2 guide,Closed,improvement
MNG-1594,Fri Nov 18 00:00:00 EST 2005,Fixed, ,Minor,Jason van Zyl,jvanzyl,Thu Nov 17 00:00:00 EST 2005,[MNG-1594] Update sun jars guide,Closed,improvement
MNG-1621,Fri Nov 18 00:00:00 EST 2005,Fixed,The documentation under the URL "guides/introduction/introduction-to-dependency-mechanism.html" should explain the system scope. I'll propose a patch which updates the guide accordingly. The table describing the relationships between the different scope is NOT updated by the patch.,Minor,Jason van Zyl,jvanzyl,Fri Nov 18 00:00:00 EST 2005,[MNG-1621] Explain system scope for dependencies,Closed,improvement
MNG-1629,Mon Nov 21 00:00:00 EST 2005,Fixed, http://maven.apache.org/guides/mini/guide-creating-archetypes.html Section 1  &lt;groupId&gt;my.groupId&lt;groupId&gt; Tag not terminated. ,Trivial,Brett Porter,brettporter,Sat Nov 19 00:00:00 EST 2005,[MNG-1629] <groupId> tag not terminated in archetype creation example,Closed,improvement
MNG-1644,Fri Dec 16 00:00:00 EST 2005,Fixed,Though it's a stupid thing to do  if you define  &lt;project&gt;   &lt;parent&gt;     &lt;groupId&gt;excalibur&lt;/groupId&gt;     &lt;artifactId&gt;excalibur&lt;/artifactId&gt;     &lt;version&gt;1.0&lt;/version&gt;   &lt;/parent&gt;   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;   &lt;groupId&gt;excalibur&lt;/groupId&gt;   &lt;artifactId&gt;excalibur&lt;/artifactId&gt;   &lt;version&gt;1.0&lt;/version&gt;   &lt;name&gt;Excalibur Components&lt;/name&gt;   &lt;packaging&gt;pom&lt;/packaging&gt;   &lt;modules&gt;  .. ... &lt;/project&gt; you get :  d:\src\excalibur-trunk&gt;mvn &#91;INFO&#93; Scanning for projects... &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;ERROR&#93; FATAL ERROR &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; null &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Trace java.lang.StackOverflowError &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Total time: 1 second &#91;INFO&#93; Finished at: Mon Nov 21 18:29:03 CET 2005 &#91;INFO&#93; Final Memory: 1M/4M &#91;INFO&#93; ---------------------------------------------------------------------------- A better error message would be nice here.,Major,Edwin Punzalan,elpunzalan,Mon Nov 21 00:00:00 EST 2005,[MNG-1644] parent pom = child pom results in stack overflow error,Closed,improvement
MNG-166,Tue Mar 08 00:00:00 EST 2005,Fixed,add the scope parameter that can be one of: build  compile  runtime  test. transitive resolution will result in "compile" becoming "runtime"  but all others remaining the same. move classpath addition to maven-artifact and utilise it depending on scope.,Major,Brett Porter,brettporter,Mon Mar 07 00:00:00 EST 2005,[MNG-166] add depedency scope handling,Closed,improvement
MNG-1686,Mon Mar 06 00:00:00 EST 2006,Fixed,The introduction to repositories now has a section  which reference another page  regarding how to set up a mirror for the central repository  which was a common question on the user-list when ibiblio was down. This page also had several copy-and-paste errors  where the text probably originated from an xdoc. Bits of regular html-code had slipped in  making the generated page look rather silly  as you can see on the currently deployed site:   http://maven.apache.org/guides/introduction/introduction-to-repositories.html I have also fixed some small errors on various other pages.,Major,Brett Porter,brettporter,Fri Nov 25 00:00:00 EST 2005,[MNG-1686] Updates to the site  in particular introduction-to-repositories,Closed,improvement
MNG-1689,Wed Dec 21 00:00:00 EST 2005,Fixed,Relocation warnings of transitive dependencies shouldn't be printed in standard output because people gets confused  ask questions and try to change other people poms although they work correctly We should only print the warnings of the current pom so the author can improve it.,Major,Carlos Sanchez,carlos,Sat Nov 26 00:00:00 EST 2005,[MNG-1689] Only print relocation warnings in standard output for the current pom,Closed,improvement
MNG-1701,Sun Mar 28 00:00:00 EDT 2010,Fixed,Check that there're no two &lt;plugin&gt; elements of the same plugin,Trivial,Benjamin Bentmann,bentmann,Mon Nov 28 00:00:00 EST 2005,[MNG-1701] Validate that a plugin is not configured twice in the pom,Closed,improvement
MNG-1716,Mon Sep 25 00:00:00 EDT 2006,Fixed,The ResolutionListeners appear to be hardwired and it needs to be configurable in some fashion. When new ResolutionListener components are added they must be picked up in addition to the code that we are using which programmatically sets the resolution listener.,Major,null,null,Wed Nov 30 00:00:00 EST 2005,[MNG-1716] Need to be able to set the ResolutionListener,Closed,improvement
MNG-172,Sun Jun 12 00:00:00 EDT 2005,Fixed,eg: &lt;plugin&gt;   &lt;artifactId&gt;modello&lt;/artifactId&gt;   &lt;configuration&gt;     &lt;model&gt;maven.mdo&lt;/model&gt;   &lt;/configuration&gt;   &lt;goals&gt;     &lt;goal&gt;       &lt;name&gt;java&lt;/name&gt;       &lt;configuration&gt;         &lt;version&gt;3.0.0&lt;/version&gt;       &lt;/configuration&gt;     &lt;/goal&gt;     &lt;goal&gt;       &lt;name&gt;java&lt;/name&gt;       &lt;configuration&gt;         &lt;version&gt;4.0.0&lt;/version&gt;       &lt;/configuration&gt;     &lt;/goal&gt;   &lt;/goals&gt; &lt;/plugin&gt; ,Major,John Casey,jdcasey,Tue Mar 08 00:00:00 EST 2005,[MNG-172] allow multiple specifications of a goal configuration,Closed,improvement
MNG-173,Thu Mar 10 00:00:00 EST 2005,Fixed,&lt;build&gt;   &lt;sourceDirectory /&gt;   &lt;outputDirectory /&gt;   &lt;testSourceDirectory /&gt;   &lt;testOutputDirectory /&gt;   &lt;plugins /&gt; &lt;/build&gt; remove: properties dependency properties (use plugin configuration for bundling) package  packageGroups shortDescription logo x 2 (site.xml) branches aspectjSourceDirectory change: plugin id -&gt; group ID  artifact ID type -&gt; packaging ,Blocker,Brett Porter,brettporter,Tue Mar 08 00:00:00 EST 2005,[MNG-173] pom changes,Closed,improvement
MNG-174,Thu Mar 10 00:00:00 EST 2005,Fixed,&lt;ciManagement&gt;  ...   &lt;notifications&gt;     &lt;notification&gt;       &lt;type&gt;jabber&lt;/type&gt;       &lt;address&gt;brettporter&lt;/address&gt;       &lt;configuration&gt;         &lt;key&gt;value&lt;/key&gt;       &lt;/configuration&gt;     &lt;/notification&gt;   &lt;/notifications&gt; &lt;/ciManagement&gt; ,Major,Brett Porter,brettporter,Tue Mar 08 00:00:00 EST 2005,[MNG-174] ciManagement changes,Closed,improvement
MNG-175,Sat Mar 12 00:00:00 EST 2005,Fixed,&lt;modules&gt;   &lt;module&gt;foo&lt;/module&gt;   &lt;module&gt;bar&lt;/module&gt; &lt;/modules&gt;,Major,Brett Porter,brettporter,Tue Mar 08 00:00:00 EST 2005,[MNG-175] add modules handling to reactor,Closed,improvement
MNG-176,Thu Mar 10 00:00:00 EST 2005,Fixed, &lt;reports&gt;   &lt;outputDirectory /&gt;   &lt;plugins /&gt; &lt;/reports&gt;,Major,Brett Porter,brettporter,Tue Mar 08 00:00:00 EST 2005,[MNG-176] reports definition,Closed,improvement
MNG-178,Tue Jun 21 00:00:00 EDT 2005,Fixed,we need to be able to define filters for resources. It should be configurable by different profiles  and include properties files as well as individual property files.,Major,Brett Porter,brettporter,Tue Mar 08 00:00:00 EST 2005,[MNG-178] filter definition,Closed,improvement
MNG-1788,Fri Dec 09 00:00:00 EST 2005,Fixed,we also need to slip in a piece of metadata for the metadata token  but not publish it to the repo until 2.0 support is dropped,Blocker,Brett Porter,brettporter,Thu Dec 08 00:00:00 EST 2005,[MNG-1788] setup lax parsing of repository poms and metadata,Closed,improvement
MNG-18,Mon Aug 22 00:00:00 EDT 2005,Fixed, ,Major,John Casey,jdcasey,Sun Jun 27 00:00:00 EDT 2004,[MNG-18] Add offline mode,Closed,improvement
MNG-180,Wed Mar 09 00:00:00 EST 2005,Fixed,Need to eliminate maven.properties in favor of user.xml for local repository specification. This model is more flexible  in that it allows us to switch between multiple maven runtime profiles. This means: 1/ Adjusting MBoot2 to use the user.xml and prompt for it if not found. 2/ Integrating into maven proper at load-time.,Major,John Casey,jdcasey,Wed Mar 09 00:00:00 EST 2005,[MNG-180] Integrate UserModel support for local repository configuration,Closed,improvement
MNG-182,Mon Jun 13 00:00:00 EDT 2005,Fixed,the magic plugin discovery currently relies on it being group ID maven  artifactId maven-ALIAS-plugin. change this to: a) specify alias in the plugin descriptor  so that once a plugin is discovered the goal name can be defined explicitly b) build a plugin database so that this alias can have a reverse lookup to the group/artifactId c) need some known plugin repositories in the super POM and user configuration,Major,Brett Porter,brettporter,Wed Mar 09 00:00:00 EST 2005,[MNG-182] improve plugin discovery,Closed,improvement
MNG-183,Tue Mar 22 00:00:00 EST 2005,Fixed,currently  &lt;configuration&gt; is a properties element. This needs complication configuration  for example: &lt;jarManifest&gt;   &lt;shortDescription/&gt;   &lt;package/&gt; &lt;/jarManifest&gt; and &lt;resources&gt;   &lt;resource&gt;     &lt;directory /&gt;     &lt;includes /&gt;     &lt;excludes /&gt;   &lt;/resource&gt; &lt;/resources&gt; ,Major,Brett Porter,brettporter,Wed Mar 09 00:00:00 EST 2005,[MNG-183] complex plugin/goal configuration,Closed,improvement
MNG-1830,Thu Dec 18 00:00:00 EST 2008,Fixed,It might be a good idea to append   'compiled on &lt;timestamp&gt;'  when maven2 is invoked with '--version' swtich/option  just like Ant does. Can be helpful when compiling m2 locally 'n' times and need to ensure the m2 installation was infact updated or when was it last updated.  ,Minor,Brett Porter,brettporter,Tue Dec 13 00:00:00 EST 2005,[MNG-1830] add  a 'compiled on <timestamp>' label when maven 2 is invoked with --version option,Closed,improvement
MNG-184,Sat Jun 18 00:00:00 EDT 2005,Fixed,allow the goal configuration in the POM to override the phase that a particular goal will execute in,Major,null,null,Wed Mar 09 00:00:00 EST 2005,[MNG-184] add <phase/> to goal in POM,Closed,improvement
MNG-1862,Thu Jan 05 00:00:00 EST 2006,Fixed,Adding in the general faq the way to handle special characters (french and others).,Major,null,null,Sat Dec 17 00:00:00 EST 2005,[MNG-1862] add the way to handle special characters in site ,Closed,improvement
MNG-187,Tue Mar 15 00:00:00 EST 2005,Fixed,after the modules are loaded  store the projects so they can be used for aggregation (post processing),Major,Brett Porter,brettporter,Fri Mar 11 00:00:00 EST 2005,[MNG-187] add getModuleProjects() to MavenProject,Closed,improvement
MNG-188,Tue Mar 15 00:00:00 EST 2005,Fixed,don't go back to the local/remote repository if the POMS with the same group  artifact and version have already been discovered in the source tree,Major,Brett Porter,brettporter,Fri Mar 11 00:00:00 EST 2005,[MNG-188] cache poms during a reactor,Closed,improvement
MNG-189,Wed Mar 16 00:00:00 EST 2005,Fixed,currently the repository POMs have their paths translated which is unnecessary and incorrect. Additionally  any POM inside the project should always take preference in caching over the equivalent repository POM.,Major,Brett Porter,brettporter,Fri Mar 11 00:00:00 EST 2005,[MNG-189] treat repository POMs differently in builder,Closed,improvement
MNG-1903,Tue Jan 10 00:00:00 EST 2006,Fixed, ,Major,John Casey,jdcasey,Thu Dec 29 00:00:00 EST 2005,[MNG-1903] Make site descriptor attachment default behaviour,Closed,improvement
MNG-1907,Thu Jan 05 00:00:00 EST 2006,Fixed,Bootstraping maven fails if 'settings.xml' has a repository with 'scpexe' url - the IT tests fail with exceptions stating that "Unsupported Protocol: 'scpexe': Cannot find wagon which supports the requested protocol: scpexe" While this can easily be worked around by temporarily disabling the repo in settings.xml - I think a much better solution would be to bundle 'wagon-ssh-external' with Maven  since it is very common and in wise use (well  until the jscp issues are solved  Shouldn't affect the dist size since its only a few KB in size and the benefit is cool... To reproduce  make sure the scpexe-repo is in an active profile and try to bootstrap.,Minor,Brett Porter,brettporter,Fri Dec 30 00:00:00 EST 2005,[MNG-1907] Bundle wagon-ssh-external with maven dist,Closed,improvement
MNG-1913,Tue Jan 10 00:00:00 EST 2006,Fixed,The maven-jaxme-plugins home page is available at     http://ws.apache.org/jaxme/mp/ The plugin is available through     http://www.ibiblio org/maven2/ as usual. Please add the plugin to the list of plugins and to the plugin matrix as externally hosted.,Major,Brett Porter,brettporter,Mon Jan 02 00:00:00 EST 2006,[MNG-1913] Add maven-jaxme-plugin to list of plugins,Closed,improvement
MNG-192,Tue May 10 00:00:00 EDT 2005,Fixed,currently  it relies on the plugin being maven:maven-XXX-plugin  version 1.0-SNAPSHOT (unless specified in plugin management in the super POM). need to allow other groups/artifact IDs  perhaps again through repository metadata,Major,Brett Porter,brettporter,Sat Mar 12 00:00:00 EST 2005,[MNG-192] improve transparent plugin downloading,Closed,improvement
MNG-195,Tue Mar 22 00:00:00 EST 2005,Fixed,not a necessity for alpha-1  because the default is sufficient in most cases  but I find the user model too verbose  especially for the average use case. See if we can find a better way for the single profile user,Major,John Casey,jdcasey,Mon Mar 14 00:00:00 EST 2005,[MNG-195] user.xml is too verbose,Closed,improvement
MNG-1952,Thu Aug 10 00:00:00 EDT 2006,Fixed,Right now there are several plugin lists (3) making it harder to find a given plugin as this breaks the alphabetical order. In addition plugins that come later on the page get less visibility. I am sending a patch that lists all the plugins in the same table. If it's required we could create another column mentioning where the plugin comes from but I don't think that's required. I have also added the Cargo m2 plugin which was missing from the list. ,Major,Dennis Lundberg,dennisl@apache.org,Wed Jan 11 00:00:00 EST 2006,[MNG-1952] Give equal footing to all m2 plugins and add Cargo plugin to the list,Closed,improvement
MNG-1957,Wed Feb 04 00:00:00 EST 2009,Fixed,For now  &lt;jdk&gt;&lt;/jdk&gt; provides only one operator '!' which means negation  but it would be great if i can use '+' and ~ operator: &lt;jdk&gt;1.5+&lt;/jdk&gt;  &lt;!-- this will be activated when the current JDK version is 1.5 or above (e.g. 1.6) --&gt; &lt;jdk&gt;1.1 ~ 1.4&lt;/jdk&gt; &lt;!-- this will be activated when the current JDK version is between 1.1 and 1.4 --&gt; &lt;jdk&gt;~ 1.3&lt;/jdk&gt; &lt;!-- this will be activated when the current JDK version is 1.3 or below --&gt; &lt;jdk&gt;1.4 ~&lt;/jdk. &lt;!-- the same with 1.5+ --&gt;,Major,Brett Porter,brettporter,Thu Jan 12 00:00:00 EST 2006,[MNG-1957] <jdk></jdk> clause in the activation section has to provide more complex expressions.,Closed,improvement
MNG-1960,Thu Jan 12 00:00:00 EST 2006,Fixed,my viewcvs setup requires http authentication to view the source.  This means that whenever I try to add a new maven project  it fails.,Major,null,null,Thu Jan 12 00:00:00 EST 2006,[MNG-1960] allow for http authentication when adding m2 project,Closed,improvement
MNG-1984,Mon Feb 06 00:00:00 EST 2006,Fixed,assemble questions and problems from the users list  and create documentation for managing bad POM dependency data using optional dependencies and dependency exclusions. Document in depth how these two features work  and how they impact users of POMs (even if the exclusion is in a transitive dependency).,Critical,Allan Ramirez,aramirez,Wed Jan 18 00:00:00 EST 2006,[MNG-1984] document optional dependencies and dependency exclusions,Closed,improvement
MNG-1997,Sat Nov 04 00:00:00 EST 2006,Fixed,Your favorite IDE probably supports xsd schema's for pom.xml and settings.xml editing. Yet very few have the defined the xsd in those files because they don't know about it. The guides should note that pom.xml files best start with: &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt; Why isn't it http://maven.apache.org/xsd/maven-v4_0_0.xsd (notice the xsd subdirectory) btw? and the settings.xml starts with: &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/???/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"         xsi:schemaLocation="http://maven.apache.org/???/4.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"&gt; Of course  replace the ??? with something (I did "settings" but I ahve no idea if that's ok).,Major,Siveton Vincent,siveton,Fri Jan 20 00:00:00 EST 2006,[MNG-1997] document xsd support for pom and settings in guides,Closed,improvement
MNG-203,Wed Mar 16 00:00:00 EST 2005,Fixed,can we please change this to &lt;config&gt; or &lt;settings&gt; or something more user friendly? xml.tagName="..." in modello and whatever mboot changes are necessary should do the trick.,Major,John Casey,jdcasey,Tue Mar 15 00:00:00 EST 2005,[MNG-203] change top level tag from <userModel> to something better,Closed,improvement
MNG-2030,Mon Feb 20 00:00:00 EST 2006,Fixed,output of mvn -X needs to include the version number so when an user posts the output we should be able to identify which version is he running against,Critical,null,null,Wed Feb 01 00:00:00 EST 2006,[MNG-2030] Make -X show maven version as first thing,Closed,improvement
MNG-205,Tue Mar 15 00:00:00 EST 2005,Fixed,now that the reactor can be invoked automatically  add a --non-recursive (-N) option to m2 that will prevent the traversal into modules.,Major,Brett Porter,brettporter,Tue Mar 15 00:00:00 EST 2005,[MNG-205] add a non-recursive mode,Closed,improvement
MNG-2067,Tue Dec 29 00:00:00 EST 2009,Fixed,I have noticed several places where maven could provide provide more informaton to error outputs  e.g mvn compile outputs: "Validation Messages:     &#91;0&#93;  For dependency Dependency  {groupId=x.y.lf  artifactId=lf-test  version=0.1  type=jar} : system-scoped dependency must specify an absolute path systemPath." Request: output the path that was specific (with expanded properties). This issue is not specific to the example above. If people have more examples please add them as comment to this issue. While on it  I can't seem to find a list of available/provided properties for Maven 2.x anywhere? Is there one? E.g. what is the absolute path to the pom.xml file / source directory / target directory / etc?,Trivial,null,null,Sun Feb 12 00:00:00 EST 2006,[MNG-2067] Provide (more) details to generic error outputs,Closed,improvement
MNG-208,Fri Sep 23 00:00:00 EDT 2005,Fixed,this is required for something like the IDEA plugin  so it knows which project to write a workspace/project file for - otherwise it will write them for all "pom"s in a tree even if they aren't the top level  and won't write them for an individual JAR project.,Trivial,Brett Porter,brettporter,Wed Mar 16 00:00:00 EST 2005,[MNG-208] flag project that was the root of the execution,Closed,improvement
MNG-2096,Tue Feb 21 00:00:00 EST 2006,Fixed,not quite analogous  but required nonetheless: ... &lt;phase&gt;   &lt;id&gt;test&lt;/id&gt;   &lt;configuration&gt;    ...  &lt;/configuration&gt; &lt;/phase&gt; Should apply that configuration to everything in the phase (whether introduced here  or already in the base lifecycle).,Major,Brett Porter,brettporter,Tue Feb 21 00:00:00 EST 2006,[MNG-2096] allow <configuration> with <execution> in a lifecycle overlay  like a plugin allows,Closed,improvement
MNG-21,Thu Jul 22 00:00:00 EDT 2004,Fixed,The two methods: MavenProject build( File project  boolean useParentPom )     throws ProjectBuildingException; MavenProject build( File project  boolean useParentPom  boolean followTransitiveDeps )     throws ProjectBuildingException; should be replaced with MavenProject build( File project  boolean followTransitiveDeps )     throws ProjectBuildingException;,Major,null,null,Wed Jun 30 00:00:00 EDT 2004,[MNG-21] Clean up the MavenProjectBuilder,Closed,improvement
MNG-210,Wed Jun 08 00:00:00 EDT 2005,Fixed,the repositories specified for both deployment and download in the project should be able to be restricted for use in certain environments. This allows us to add the ability to do build promotion (dev -&gt; test -&gt; QA -&gt; prod) and deprecation (archive builds no longer for use - only use historically). ,Major,null,null,Thu Mar 17 00:00:00 EST 2005,[MNG-210] allow different profiles/environments for repositories,Closed,improvement
MNG-2107,Tue Dec 29 00:00:00 EST 2009,Fixed,Tested this on 2.0.2 and on the 2.0.3 RC. I get warned many many times about bad poms  it would be great if this only happened once: &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Building XFire JAX-WS Support &#91;INFO&#93;    task-segment: &#91;install&#93; &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; &#91;resources:resources&#93; &#91;INFO&#93; Using default encoding to copy filtered resources. &#91;WARNING&#93; POM for 'stax:stax:pom:1.1.2-dev:test' is invalid. It will be ignored for artifact resolution. Reason: Not a v 4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 Downloading: https://maven-repository.dev.java.net/nonav/repository/xfire/poms/sun-saaj-impl-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository java.net (https://maven-repository.dev.java.net/nonav/repository) Downloading: http://dist.codehaus.org//xfire/poms/sun-saaj-impl-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository codehaus (http://dist.codehaus.org/) Downloading: http://cvs.apache.org/maven-snapshot-repository//xfire/poms/sun-saaj-impl-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository apache-snapshots (http://cvs.apache.org/maven-snapshot-repository/) Downloading: http://test.maven.codehaus.org/maven2//xfire/sun-saaj-impl/2.0-ea3/sun-saaj-impl-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository central (http://repo1.maven.org/maven2) Downloading: https://maven-repository.dev.java.net/nonav/repository/xfire/poms/sun-saaj-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository java.net (https://maven-repository.dev.java.net/nonav/repository) Downloading: http://dist.codehaus.org//xfire/poms/sun-saaj-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository codehaus (http://dist.codehaus.org/) Downloading: http://cvs.apache.org/maven-snapshot-repository//xfire/poms/sun-saaj-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository apache-snapshots (http://cvs.apache.org/maven-snapshot-repository/) Downloading: http://test.maven.codehaus.org/maven2//xfire/sun-saaj-api/2.0-ea3/sun-saaj-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository central (http://repo1.maven.org/maven2) Downloading: https://maven-repository.dev.java.net/nonav/repository/xfire/poms/sun-jaxws-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository java.net (https://maven-repository.dev.java.net/nonav/repository) Downloading: http://dist.codehaus.org//xfire/poms/sun-jaxws-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository codehaus (http://dist.codehaus.org/) Downloading: http://cvs.apache.org/maven-snapshot-repository//xfire/poms/sun-jaxws-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository apache-snapshots (http://cvs.apache.org/maven-snapshot-repository/) Downloading: http://test.maven.codehaus.org/maven2//xfire/sun-jaxws-api/2.0-ea3/sun-jaxws-api-2.0-ea3.pom &#91;WARNING&#93; Unable to get resource from repository central (http://repo1.maven.org/maven2) &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;INFO&#93; &#91;compiler:compile&#93; &#91;INFO&#93; Nothing to compile - all classes are up to date &#91;WARNING&#93; POM for 'stax:stax:pom:1.1.2-dev:test' is invalid. It will be ignored for artifact resolution. Reason: Not a v 4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;INFO&#93; [antrun:run  {execution: default} ] &#91;INFO&#93; Executing tasks wsgen:    &#91;delete&#93; Deleting directory C:\eclipse\workspace\xfire\xfire-jaxws\target\test-services     &#91;mkdir&#93; Created dir: C:\eclipse\workspace\xfire\xfire-jaxws\target\test-services 0    &#91;main&#93; DEBUG org.codehaus.xfire.transport.DefaultTransportManager  - Registered transport org.codehaus.xfire.transp ort.local.LocalTransport@46128d 16   &#91;main&#93; DEBUG org.codehaus.xfire.transport.DefaultTransportManager  - Registered transport org.codehaus.xfire.transp ort.dead.DeadLetterTransport@6bef53 16   &#91;main&#93; DEBUG org.codehaus.xfire.transport.DefaultTransportManager  - Registered transport org.codehaus.xfire.transp ort.http.SoapHttpTransport@2d67b4 32   &#91;main&#93; DEBUG org.codehaus.xfire.transport.DefaultTransportManager  - Registered transport org.codehaus.xfire.transp ort.http.HttpTransport@f35d97 echo\wrapped\Echo.java echo\wrapped\EchoResponse.java echo\wrapped\ObjectFactory.java echo\wrapped\package-info.java 2766 &#91;main&#93; INFO  org.codehaus.xfire.gen.jsr181.AbstractServiceGenerator  - Creating class services.echo.EchoPortType 2766 &#91;main&#93; INFO  org.codehaus.xfire.gen.jsr181.AbstractServiceGenerator  - Creating class services.echo.EchoImpl services\echo\EchoImpl.java services\echo\EchoPortType.java services\echo\EchoService.java echo\wrapped\Echo.java echo\wrapped\EchoResponse.java echo\wrapped\ObjectFactory.java echo\wrapped\package-info.java 2954 &#91;main&#93; INFO  org.codehaus.xfire.gen.jsr181.AbstractServiceGenerator  - Creating class services.headerout.EchoPortTy pe 2969 &#91;main&#93; INFO  org.codehaus.xfire.gen.jsr181.AbstractServiceGenerator  - Creating class services.headerout.EchoImpl services\headerout\EchoImpl.java services\headerout\EchoPortType.java services\headerout\EchoService.java xfire\authenticate\fault\AuthenticationFault.java xfire\authenticate\fault\ObjectFactory.java xfire\authenticate\fault\package-info.java xfire\authenticate\Authenticate.java xfire\authenticate\AuthenticateResponse.java xfire\authenticate\ObjectFactory.java xfire\authenticate\package-info.java 3157 &#91;main&#93; INFO  org.codehaus.xfire.gen.jsr181.AbstractServiceGenerator  - Creating class services.auth.AuthServicePort Type 3157 &#91;main&#93; INFO  org.codehaus.xfire.gen.jsr181.AbstractServiceGenerator  - Creating class services.auth.AuthServiceImpl services\auth\AuthServiceImpl.java services\auth\AuthServicePortType.java services\auth\AuthServiceService.java services\auth\AuthenticationFault_Exception.java &#91;INFO&#93; Executed tasks &#91;INFO&#93; Registering compile test source root c:\eclipse\workspace\xfire\xfire-jaxws\target\test-services &#91;INFO&#93; &#91;resources:testResources&#93; &#91;INFO&#93; Using default encoding to copy filtered resources. &#91;WARNING&#93; POM for 'stax:stax:pom:1.1.2-dev:test' is invalid. It will be ignored for artifact resolution. Reason: Not a v 4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;INFO&#93; &#91;compiler:testCompile&#93; Compiling 21 source files to c:\eclipse\workspace\xfire\xfire-jaxws\target\test-classes &#91;WARNING&#93; POM for 'stax:stax:pom:1.1.2-dev:test' is invalid. It will be ignored for artifact resolution. Reason: Not a v 4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;WARNING&#93; POM for 'jaxen:jaxen:pom:1.1-beta-8:compile' is invalid. It will be ignored for artifact resolution. Reason: N ot a v4.0.0 POM. &#91;WARNING&#93; POM for 'jdom:jdom:pom:1.0:compile' is invalid. It will be ignored for artifact resolution. Reason: Parse erro r reading POM. Reason: comment started on line 32 and column 9 was not closed (position: END_TAG seen ...&lt;/dependencies&gt; \n&lt;/project&gt;... @40:11) caused by: java.io.EOFException: no more data available - expected end tags &lt;/dependencies&gt;&lt;/pro ject&gt; to close start tag &lt;dependencies&gt; from line 6 and start tag &lt;project&gt; from line 1  parser stopped on END_TAG seen ...&lt;/dependencies&gt;\n&lt;/project&gt;... @40:11 &#91;WARNING&#93; POM for 'xfire:xfire-jsr181-api:pom:1.0-M1:compile' is invalid. It will be ignored for artifact resolution. Re ason: Not a v4.0.0 POM. &#91;INFO&#93; &#91;surefire:test&#93; &#91;INFO&#93; Setting reports dir: c:\eclipse\workspace\xfire\xfire-jaxws\target/surefire-reports,Major,null,null,Fri Feb 24 00:00:00 EST 2006,[MNG-2107] Only warn once about invalid poms,Closed,improvement
MNG-212,Wed Apr 06 00:00:00 EDT 2005,Fixed,based on previous dist plugin and what openejb use.,Major,Brett Porter,brettporter,Thu Mar 17 00:00:00 EST 2005,[MNG-212] finish assemble plugin,Closed,improvement
MNG-2129,Fri Aug 11 00:00:00 EDT 2006,Fixed,it says:  $ svn checkout http://svn.apache.org/repos/asf/maven/components/trunk/ maven-site We really should set the SCM URL correctly in the site pom again (to point to the site SCM)  and the generated report should be excluded from the navigation. It could still be generated and linked from another doc that describes helping with the docs. ,Major,Siveton Vincent,siveton,Mon Mar 06 00:00:00 EST 2006,[MNG-2129] generated source repo page is misleading when added to the "general site".,Closed,improvement
MNG-2153,Sat Nov 04 00:00:00 EST 2006,Fixed,Attached you can find updated resource bundles for pl and en locales that belong to components/maven-core module.,Major,Siveton Vincent,siveton,Wed Mar 15 00:00:00 EST 2006,[MNG-2153] Updated resource bundles for pl and en locales,Closed,improvement
MNG-217,Tue Mar 22 00:00:00 EST 2005,Fixed,Currently  the mojos use a parameter map. Setting this up is a little tedious and can be error prone. The parameters can be populated as fields. This will make them simpler to develop and less error prone. It should also facilitate easier use of complex configuration like lists and nested objects using the existing plexus configuration technique. It may be appropriate to move the qdox tags to the parameters themselves  reducing the need for as much configuration  but that is a secondary task - to be opened later after more thought. If possible the request should be removed (the log can be made a part of AbstractPlugin - need to check anything else in the request that might not suit this). The reponse can already be removed and made into a return type as it only has one object within it. THis greatly simplifies the interface to: public PluginExecutionResult execute()   throws PluginExecutionException; ,Major,Brett Porter,brettporter,Sat Mar 19 00:00:00 EST 2005,[MNG-217] change mojos to per-lookup - use fields instead of req parms,Closed,improvement
MNG-218,Fri Apr 15 00:00:00 EDT 2005,Fixed,currently  any expressions that evaluate as strings are not converted to the correct primitive type when populating the plugin (however the component configurator will correctly convert the types),Major,Brett Porter,brettporter,Tue Mar 22 00:00:00 EST 2005,[MNG-218] convert expression strings to primitive types in plugin population,Closed,improvement
MNG-2187,Tue Mar 30 00:00:00 EDT 2010,Fixed,When the pom is encoded in a charset different than the one declared in the xml header (UTF8 by default) and containing an special char (� or something like that)  under Sun's JDK there's no error but under IBM JDK it crashes with sun.io.MalformedInputException It'd be good if we could check first the encoding or capture the exception and show an error message instead. &#91;INFO&#93; Scanning for projects... &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;ERROR&#93; FATAL ERROR &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Error building POM (may not be this project's POM). Project ID: unknown Reason: Failed to build model from file '/home/demo/plexus-compiler/pom.xml'. Error: 'null' &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Trace org.apache.maven.reactor.MavenExecutionException: Failed to build model from file '/home/demo/plexus-compiler/pom.xml'. Error: 'null'         at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:365)         at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:278)         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)         at org.apache.maven.cli.MavenCli.main(MavenCli.java:249)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:85)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:58)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:60)         at java.lang.reflect.Method.invoke(Method.java:391)         at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)         at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)         at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)         at org.codehaus.classworlds.Launcher.main(Launcher.java:375) Caused by: org.apache.maven.project.ProjectBuildingException: Failed to build model from file '/home/demo/plexus-compiler/pom.xml'. Error: 'null'         at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1103)         at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:289)         at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:274)         at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:515)         at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:447)         at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:351)         ... 12 more Caused by: sun.io.MalformedInputException         at sun.io.ByteToCharUTF8.convert(ByteToCharUTF8.java(Compiled Code))         at sun.nio.cs.StreamDecoder$ConverterSD.convertInto(StreamDecoder.java(Inlined Compiled Code))         at sun.nio.cs.StreamDecoder$ConverterSD.implRead(StreamDecoder.java(Compiled Code))         at sun.nio.cs.StreamDecoder.read(StreamDecoder.java(Compiled Code))         at java.io.InputStreamReader.read(InputStreamReader.java:208)         at java.io.Reader.read(Reader.java:113)         at org.codehaus.plexus.util.IOUtil.copy(IOUtil.java:212)         at org.codehaus.plexus.util.IOUtil.copy(IOUtil.java:200)         at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1117)         at org.apache.maven.project.DefaultMavenProjectBuilder.readModel(DefaultMavenProjectBuilder.java:1094)         ... 17 more &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Total time: 1 second &#91;INFO&#93; Finished at: Wed Mar 29 04:25:41 PST 2006 &#91;INFO&#93; Final Memory: 2M/5M &#91;INFO&#93; ---------------------------------------------------------------------------- ,Minor,Benjamin Bentmann,bentmann,Wed Mar 29 00:00:00 EST 2006,[MNG-2187] Improve error message when the pom is encoded in the wrong charset,Closed,improvement
MNG-2188,Tue Aug 14 00:00:00 EDT 2007,Fixed,There's a canGenerateReport() method in a ReportMojo. This method is called by the site phase to decide if the mojo should be called or not. This is cool. However the user can call directly the report mojo and in that case the canGenerateReport() method is not called automatically. Thus the solution for a plugin developer is to write: public void executeReport() {     if (canGenerateReport() )     {          [...]     } } Which means that the canGenerateReport method is going to be called twice when mvn site is executed.,Major,John Casey,jdcasey,Wed Mar 29 00:00:00 EST 2006,[MNG-2188] Report mojos should check canGenerateReport() when called directly,Closed,improvement
MNG-219,Thu Apr 21 00:00:00 EDT 2005,Fixed,add wagon listeners,Major,Brett Porter,brettporter,Tue Mar 22 00:00:00 EST 2005,[MNG-219] deploy:deploy should display progress,Closed,improvement
MNG-220,Mon May 09 00:00:00 EDT 2005,Fixed,some field names cannot be used (eg "package") but it would be good to use as the configuration - allow some aliasing so package -&gt; packageName  for example,Minor,John Casey,jdcasey,Tue Mar 22 00:00:00 EST 2005,[MNG-220] allow an alias for plugin fields,Closed,improvement
MNG-2202,Sun Jul 03 00:00:00 EDT 2011,Fixed,It would be great if the timezone element in Maven 2 could be extendend in a way that makes it able to determine  the offset own its own as well as to be able to make adjustments to daylight savings. The following suggestion from the Maven Users mailing list seems to be an interesting approach.  Note: In addition to the posting from Ian Stewart I would like to add that I believe that the offset element is not needed in case the timezone has a name and the dayligh savings element. ----Original Message---- From: ian.d.stewart@jpmchase.com ian.d.stewart@jpmchase.com  Sent: Tuesday  April 04  2006 6:36 AM To: Maven Users List Subject: Re: TimeZone Element in pom.xml Note that the observation of Summertime/Daylight Savings Time does not change the timezone where a developer resides. Instead of changing everybody's timezone twice a year  I would recommend making the timezone element its own complex type  more inline with the java.util.TimeZone class: &lt;timezone&gt;       &lt;name&gt;Eastern&lt;/name&gt;       &lt;offset&gt;-5&lt;/offset&gt;       &lt;useDaylight&gt;true&lt;/useDaylight&gt; &lt;/timezone&gt; It's better to be hated for who you are than loved for who you are not Ian D. Stewart Appl Dev Analyst-Advisory  DCS Automation JPMorganChase Global Technology Infrastructure Phone: (614) 244-2564 Pager: (888) 260-0078                       "Andreas Guther"                                                                                                                            &lt;Andreas.Guther@marke        To:       "Maven Users List" &lt;users@maven.apache.org&gt;                                                          ttools.com&gt;                  cc:                                                                                                                                         Subject:  TimeZone Element in pom.xml                                                                          04/04/2006 12:43 AM                                                                                                                         Please respond to                                                                                                                           "Maven Users List"                                                                                                    Hi Is there a way in Maven to adjust the TimeZone element in the pom.xml to daylight savings time? We have an international team and I like the fact that we can see on the maven generated web site's team list what time it is for a specific developer.  What I am missing is the automatic adjustment for example for my time zone which is in winter times -8 and in summer times -7.  I just made a global search and replace in my pom.xml but actually it would be more convenient maven could do that for me. Is there anything that helps me solving the problem or is this worth an enhancement request? Andreas,Minor,null,null,Tue Apr 04 00:00:00 EDT 2006,[MNG-2202] Improve pom to handle daylight saving changes,Closed,improvement
MNG-221,Tue Apr 26 00:00:00 EDT 2005,Fixed,now that these are mapped to fields  the name  type and default value can be derived from the field definition instead  simplifying the rest. validator should no longer be necessary. The other parameter attributes (required  expression) could be specified on the field themselves. Description can be the javadoc,Major,John Casey,jdcasey,Tue Mar 22 00:00:00 EST 2005,[MNG-221] simplify mojo qdox specification,Closed,improvement
MNG-2229,Sat Apr 15 00:00:00 EDT 2006,Fixed,this patch adds the ability to put svn commands into the prebuild-hook.txt file.. this is useful if you want to it plugin to do something like do a svn export from a repo to test building something without having to add the things source into the actual it test... ,Major,Jason van Zyl,jvanzyl,Sat Apr 15 00:00:00 EDT 2006,[MNG-2229] maven-core-it-verifier needs to be able to use svn in the prebuild-hook.txt file,Closed,improvement
MNG-2233,Tue Apr 18 00:00:00 EDT 2006,Fixed,I moved things around a little bit in the main method where tests are discovered and added to the testing queue  the behavior should be consistent and I have it running against the core maven its right now to validate.. basically  if you run the verifier without any arguments it will try and discover all unit tests in the current directory and down  if you put something on the argument line that isn't a #### or starting with 'it' then it will in turn try and discover tests in that directory... it uses the latest FileUtils.getFiles() looking for the presence of a 'goals.txt' file since that is required to be a test in anyway... I also updated the FileUtils and its deps from the plexus-utils trunk (and added StringUtils for good measure),Major,Jason van Zyl,jvanzyl,Mon Apr 17 00:00:00 EDT 2006,[MNG-2233] patch for nested and auto-discovery of integration tests,Closed,improvement
MNG-224,Wed Mar 30 00:00:00 EST 2005,Fixed,do some basic dependency checking so that only modified .java files are recompiled (in a similar way to how the Ant &lt;javac task did for m1). This will require changes to plexus-compiler  and may require changes in the maven-compiler-plugin. ,Blocker,John Casey,jdcasey,Wed Mar 23 00:00:00 EST 2005,[MNG-224] improve compiler performance,Closed,improvement
MNG-2246,Thu Aug 10 00:00:00 EDT 2006,Fixed,Guide goes from  mvn sample.plugin:maven-hello-plugin:1.0-SNAPSHOT:sayhi to   mvn hello:sayhi without explaining why the version number and the maven-$name-plugin pattern are special. Tentative patch attached. ,Minor,Dennis Lundberg,dennisl@apache.org,Thu Apr 27 00:00:00 EDT 2006,[MNG-2246] mojo developer guide takes a shortcut at explaining fully how the command line can be shortened,Closed,improvement
MNG-2250,Thu Aug 10 00:00:00 EDT 2006,Fixed,Reading through the Maven Getting Started Guide and the Philisophy of Maven I found a few places were words seemd to be missing and other places where words were misspelled. This patch should fix those.,Minor,Dennis Lundberg,dennisl@apache.org,Fri Apr 28 00:00:00 EDT 2006,[MNG-2250] fix misspelled and added missing words in getting started guide and philosphy of maven,Closed,improvement
MNG-2252,Wed Feb 28 00:00:00 EST 2007,Fixed,When ready  upgrade to plexus-utils 1.3 This issue is just a placeholder for other ones to depend on,Major,Jason van Zyl,jvanzyl,Fri Apr 28 00:00:00 EDT 2006,[MNG-2252] Upgrade to plexus-utils 1.3,Closed,improvement
MNG-2255,Sat Dec 13 00:00:00 EST 2008,Fixed,To avoid maintaining the plexus XMLPullParser we should move to a standard implementation like StaX As mentioned in DOXIA-60: There's a performance white paper http://java.sun.com/performance/reference/whitepapers/StAX-1_0.pdf The best implementation seems to be http://woodstox.codehaus.org/ Another nice set of utilities at http://wiki.java.net/bin/view/Javawsxml/StaxUtilsProject The indentator could be used instead of the PrettyPrintXMLWriter,Critical,null,null,Sat Apr 29 00:00:00 EDT 2006,[MNG-2255] Use a external XML Pull parser instead of plexus one,Closed,improvement
MNG-2290,Mon Oct 22 00:00:00 EDT 2007,Fixed,Maven has quite some elements where a URL or a path is modified automatically for child POMs (the ones I am currently aware of): url scm/connection scm/developerConnection scm/url distributionManagement/site/url While expanding this path with "/${pom.artifactId}" sounds reasonable  this approach fails badly for complex projects with more hierarchy levels. Suppose we have a directory structure like: project core provider commons impl1 In this hierarchy all POMs for project  core and provider are of package type pom  while commons and impl1 is of type jar. The "artifactId" approach now simply assumes that all POMs in the hierarchy are named like the current directory. This does simply not match. Suppose those jar artifacts are used in an enterprise or web app. Then every artifact is located in one single directory and therefore the names have to be unique. But if you decide to take an artifact name different to the directory name  you have to add the definition in every POM  because the scm elements are simply wrong. An even worse scenario are components that can be provided using different technologies. We have a lot of such structures: component jar war ear jar: the core functionality war: the core functionality integrated and eccessible with a web application ear: the complete component as enterprise app  if it makes sense to deploy the functionality on a different app server component has a POM of package type pom; jar  war and ear have POMs with the according package type. All of the three POMs use the same artifactId though. In this case not only the scm elements break  but also the URLs for the site  since they are all the same for all three artifacts. All of this could have been avoided  if the expanded part is not the artifactId  but the basename of the current directory. Especially for the scm elements  this is IMHO the only valid assumption. It would already help us  if this auto-expansion could be turned off to allow the definition of a single property in each POM for a correct interpolation of those values  but there seems no such option 1. So you have to add those elements under all circumstances into every POM. 1) The tagBase of the release plugin does no such auto-expansion  which makes it quite easy to use a property for it  that can be set individually in every POM without adding any plugin configuration.,Major,null,null,Fri May 12 00:00:00 EDT 2006,[MNG-2290] Generated URLs in POMs of child modules,Closed,improvement
MNG-23,Thu Jul 01 00:00:00 EDT 2004,Fixed,An exception needs to be bubbled up  we don't want to silently remove POMs from the local repository.,Major,null,null,Thu Jul 01 00:00:00 EDT 2004,[MNG-23] ArtifactCollector should not quiety remove defective POMs,Closed,improvement
MNG-230,Fri Oct 07 00:00:00 EDT 2005,Fixed,we are now downloading timestamped versions and saving them under that version ID. this would be of great benefits to IDEs so that the descriptor does not need to be updated whenever a new snapshot is resolved. the reason this is not currently practical is that a POM is first resolved  and following that there is nothing to indicate that the JAR needs to be updated. ,Major,Brett Porter,brettporter,Tue Mar 29 00:00:00 EST 2005,[MNG-230] attempt to reintroduce the use of a single SNAPSHOT file locally,Closed,improvement
MNG-2306,Sat Nov 04 00:00:00 EST 2006,Fixed,I've created Live templates config file for the mojo javadoc annotations. This file can be made available through the maven site (i.e. on the mojo-api-specification page).,Major,Siveton Vincent,siveton,Fri May 19 00:00:00 EDT 2006,[MNG-2306] mojo javadoc annotations support for IntelliJ Idea,Closed,improvement
MNG-2307,Mon Jun 19 00:00:00 EDT 2006,Fixed,There should be  a link to maven-scm-plugin (http://maven.apache.org/scm/plugins/index.html) on http://maven.apache.org/plugins/,Major,Brett Porter,brettporter,Fri May 19 00:00:00 EDT 2006,[MNG-2307] Link to SCM plugin,Closed,improvement
MNG-231,Wed Mar 30 00:00:00 EST 2005,Fixed,these have a lot in common - see if the configuration can be simplified by using something like: &lt;configuration&gt;   &lt;archive&gt;     &lt;manifest&gt;...&lt;/manifest&gt;     etc   &lt;/archive&gt; &lt;/configuration&gt;,Minor,Brett Porter,brettporter,Tue Mar 29 00:00:00 EST 2005,[MNG-231] change archive configuration for jar  etc to be a nested element,Closed,improvement
MNG-2311,Fri Aug 11 00:00:00 EDT 2006,Fixed,hungarian translation of the resource files as described in http://maven.apache.org/plugins/maven-site-plugin/i18n.html,Major,Siveton Vincent,siveton,Sun May 21 00:00:00 EDT 2006,[MNG-2311] site plugin i18n HU,Closed,improvement
MNG-2324,Fri May 26 00:00:00 EDT 2006,Fixed,getWagon(String protocol) returns an unconfigured Wagon which is confusing  deprecate it and add a new getWagon(Repository) that returns a configured Wagon,Major,Carlos Sanchez,carlos,Fri May 26 00:00:00 EDT 2006,[MNG-2324] Add a getWagon(Repository) method to the WagonManager,Closed,improvement
MNG-2346,Wed Jun 07 00:00:00 EDT 2006,Fixed,New FAQ entry  bec it took me some hours to determine what went wrong with my installation.,Major,Edwin Punzalan,elpunzalan,Wed Jun 07 00:00:00 EDT 2006,[MNG-2346] FAQ: Why does maven compile my test classes but does not run them?,Closed,improvement
MNG-2355,Fri Aug 11 00:00:00 EDT 2006,Fixed,While trying to figure out how the AbstractCompilerMojo worked  I found the @component tag for the compilerManager field.  There is a reference page for the mojo-api-spec  but this page doesn't talk about the "component" tag.   That page seems like a logical place to put this documentation  or at least a reference to it if it is already somewhere else. ,Major,Siveton Vincent,siveton,Thu Jun 08 00:00:00 EDT 2006,[MNG-2355] Documentation of the @component javadoc tag,Closed,improvement
MNG-2356,Sun Dec 27 00:00:00 EST 2009,Fixed,Also document why using your installed maven to recompile this plugin is a bad idea ,Trivial,null,null,Fri Jun 09 00:00:00 EDT 2006,[MNG-2356] Add timing information to integration tests,Closed,improvement
MNG-2357,Tue Jun 13 00:00:00 EDT 2006,Fixed,small things including a little bit of doc for integration tests document 2 undocumented integration tests svn:ignore ,Trivial,Carlos Sanchez,carlos,Fri Jun 09 00:00:00 EDT 2006,[MNG-2357] misc cleanup,Closed,improvement
MNG-2376,Sun Apr 08 00:00:00 EDT 2007,Fixed,The shell script outputs $JAVA_VERSION.  In my case  in an ill-fated attempt to get maven to use JDK 1.4  this was set to 1.4 but JAVA_HOME was already set (in .profile or wherever)  to that of the current JDK (1.5).  So it is inconsistent and led me on a wild goose chase to track down a problem.  If Maven is going to output the java version  do it from java code using the right system property.  Only use JAVA_VERSION to help select a JAVA_HOME  if JAVA_HOME isn't set. Perhaps there is some standard approach to this sort of thing but I am unsure.,Minor,Brian Fox,brianf,Fri Jun 16 00:00:00 EDT 2006,[MNG-2376] Have Java code output Java version  not the shell script,Closed,improvement
MNG-2379,Tue Nov 07 00:00:00 EST 2006,Fixed,http://cvs.peopleware.be/training/maven/maven2/ Could be in the articles/books section,Major,Siveton Vincent,siveton,Sat Jun 17 00:00:00 EDT 2006,[MNG-2379] review and link to free Maven courseware,Closed,improvement
MNG-2391,Sat Oct 24 00:00:00 EDT 2009,Fixed,this needs to go beyond basic construction. In particular  the group and artifact ID should always be constrained to valid characters. Perhaps this could be done via the modello model.,Major,Benjamin Bentmann,bentmann,Sat Jun 17 00:00:00 EDT 2006,[MNG-2391] improve validation of POM elements,Closed,improvement
MNG-2405,Sun Jun 25 00:00:00 EDT 2006,Fixed, ,Major,Edwin Punzalan,elpunzalan,Sun Jun 25 00:00:00 EDT 2006,[MNG-2405] Put the docck plugin in the plugin-parent pom ci profile,Closed,improvement
MNG-2406,Wed Jun 28 00:00:00 EDT 2006,Fixed,also  update the plugin report and add a separate column for this tag,Major,Edwin Punzalan,elpunzalan,Mon Jun 26 00:00:00 EDT 2006,[MNG-2406] Add @since javadoc tags to plugin parameters,Closed,improvement
MNG-242,Tue Apr 05 00:00:00 EDT 2005,Fixed,there is a partial requirement that M2_HOME is set. This will probe awkward for new users as seen on IRC  so remove the need for it (but still allow it as a way to specify your HOME and override the use of the script location which is the default). maven-core-it seems to require it presently for maven.home.,Major,null,null,Mon Apr 04 00:00:00 EDT 2005,[MNG-242] remove need for M2_HOME,Closed,improvement
MNG-2471,Sat Jun 02 00:00:00 EDT 2007,Fixed, google for now ,Major,null,null,Mon Jul 31 00:00:00 EDT 2006,[MNG-2471] Add search box to the index page,Closed,improvement
MNG-2483,Wed Feb 28 00:00:00 EST 2007,Fixed,We need to revisit all instances where Maps  etc. are used to cache data inside Maven (maven-artifact has some  as does maven-project  f.e.). Wherever caching is used  we need to apply some sort of aging and/or size-limiting implementation to keep Maven from chewing up massive amounts of memory in long-lived processes  such as IDE extensions.,Critical,Jason van Zyl,jvanzyl,Thu Aug 03 00:00:00 EDT 2006,[MNG-2483] Review caching strategies in maven-project,Closed,improvement
MNG-249,Thu Jul 28 00:00:00 EDT 2005,Fixed,When compiling or packaging a project consisting of subprojects where one depends on another  maven should first check the build environment for existing jars or classes (in target/ directories) from the dependent subproject rather than always looking in the local and remote repositories for jar artifacts. Attached is a very simple test-case with 2 subprojects  where one depends on the other. Only m2 install works; m2 compile and m2 package should also work.,Critical,Brett Porter,brettporter,Tue Apr 05 00:00:00 EDT 2005,[MNG-249] compile and package should be reactor-aware,Closed,improvement
MNG-2494,Fri Aug 11 00:00:00 EDT 2006,Fixed,It's quite hard to find the URL for the test harness plugin (http://maven.apache.org/shared/maven-plugin-testing-harness).  Could someone put a link in the main plugin API guide (http://maven.apache.org/guides/plugin/guide-java-plugin-development.html)?,Major,Siveton Vincent,siveton,Fri Aug 11 00:00:00 EDT 2006,[MNG-2494] Plugin development guide should have link to test harness plugin,Closed,improvement
MNG-2495,Fri Aug 11 00:00:00 EDT 2006,Fixed,There is no javadoc report at http://maven.apache.org/shared/maven-plugin-testing-harness. ,Major,Siveton Vincent,siveton,Fri Aug 11 00:00:00 EDT 2006,[MNG-2495] Javadocs for the test harness plugin would be very useful,Closed,improvement
MNG-2499,Fri Jun 01 00:00:00 EDT 2007,Fixed,Sorry  if this should be the wrong project or component  but I was unable to find any better. Please attach sources to the maven-plugin-testing-harness. It helps a lot when understanding the plugins error messages. Patch is attached.,Major,null,null,Tue Aug 15 00:00:00 EDT 2006,[MNG-2499] Attach sources to maven-plugin-testing-harness,Closed,improvement
MNG-252,Mon May 09 00:00:00 EDT 2005,Fixed,currently there is no reliable way to detect whether a given POM is a v3 pom (from maven1) or a v4 pom (from maven2-alpha-0+). This makes it impossible to look at *.pom and decide which conversions to use in validating and/or cleaning the POM  and moreover which libraries to use in reading the file (they are separate Xpp3Reader implementations). It would be good to be able to sort out a repository that currently contains both maven1- and maven2-produced artifacts  and normalize them into maven2 format.,Major,John Casey,jdcasey,Tue Apr 05 00:00:00 EDT 2005,[MNG-252] allow repoclean converter to read from a repository containing both v3 and v4 poms  and convert each correctly,Closed,improvement
MNG-2536,Fri Jun 01 00:00:00 EDT 2007,Fixed,I have found that build resources get merged into derived POMs.  The attached patch adds resources to the list of POM elements that are merged.,Major,null,null,Tue Aug 29 00:00:00 EDT 2006,[MNG-2536] Resources are merged into derived POMs,Closed,improvement
MNG-2538,Wed Oct 25 00:00:00 EDT 2006,Fixed,On http://maven.apache.org/plugins/index.html  the following text is available:   "To see the most up-to-date list of available plugins  browse the   Maven 2 plugin repository at http://www.ibiblio.org/maven2/." However in this folder you have: 1. maven-plugins : apparently contains only M1 plugins 2. plugins : contains base M2 plugins and one codehaus plugin 3. plugin : empty  so can be deleted 4. maven-torque-plugin : only metadata files  so can be deleted 5. maven-xdoclet2-plugin : empty  so can be deleted To avoid confusion for novice M2 users  I think it's best to: a. delete the unnecessary folders (3  4  5) b. document in the website that    "http://www.ibiblio.org/maven2/plugins" should be verified for the latest versions of M2 plugins instead of   "http://www.ibiblio.org/maven2". c. add a remark to state that   "http://www.ibiblio.org/maven2/maven-plugins" is only for M1 and should be ignored for M2.,Minor,Jason van Zyl,jvanzyl,Wed Aug 30 00:00:00 EDT 2006,[MNG-2538] Improve plugin documentation on http://maven.apache.org/plugins/index.html.,Closed,improvement
MNG-2540,Thu Jan 10 00:00:00 EST 2008,Fixed,On http://maven.apache.org/examples/index.html there is only one example "Injecting POM properties via settings.xml"  which could be put on :   http://maven.apache.org/guides/index.html This would allow the 'examples' link in the left menu to be deleted.,Minor,Siveton Vincent,siveton,Wed Aug 30 00:00:00 EDT 2006,[MNG-2540] M2 website : move content of "Examples" link to "Guides" link.,Closed,improvement
MNG-2546,Tue Dec 29 00:00:00 EST 2009,Fixed,As seen here  http://www.nabble.com/How-to-execute-a-plugin-prior-to-the-reactor-sorting--tf2062739.html#a5682349.  I also have the need to bind my maven-pde-plugin to a phase before the reactor sorting of project build order happens.  My plugin is being developed to build eclipse plugins  features  fragments  update sites and products.  Right now I can build plugins and features.  However the order has to constantly be managed by the user taking information from the eclipse descriptors and adding it to the pom file.  For plugin projects I can bind to a phase before the compile phase and dynamically analyze the eclipse plugin descriptors and add the necessary dependencies/resources to the MavenProject instance and all is well.  For feature projects  I also can dynamically analyze the eclipse feature descriptor and add the necessary resources to the MavenProject instance.  However  features depend on other plugins  fragments and features.  While I can dynamicaly add the plugins  fragments and features to the MavenProject as dependencies they are not taken into context as the reactor has already computed the sorting order. What would be perfect is if there was a "super-init" phase that plugins could bind to and be executed in before the normal declared lifecycle happened.  Therefore no matter what the lifecycle was  the "super-init" phase would be available.  Then plugins could do things like augmenting the super-pom with build #'s/identifiers  dependencies  dynamic projects  etc all before maven gets going.  That would solve the problem myself and others have as well as be 100% backwards compatible.  This super-init phase (please pick a better name) would e available to reactor and non-reactor builds.  A more specific fix would be to allow plugins to ask the reactor to reevaluate the build order.,Major,Jason van Zyl,jvanzyl,Sun Sep 03 00:00:00 EDT 2006,[MNG-2546] Allow plugin executions in the "super-init" phase before reactor sorting of modules build order,Closed,improvement
MNG-2570,Sun Jul 06 00:00:00 EDT 2014,Fixed,The current logging levels are essentially verbose (default) and debug (-X). We need a slightly less verbose output so that things like compiler warnings and other output is actually visable to the developer. Currently it gets buried in all the noise.,Major,Jason van Zyl,jvanzyl,Fri Sep 22 00:00:00 EDT 2006,[MNG-2570] Maven needs to support multiple logging levels,Closed,improvement
MNG-2577,Thu Jun 07 00:00:00 EDT 2007,Fixed,the attached patch (against 2.0.4) allows interpolation of system properties into the .m2/settings.xml and interpolation of system properties and the properties of profiles found in .m2/settings.xml (if they are activeByDefault) into conf/settings.xml these features are necessary in order to propagate user account settings defined in user-specific .m2/settings.xml into server sections of the institution-wide conf/settings.xml,Critical,John Casey,jdcasey,Tue Sep 26 00:00:00 EDT 2006,[MNG-2577] Allow interpolation of Properties in settings.xml,Closed,improvement
MNG-2582,Sun Apr 08 00:00:00 EDT 2007,Fixed,When trying to debug something last week I needed to know which of the installed JVMs maven was running under  -X (debug) should have given me this information  it didn't. I'll create a patch which addresses this and submit it later today.,Major,Brian Fox,brianf,Sun Oct 01 00:00:00 EDT 2006,[MNG-2582] -X (debug) does not display JVM version,Closed,improvement
MNG-2583,Fri Jun 27 00:00:00 EDT 2008,Fixed,In class org.apache.maven.artifact.DefaultArtifact method getVersionRange returns null altough the version field is already set. In attached patch I check in method getVersionRange if versionRange is null if field version or baseVersion is already set and then create the versionRange by using version/baseVersion. By the way I've replaced HashMap with a LinkedHashMap to remember the insertion order of meta data. For those who don't see why this patch is needed can try binding the eclipse plugin to a phase before the jar plugin is bound. The eclipse plugin uses the org.apache.maven.artifact.resolver.DefaultArtifactCollector which is invoking method setVersion of org.apache.maven.artifact.DefaultArtifact which will erase field version range and cause a NullPointerException in plugin jar that doesn't check if returned version range is null. Cheers Martin,Major,Jason van Zyl,jvanzyl,Mon Oct 02 00:00:00 EDT 2006,[MNG-2583] DefaultArtifact: Method getVersionRange returns null also if field version is already set! [SMALL PATCH ATTACHED],Closed,improvement
MNG-2606,Thu Oct 12 00:00:00 EDT 2006,Fixed,Currently  the antrun plugin  via AntProjectPopulator.populateAntProjectWithMavenInformation() allows maven tasks run in a POM (via the antrun plugin) to access the various maven classpaths.  This seems to be both useful and widely used.  I would recommend adding maven.dependency.classpath  maven.compile.classpath  maven.runtime.classpath  maven.test.classpath and maven.plugin.classpath as "default" parameters alongside basedir and antMessageLevel in AntMojoDescriptorExtractor. This would have the benefit of standardizing the way these parameters are accessed (as I'm sure they will often be for ant mojos) and saving developers the hassle of having to do it every time (and figuring out how to do it for that matter).,Major,null,null,Thu Oct 12 00:00:00 EDT 2006,[MNG-2606] Add maven classpaths as parameters to ant mojos (like antrun behavior),Closed,improvement
MNG-2609,Thu May 15 00:00:00 EDT 2008,Fixed,It appears to be that the primary use-case for someone considering profiles would be the requirement to modify an existing build in some way to accomodate a 'special-case'.  As such  it seems to me that a mention of the activation option 'activeByDefault' should be added.   At present  the document implies that there either needs to be a change in the command line (e g  "-Denv-prod") or some form of environment parsing to have the build run as before  whereas 'activeByDefault' show that's not so but is not mentioned.,Major,Paul Gier,pgier,Fri Oct 13 00:00:00 EDT 2006,[MNG-2609] Mention 'activeByDefault' in the "Introduction to Build Profiles" guide,Closed,improvement
MNG-2617,Sat Oct 21 00:00:00 EDT 2006,Fixed,Ongoing work to make the integration tests easier to write/consume.  Convert the expected-results and prebuild-hook into Java that can be run under JUnit.  "mavenexecute.pl" (currently checked into trunk) should be a migration path.,Major,Jason van Zyl,jvanzyl,Tue Oct 17 00:00:00 EDT 2006,[MNG-2617] Convert the integration tests to run under JUnit,Closed,improvement
MNG-2620,Thu Nov 23 00:00:00 EST 2006,Fixed,Guide to Building Maven 2.0 (http://maven.apache.org/guides/development/guide-building-m2.html) does not accurately reflect the process of building Maven 2.0. I was able to get the correct instructions from IRC. There are discrepancies between these instructions and the ones given in the Guide.,Major,Wendy Smoak,wsmoak,Thu Oct 19 00:00:00 EDT 2006,[MNG-2620] Guide to Building Maven 2.0 needs to be updated to reflect the real process,Closed,improvement
MNG-2623,Wed Oct 25 00:00:00 EDT 2006,Fixed,Reformatted the left-hand side menu to help new and existing user navigation. http://www.propellors.net/maven/site/index.html,Trivial,Jason van Zyl,jvanzyl,Fri Oct 20 00:00:00 EDT 2006,[MNG-2623] New LHS Menu,Closed,improvement
MNG-2624,Fri Mar 30 00:00:00 EDT 2007,Fixed,it would be beneficial for: source code management backup space management if there would be a possibility to set one location where generated/built things go  maybe even as a "company rule" like "output directory = /var/tmp. currently it is a finding/grepping/deleting/ignorefile editing to reach this. if this is already possible a better hint in the documentation might be appropriate.,Major,null,null,Fri Oct 20 00:00:00 EDT 2006,[MNG-2624] clear separation of generated things and source things,Closed,improvement
MNG-2628,Thu May 31 00:00:00 EDT 2007,Fixed,Whenever you run the integration tests  they currently extract resources into $TEMP  even if the resources are already just lying around as files on the file system.  Under this patch  tests can use "simpleExtractResources" to force the ResourceExtractor to guess the proper location where the tests should be run  and hand back a File pointing to the resources to use. To use this  the tests will need to be changed as well.  The tests should now go like this: public void testit0000() throws Exception {     File testDir = ResourceExtractor.simpleExtractResources( getClass()  "/it0000");     Verifier verifier = new Verifier( testDir.getAbsolutePath() );     verifier.executeGoal( "package" ); },Major,null,null,Mon Oct 23 00:00:00 EDT 2006,[MNG-2628] (patch) If not necessary  don't extract the integration tests to $TEMP,Closed,improvement
MNG-2636,Sun Dec 14 00:00:00 EST 2008,Fixed,Currently the namespace chosen in the settings XSD is the same as the one chosen in the POM XSD. This causes conflicts e.g. when using XML catalogs to resolve the XSD files (e.g. when using the WTP/XML Catalog support in Eclipse): POM XSD :  http://maven.apache.org/maven-v4_0_0.xsd POM example: &lt;project   xmlns="http://maven.apache.org/POM/4.0.0"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;   ... &lt;/project&gt; Settings XSD :  http://maven.apache.org/xsd/settings-1.0.0.xsd Settings example :  &lt;settings   xmlns="http://maven.apache.org/POM/4.0.0"   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd"&gt;   ... &lt;/settings&gt; Having one namespace pointing to two different XSD files  depending on whether you're editing a POM or a settings file isn't a good idea. Question : can't the namespace of the settings XSD be changed or would this have too much of an impact on M2 (e.g. when M2 currently uses a namespace aware parser to parse the XML files)?,Minor,Siveton Vincent,siveton,Fri Oct 27 00:00:00 EDT 2006,[MNG-2636] Namespace settings-1.0.0.xsd correct?,Closed,improvement
MNG-2637,Thu Jan 14 00:00:00 EST 2010,Fixed,When compiling a hierarchy of projects  and if something went wrong  like a missing plugin  there is absolutly now way to know  without grep through many pom.xml  which pom.xml is incorrect.  It would be much more than cool to have a simple line like : &#91;INFO&#93; Getting plugins needed by project &lt;path&gt;/&lt;project name&gt; or &#91;INFO&#93; Getting dependency &lt;depency-name&gt;&lt;version&gt; from repo &lt;repository path&gt; for project &lt;path&gt;&lt;project name&gt; instead of a flood of line which makes no sense for the mere mortal   ,Critical,null,null,Fri Oct 27 00:00:00 EDT 2006,[MNG-2637] Logs improvment when using sub-projects,Closed,improvement
MNG-2638,Fri Oct 27 00:00:00 EDT 2006,Fixed,Here is the new FAQ for Maven 2 &amp; Continuum on developpez.com With the collaboration of emmanuel ,Major,Carlos Sanchez,carlos,Fri Oct 27 00:00:00 EDT 2006,[MNG-2638] Please add Developpez.com Maven FAQ to articles (french),Closed,improvement
MNG-2656,Thu May 31 00:00:00 EDT 2007,Fixed,Revise the Minimal POM Discuss Project Inheritance further Add Discussion about Project Aggregation,Minor,Brett Porter,brettporter,Fri Nov 10 00:00:00 EST 2006,[MNG-2656] Revised the Introduction to the POM,Closed,improvement
MNG-266,Fri Jul 22 00:00:00 EDT 2005,Fixed,add file mappings: &lt;dependencySet&gt;   &lt;outputFileNameMapping&gt;$ {artifactId} .$ {extension} &lt;/outputFileNameMapping&gt;   ... This will control the output filenames of dependencies in the set add line ending and mode handling to both fileSet and dependencySet:   &lt;fileMode&gt;770&lt;/fileMode&gt;   &lt;lineEndings&gt;crlf&lt;/lineEndings&gt; ,Minor,null,null,Thu Apr 07 00:00:00 EDT 2005,[MNG-266] file conversions in assembly,Closed,improvement
MNG-2671,Fri Jun 01 00:00:00 EDT 2007,Fixed,Sometimes a problem appears in M2 with parent and module structure due to the OS limitation in filepath length. For example Windows file path can not exceed 255 characters. But in complex maven 2 structure of parent/modules we can encounter a problem with that. In Eclipse  one has to put children projects in a flat structure. Example : in my filesystem my projects are : C:/ ------ parentProject/ ------ childprojectA/ ------ childProjectB/ But in maven the structure is as following : parentProject ------ childProjectA ------ childProjectB So in childProjectX poms  I have to references parent project like this : &lt;relativePath&gt;../parentProject&lt;/relativePath&gt; and the same for modules in parent as &lt;modules&gt;&lt;module&gt;../parentProject&lt;/module&gt;&lt;/modules&gt; On a very complex structure  I have a path longer than 255 but in fact i could be compressed to remove .. for example when maven deletes target dir  it does like this : delete C:/parentProject/../childProjectA/target instead it could do delete C:/childProjectA. This would reduce the path length in very complex structures. See the post at : http://www.nabble.com/Parent-modules-File-path-compression-tf2628075s177.html,Minor,null,null,Mon Nov 20 00:00:00 EST 2006,[MNG-2671] Parent/modules relative file path compression,Closed,improvement
MNG-2678,Mon Nov 27 00:00:00 EST 2006,Fixed,This patch updates maven embedder and related core components to use the latest plexus default-container and the classworlds now shipping inside the plexus project,Major,Jason van Zyl,jvanzyl,Thu Nov 23 00:00:00 EST 2006,[MNG-2678] Update maven embedder/core to use latest plexus and plexus-classworlds,Closed,improvement
MNG-2683,Fri Jun 01 00:00:00 EDT 2007,Fixed,I added some more detail to these exception messages to help me track down a problem with a build.,Minor,null,null,Thu Nov 30 00:00:00 EST 2006,[MNG-2683] [PATCH] ProjectBuildingException should print more information,Closed,improvement
MNG-2706,Mon Jun 04 00:00:00 EDT 2007,Fixed,Currently the only prerequsite one can specify is &lt;maven/&gt; according to http://maven.apache.org/ref/2.0.4/maven-model/maven.html#class_prerequisites It would be nice to be able to say that a project requires a certain version of JDK  like  say  1.5 or 1.6.,Major,null,null,Tue Dec 19 00:00:00 EST 2006,[MNG-2706] Add JDK version to <prerequisites>,Closed,improvement
MNG-2713,Wed Mar 12 00:00:00 EDT 2008,Fixed,debugging errors in this is not fun. The lifecyle mapping should be displayed in debug mode before starting build for a project,Major,John Casey,jdcasey,Sat Dec 23 00:00:00 EST 2006,[MNG-2713] Maven debug output should show the lifecycle mapping,Closed,improvement
MNG-273,Tue May 03 00:00:00 EDT 2005,Fixed,Currently  the marmalade-mojo stuff works by having one generic class that extends from o.a.m.p.AbstractPlugin  and is responsible for setting up the context  building the marmalade script  and executing it. When this script wrapper is converted to the new mojo injection method for setting parameters  we will lose the ability for a script to receive parameters from maven (since the generic class will not have those parameter fields to satisfy every script). In order to enable scripted mojos going forward  develop a new way of handling the plugin configuration (actually mojo configuration  inheriting from the plugin config) as a whole. This includes optional injection of the whole configuration into a single field in the mojo-script wrapper class  and new methods to make navigation of the configuration easier. If the configuration object has some coercion executed on it before parameters are normally injected  an analogous process needs to happen before this whole-configuration object is injected into the mojo wrapper. So  to summarize: Develop new "whole-configuration" object type and expression Add convenience methods for navigating the "whole-configuration" instance from a script Add coercion to the "whole-configuration" object's construction  to mimick the behavior of individually injected parameters. ,Critical,John Casey,jdcasey,Fri Apr 08 00:00:00 EDT 2005,[MNG-273] Add ability to handle plugin configuration as a single unit for context-based [scripted] mojos,Closed,improvement
MNG-2737,Thu May 31 00:00:00 EDT 2007,Fixed,I had difficulties deploying to a remote repository using the configuration in the getting started guide. It turned out that a setting in the ssh server made deployment difficult. I have attached a patch to the getting started guide describing this behaviour. One could argue that this information is too specific to be included in the getting started guide. But then  settings in the getting started guide should be fool-proof  and it should be documented when they cannot be used if this is not obvious. Please feel free to change the wording and/or the location of the information given in this patch.,Minor,null,null,Tue Jan 02 00:00:00 EST 2007,[MNG-2737] Improved section about deploying to remote repository in the getting started guide,Closed,improvement
MNG-2741,Tue Mar 30 00:00:00 EDT 2010,Fixed,When an attempt is made to resolve dependencies  the following error is encountered: &#91;INFO&#93; artifact org.apache.maven.plugins:maven-resources-plugin: checking for updates from codehaus-mojo-snapshot-plugins &#91;WARNING&#93; repository metadata for: 'artifact org.apache.maven.plugins:maven-resources-plugin' could not be retrieved from repository: codehaus-mojo-snapshot-plugins due to an error: Error transferring file &#91;INFO&#93; Repository 'codehaus-mojo-snapshot-plugins' will be blacklisted Without further information  debugging this problem is impractical. Information needed in the error message: Whether or not a proxy is being used  and if so  which one. (Symptoms in this case indicate no proxy is being used  yet a proxy is configured - no way to tell whether its a config problem or a proxy problem) Whether the server and/or proxy server gave an error code (4xx  5xx)  or whether there was no response at all. ,Major,Benjamin Bentmann,bentmann,Wed Jan 03 00:00:00 EST 2007,[MNG-2741] [regression] Meaningless error message: "Error transferring file",Closed,improvement
MNG-276,Wed Jun 08 00:00:00 EDT 2005,Fixed,Let the user know where the project was generated and display the parameters used during generation.,Major,Brett Porter,brettporter,Fri Apr 08 00:00:00 EDT 2005,[MNG-276] Make out output from archetype more informative,Closed,improvement
MNG-2767,Tue Jun 05 00:00:00 EDT 2007,Fixed,This would reduce the size of the final assembly and munge the use of any util code like plexus utils so that plugins will never be stuck using the same version that is used as a core dependency.,Major,null,null,Fri Jan 12 00:00:00 EST 2007,[MNG-2767] Use MiniJAR to crush the final assembly down and munge package dependencies,Closed,improvement
MNG-2777,Wed Jan 17 00:00:00 EST 2007,Fixed,I'd like to replace some default components defined in core maven jars by my own when I run Maven inside my application. Today  I can't do this reliably because the MavenEmbedder immediately calls Embedder.start() after a new Embedder instance is created in the MavenEmbedder.start() method. It would be nice if MavenEmbedder introduces a protected method for creating Embedder instance  so that I have a chance to touch Embedder before it's started.,Major,null,null,Mon Jan 15 00:00:00 EST 2007,[MNG-2777] Allow components to be replaced in Embedder,Closed,improvement
MNG-2778,Wed Feb 28 00:00:00 EST 2007,Fixed,When embedding Maven into applications  it's often convenient to be able to look up components inside Maven from the applications. This can be easily be done if MavenEmbedder lets me access PlexusContainer  like this:     /** Gets the  {@link PlexusContainer}  that hosts Maven.      */     public PlexusContainer getContainer()  {         return embedder.getContainer();     } ,Major,Jason van Zyl,jvanzyl,Mon Jan 15 00:00:00 EST 2007,[MNG-2778] Allow access to the underlying plexus container from MavenEmbedder,Closed,improvement
MNG-280,Thu Jun 16 00:00:00 EDT 2005,Fixed,It would be nice to have support for specifying schemas for the various pieces of Maven2 so you can use a nice XML editor to do completion and validation of your maven2 xml files.,Major,Brett Porter,brettporter,Sat Apr 09 00:00:00 EDT 2005,[MNG-280] Writing maven xml files is error prone without a schema or something,Closed,improvement
MNG-281,Fri Apr 15 00:00:00 EDT 2005,Fixed,/Users/sam/Projects/TexasSolitaireMaven/texas-solitaire:&gt; m2 install &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Building null &#91;INFO&#93; ---------------------------------------------------------------------------- .....,Major,Brett Porter,brettporter,Sat Apr 09 00:00:00 EDT 2005,[MNG-281] When there is no "name" element  don't print null,Closed,improvement
MNG-2823,Mon Mar 26 00:00:00 EDT 2007,Fixed,It would really be nice if there was more control over what WARNING messages that Maven spits out by default.  When building off of a clean repo  a bunch of &#91;WARNING&#93; Unable to get resource ... messages litter the console output... which really makes it hard to see what is actually going on. I'd like mvn to not show those by default  and have a flag to enable them if needed... kinda like the -W flag on gcc. IMO these WARNING messages are only useful about 5% of the time when strange dependency problems pop up... it would be better IMO if for the remaining 95% that mvn didn't complain so much about stuff that is not really a problem.,Major,null,null,Tue Feb 13 00:00:00 EST 2007,[MNG-2823] More control over what WARNING messages are displayed,Closed,improvement
MNG-2828,Wed Feb 28 00:00:00 EST 2007,Fixed,Maven 2.0.5 depends on plexus-utils:1.1 (cf. %M2_HOME%\core) while the last version of plexus-utils is 1.4 (cf. http://repo1.maven.org/maven2/org/codehaus/plexus/plexus-utils/). It would be nice to upgrade the dependency on plexus-utils to a more recent version. R�my,Major,Jason van Zyl,jvanzyl,Thu Feb 15 00:00:00 EST 2007,[MNG-2828] Upgrade the dependency on plexus-utils to a more recent version,Closed,improvement
MNG-2846,Sat Feb 24 00:00:00 EST 2007,Fixed,In the UI of the Eclipse integration we are doing workspace materialization and we use the raw Models in the first pass and when values are inherited we get null values which are ugly.,Major,Jason van Zyl,jvanzyl,Sat Feb 24 00:00:00 EST 2007,[MNG-2846] Provider nicer output from Model.getId() when groupId and version are null,Closed,improvement
MNG-2851,Sun Sep 02 00:00:00 EDT 2007,Fixed,check the test I've added to MavenEmbedderTest. Without this loading of project (without deps) the artifact handlers don't get taken into account when loading the project. the artifact handlers are added somewhere in lifecycle executor which is not even touched on readProjectWithDependencies(). Milos On 2/27/07  Jason van Zyl &lt;jason@maven.org&gt; wrote: Hey Just wondering about reading the project twice in read project with dependencies. Why are you trying to find the artifact handlers once and then reading the project again? Just wondering if you copied this stuff from internal components why it's not working. Is this for the case where you've added new ones after the embedder has started?,Major,null,null,Tue Feb 27 00:00:00 EST 2007,[MNG-2851] The artifact handlers must be loaded upfront for all operations,Closed,improvement
MNG-287,Tue Apr 19 00:00:00 EDT 2005,Fixed, ,Major,John Casey,jdcasey,Mon Apr 11 00:00:00 EDT 2005,[MNG-287] make repo tool add sha1's to all artifacts  and also add to wagon/artifact deployer,Closed,improvement
MNG-2881,Fri Mar 07 00:00:00 EST 2008,Fixed,Even though the network is not touched we get logging output like this: --&gt;8-- &#91;INFO&#93; snapshot org.codehaus.plexus:plexus-appserver-maven-plugin:2.0-alpha-8-SNAPSHOT: checking for updates from apache.snapshots &#91;DEBUG&#93; System is offline. Cannot resolve metadata: Repository Metadata -------------------------- GroupId: org.codehaus.plexus ArtifactId: plexus-appserver-maven-plugin Metadata Type: org.apache.maven.artifact.repository.metadata.SnapshotArtifactRepositoryMetadata --&gt;8--,Minor,Brett Porter,brettporter,Sun Mar 18 00:00:00 EDT 2007,[MNG-2881] Improve logging when downloading snapshots in offline mode,Closed,improvement
MNG-2884,Sat Jun 02 00:00:00 EDT 2007,Fixed,MultipleArtifactsNotFoundException is not reusable outside of a console based application because the missing artifacts cannot be programmatically obtained either to be processed or displayed to the user in some other UI. The attached patch provides access to the list of artifacts.,Major,null,null,Mon Mar 19 00:00:00 EDT 2007,[MNG-2884] MultipleArtifactsNotFoundException provides access to missing artifacts,Closed,improvement
MNG-2885,Sat Apr 07 00:00:00 EDT 2007,Fixed,The docs on os activation is lacking. http://maven.apache.org/guides/introduction/introduction-to-profiles.html doesn't reference os activation http://maven.apache.org/pom.html only mentions an example.,Major,Brian Fox,brianf,Mon Mar 19 00:00:00 EDT 2007,[MNG-2885] improve os activation documentation,Closed,improvement
MNG-2892,Sun Mar 25 00:00:00 EDT 2007,Fixed, ,Major,Jason van Zyl,jvanzyl,Thu Mar 22 00:00:00 EDT 2007,[MNG-2892] Use shade to hide the use of plexus-utils internally so that plugins can use their own version,Closed,improvement
MNG-2902,Sun Jun 19 00:00:00 EDT 2011,Fixed,IRC log: jorg: is it normal that between 'Scanning for projects' and the first actual build output it takes about 1 minute ? &#91;20:45&#93; jvanzyl: jorg &#91;20:45&#93; jvanzyl: probably network &#91;20:45&#93; jvanzyl: you have snapshots? &#91;20:46&#93; jorg: snapshot of what ? &#91;20:46&#93; jorg: oh in general you mean &#91;20:46&#93; jvanzyl: in 2.1 i'm trying to scour the code to make sure it never touches the network if everything is local &#91;20:46&#93; jvanzyl: it doesn't do that very well right now &#91;20:46&#93; jvanzyl: yah &#91;20:46&#93; jorg: well not on external dependencies no ... &#91;20:47&#93; jvanzyl: yah  we need to track the pull during a sessions which we don't &#91;20:47&#93; jorg: our own modules are however all snapshots ... perhaps that's what it's trying to resolve &#91;20:47&#93; jvanzyl: can you put that in a jira and i will assign to 2.1-alpha-1 &#91;20:47&#93; jorg: ok but the behaviour is expected as is .. that's all i wanted to make sure then  &#91;20:47&#93; jvanzyl: and then assign to me so i don't forget and i will look at it &#91;20:47&#93; jvanzyl: it shouldn't do that  but obviously it does &#91;20:47&#93; jorg: shall i paste the full output of -X or just the start ? &#91;20:47&#93; jvanzyl: it's doing it for each module &#91;20:48&#93; jvanzyl: just the start is fine &#91;20:48&#93; jvanzyl: i get the idea  &#91;20:48&#93; jvanzyl: yah  that's really annoying &#91;20:48&#93; jorg: ok thanks for the feedback jason  i'll create an issue for it &#91;20:49&#93; jvanzyl: great  thanks &#91;20:50&#93; jvanzyl: just paste the issue here &#91;20:50&#93; jvanzyl: and i'll change the fix version and assign it to me ------------------- BUILD OUTPUT ---------------------------- jorg:~/src/cocoon-trunk jheymans$ mvn clean install -Dmaven.test.skip=true -Pallblocks -X + Error stacktraces are turned on. Maven version: 2.0.6-SNAPSHOT &#91;DEBUG&#93; Building Maven user-level plugin registry from: '/Users/jheymans/.m2/plugin-registry.xml' &#91;DEBUG&#93; Building Maven global-level plugin registry from: '/Users/jheymans/tools/maven2/conf/plugin-registry.xml' &#91;INFO&#93; Scanning for projects... &#91;DEBUG&#93; Searching for parent-POM: org.apache:apache::4 of project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT in relative path: ../pom.xml &#91;DEBUG&#93; Invalid parent-POM referenced by relative path '../pom.xml' in parent specification in org.apache.cocoon:cocoon:pom:4-SNAPSHOT:   Specified: org.apache:apache::4   Found:     org.apache.excalibur:excalibur:pom:1 &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache:apache::4 for project: org.apache.cocoon:cocoon:pom:4-SNAPSHOT from the repository. &#91;INFO&#93; Reactor build order:  &#91;INFO&#93;   Apache Cocoon &#91;INFO&#93;   Cocoon Core &#91;modules&#93; &#91;INFO&#93;   Cocoon Configuration API &#91;INFO&#93;   Cocoon Spring Configurator &#91;INFO&#93;   Cocoon Pipeline API &#91;INFO&#93;   Cocoon Util &#91;INFO&#93;   Cocoon Pipeline Implementation &#91;INFO&#93;   Cocoon XML API &#91;INFO&#93;   Cocoon XML Implementation &#91;INFO&#93;   Cocoon Pipeline Components &#91;INFO&#93;   Cocoon Sitemap API &#91;INFO&#93;   Cocoon Thread API &#91;INFO&#93;   Cocoon Sitemap Implementation &#91;INFO&#93;   Cocoon Sitemap Components &#91;INFO&#93;   Cocoon XML Resolver &#91;INFO&#93;   Cocoon Store Implementation &#91;INFO&#93;   Cocoon Thread Implementation &#91;INFO&#93;   Cocoon Core &#91;INFO&#93;   Cocoon Blocks &#91;modules&#93; &#91;INFO&#93;   Cocoon Ajax Block Implementation &#91;INFO&#93;   Cocoon Ajax Block Sample &#91;INFO&#93;   Cocoon Apples Block Implementation &#91;INFO&#93;   Cocoon Main Core Sample Block &#91;INFO&#93;   Cocoon Flowscript Block Implementation &#91;INFO&#93;   Cocoon Template Framework Block Implementation &#91;INFO&#93;   Cocoon Forms Block Implementation &#91;INFO&#93;   Cocoon Tools &#91;modules&#93; &#91;INFO&#93;   Cocoon Deployer - Maven 2 Plugin &#91;INFO&#93;   Cocoon Samples Style Default Block &#91;INFO&#93;   Cocoon Apples Block Samples &#91;INFO&#93;   Cocoon Additional Sample Block &#91;INFO&#93;   Cocoon Forms Block Samples &#91;INFO&#93;   Cocoon Linkrewriter Block Implementation &#91;INFO&#93;   Cocoon Linkrewriter Block Samples &#91;INFO&#93;   Cocoon Template Block Samples &#91;INFO&#93;   Asciiart Block &#91;modules&#93; &#91;INFO&#93;   Asciiart Block Implementation &#91;INFO&#93;   Asciiart Block Samples &#91;INFO&#93;   Cocoon Authentication Block API &#91;INFO&#93;   Cocoon Authentication Block Implementation &#91;INFO&#93;   Cocoon Authentication Block Sample &#91;INFO&#93;   Session Framework &#91;modules&#93; &#91;INFO&#93;   Session Framework Implementation &#91;INFO&#93;   Authentication Framework &#91;modules&#93; &#91;INFO&#93;   Authentication Framework Implementation &#91;INFO&#93;   Authentication Framework Sample Application &#91;INFO&#93;   Axis Block &#91;modules&#93; &#91;INFO&#93;   Axis Block Implementation &#91;INFO&#93;   Axis Block Samples &#91;INFO&#93;   Cocoon Batik Block Implementation &#91;INFO&#93;   Cocoon Batik Block Samples &#91;INFO&#93;   Bsf Block &#91;modules&#93; &#91;INFO&#93;   Bsf Block Implementation &#91;INFO&#93;   Bsf Block Samples &#91;INFO&#93;   Cocoon Captcha Block Implementation &#91;INFO&#93;   Cocoon Captcha Block Sample &#91;INFO&#93;   Chaperon Block &#91;modules&#93; &#91;INFO&#93;   Chaperon Block Implementation &#91;INFO&#93;   Chaperon Block Samples &#91;INFO&#93;   Cron Block &#91;modules&#93; &#91;INFO&#93;   Cron block implementation &#91;INFO&#93;   Cron Block Samples &#91;INFO&#93;   Cocoon Database Block Mocks &#91;INFO&#93;   Cocoon Database Block Implementation &#91;INFO&#93;   Cocoon Hsqldb Block Implementation &#91;INFO&#93;   Cocoon Hsqldb Client Implementation &#91;INFO&#93;   Cocoon Databases Block Samples &#91;INFO&#93;   Cocoon ODBC client Implementation &#91;INFO&#93;   Cocoon Oracle client Implementation &#91;INFO&#93;   Cocoon PostgreSQL client Implementation &#91;INFO&#93;   Deli Block &#91;modules&#93; &#91;INFO&#93;   Deli Block Implementation &#91;INFO&#93;   Deli Block Samples &#91;INFO&#93;   Jms Block &#91;modules&#93; &#91;INFO&#93;   Jms Block Implementation &#91;INFO&#93;   Eventcache Block &#91;modules&#93; &#91;INFO&#93;   Eventcache Block Implementation &#91;INFO&#93;   Eventcache Block Samples &#91;INFO&#93;   Taglib Block &#91;modules&#93; &#91;INFO&#93;   Taglib Block Implementation &#91;INFO&#93;   Portal Block &#91;modules&#93; &#91;INFO&#93;   Portal Block API &#91;INFO&#93;   Portal Block Implementation &#91;INFO&#93;   Faces Block &#91;modules&#93; &#91;INFO&#93;   Faces Block Implementation &#91;INFO&#93;   Faces Block Samples &#91;INFO&#93;   Cocoon FOP Block Implementation &#91;INFO&#93;   Cocoon FOP Block Samples &#91;INFO&#93;   Cocoon HTML Block Implementation &#91;INFO&#93;   Cocoon Html Block Sample &#91;INFO&#93;   Itext Block &#91;modules&#93; &#91;INFO&#93;   Itext Block Implementation &#91;INFO&#93;   Itext Block Samples &#91;INFO&#93;   Javaflow Block &#91;modules&#93; &#91;INFO&#93;   Javaflow Block &#91;INFO&#93;   Javaflow Block Samples &#91;INFO&#93;   Jfor Block &#91;modules&#93; &#91;INFO&#93;   Jfor Block Implementation &#91;INFO&#93;   Jfor Block Samples &#91;INFO&#93;   Jms Block Samples &#91;INFO&#93;   Jsp Block &#91;modules&#93; &#91;INFO&#93;   Jsp Block Mocks &#91;INFO&#93;   Jsp Block Implementation &#91;INFO&#93;   Jsp Block Samples &#91;INFO&#93;   Lucene Block &#91;modules&#93; &#91;INFO&#93;   Lucene Block Implementation &#91;INFO&#93;   Lucene Block Samples &#91;INFO&#93;   Cocoon Mail Block Implementation &#91;INFO&#93;   Cocoon Mail Block Sample &#91;INFO&#93;   Midi Block &#91;modules&#93; &#91;INFO&#93;   Midi Block Implementation &#91;INFO&#93;   Midi Block Samples &#91;INFO&#93;   Naming Block &#91;modules&#93; &#91;INFO&#93;   Naming Block Implementation &#91;INFO&#93;   Naming Block Samples &#91;INFO&#93;   Ojb Block &#91;modules&#93; &#91;INFO&#93;   Ojb Block Mocks &#91;INFO&#93;   Ojb Block Implementation &#91;INFO&#93;   Querybean Block &#91;modules&#93; &#91;INFO&#93;   Querybean Block Implementation &#91;INFO&#93;   Ojb Block Samples &#91;INFO&#93;   Petstore Block &#91;modules&#93; &#91;INFO&#93;   Petstore Block Implementation &#91;INFO&#93;   Petstore Block Samples &#91;INFO&#93;   Poi Block &#91;modules&#93; &#91;INFO&#93;   Poi Block Implementation &#91;INFO&#93;   Poi Block Samples &#91;INFO&#93;   Portal Block CAuth Support &#91;INFO&#93;   Portal Block Bridges Implementation &#91;INFO&#93;   Cocoon Serializers Block Implementation &#91;INFO&#93;   Portal Block Sitemap &#91;INFO&#93;   Portal Block Portlet Implementation &#91;INFO&#93;   Portal Block Portlet Implementation &#91;INFO&#93;   Portal Block WSRP Implementation &#91;INFO&#93;   Portal Tools Block Implementation &#91;INFO&#93;   Portal Block Sample &#91;INFO&#93;   Profiler Block &#91;modules&#93; &#91;INFO&#93;   Profiler Block &#91;INFO&#93;   Profiler Block Samples &#91;INFO&#93;   Proxy Block &#91;modules&#93; &#91;INFO&#93;   Proxy Block Implementation &#91;INFO&#93;   Proxy Block Samples &#91;INFO&#93;   Python Block &#91;modules&#93; &#91;INFO&#93;   Python Block Mocks &#91;INFO&#93;   Xsp Block &#91;modules&#93; &#91;INFO&#93;   Xsp Block Implementation &#91;INFO&#93;   Python Block Implementation &#91;INFO&#93;   Qdox Block &#91;modules&#93; &#91;INFO&#93;   Qdox Block Implementation &#91;INFO&#93;   Qdox Block Samples &#91;INFO&#93;   Querybean Block Samples &#91;INFO&#93;   Repository Block &#91;modules&#93; &#91;INFO&#93;   Repository Block Implementation &#91;INFO&#93;   Scratchpad Block &#91;modules&#93; &#91;INFO&#93;   Scratchpad Block Implementation &#91;INFO&#93;   Scratchpad Block Samples &#91;INFO&#93;   Session Framework Sample Application &#91;INFO&#93;   Slide Block &#91;modules&#93; &#91;INFO&#93;   Slide Block Implementation &#91;INFO&#93;   Slide Block Samples &#91;INFO&#93;   Slop Block &#91;modules&#93; &#91;INFO&#93;   Slop Block Implementation &#91;INFO&#93;   Slop Block Samples &#91;INFO&#93;   Stx Block &#91;modules&#93; &#91;INFO&#93;   Stx Block Implementation &#91;INFO&#93;   Stx Block Samples &#91;INFO&#93;   Taglib Block Samples &#91;INFO&#93;   Tour Block &#91;modules&#93; &#91;INFO&#93;   Tour Block Implementation &#91;INFO&#93;   Tour Block Samples &#91;INFO&#93;   Validation Block &#91;modules&#93; &#91;INFO&#93;   Validation Block Implementation &#91;INFO&#93;   Validation Block Sample &#91;INFO&#93;   Velocity Block &#91;modules&#93; &#91;INFO&#93;   Velocity Block Implementation &#91;INFO&#93;   Velocity Block Samples &#91;INFO&#93;   Web3 Block &#91;modules&#93; &#91;INFO&#93;   Web3 Block Mocks &#91;INFO&#93;   Web3 Block Implementation &#91;INFO&#93;   Web3 Block Samples &#91;INFO&#93;   Webdav Block &#91;modules&#93; &#91;INFO&#93;   Webdav Block Implementation &#91;INFO&#93;   Webdav Block Samples &#91;INFO&#93;   Xmldb Block &#91;modules&#93; &#91;INFO&#93;   XMLDB Block's Implementation &#91;INFO&#93;   XMLDB Block's Samples &#91;INFO&#93;   Xsp Block Samples &#91;INFO&#93;   Cocoon Licenses &#91;INFO&#93;   Cocoon Commons &#91;modules&#93; &#91;INFO&#93;   Cocoon Servlet Service Implementation &#91;INFO&#93;   Cocoon Servlet Service Components &#91;INFO&#93;   Cocoon Servlet Service Sample Blocks &#91;INFO&#93;   Cocoon Webapp &#91;INFO&#93;   Cocoon 2.2 Archetype: Block &#91;INFO&#93;   Cocoon 2.2 Archetype: Web Application &#91;INFO&#93;   Cocoon block deployer demo &#91;INFO&#93;   Cocoon Maven Reports &#91;INFO&#93;   Cocoon Maven Skin &#91;INFO&#93;   Cocoon Distributions &#91;modules&#93; &#91;DEBUG&#93; Initialising extension: org.apache.maven.wagon:wagon-ssh-external &#91;DEBUG&#93; Retrieving parent-POM: org.apache.maven.wagon:wagon-providers::1.0-alpha-6 for project: null:wagon-ssh-external:jar:1.0-alpha-6 from the repository. &#91;DEBUG&#93; Retrieving parent-POM: org.apache.maven.wagon:wagon::1.0-alpha-6 for project: null:wagon-providers:pom:1.0-alpha-6 from the repository. &#91;DEBUG&#93; Adding managed depedendencies for unknown:wagon-ssh-external &#91;DEBUG&#93;   org.apache.maven.wagon:wagon-provider-api:jar:1.0-alpha-6 &#91;DEBUG&#93;   org.apache.maven.wagon:wagon-provider-test:jar:1.0-alpha-6,Blocker,Benson Margulies,bmargulies,Mon Mar 26 00:00:00 EDT 2007,[MNG-2902] long build startup times due to frequent network access for SNAPSHOT resolving,Closed,improvement
MNG-2904,Sat Jun 02 00:00:00 EDT 2007,Fixed,to reproduce edit your ~/.m2/settings.xml and add a new profile. Mark it as active by default and make sure it has no ID. The resulting stack is thus: java.lang.ClassCastException: Settings.addActiveProfiles(string) parameter must be instanceof java.lang.String         at org.apache.maven.settings.Settings.addActiveProfile(Settings.java:91)         at org.apache.maven.settings.DefaultMavenSettingsBuilder.activateDefaultProfiles(DefaultMavenSettingsBuilder.java:197)         at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:177)         at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:153)         at org.apache.maven.settings.DefaultMavenSettingsBuilder.buildSettings(DefaultMavenSettingsBuilder.java:141)         at org.apache.maven.cli.MavenCli.buildSettings(MavenCli.java:315)         at org.apache.maven.cli.MavenCli.main(MavenCli.java:176)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)         at java.lang.reflect.Method.invoke(Method.java:585)         at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)         at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)         at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)         at org.codehaus.classworlds.Launcher.main(Launcher.java:375),Major,Jason van Zyl,jvanzyl,Tue Mar 27 00:00:00 EDT 2007,[MNG-2904] Misleading error message if profiles that are active by default do not have an ID,Closed,improvement
MNG-2930,Tue May 29 00:00:00 EDT 2007,Fixed,Update the JavaMojoDescriptorExtractor in the maven-plugin-tools-java module to make it more friendly for reusability.,Minor,Brian Fox,brianf,Wed Apr 04 00:00:00 EDT 2007,[MNG-2930] Update JavaMojoDescriptorExtractor to make it more re-use friendly,Closed,improvement
MNG-2947,Fri Jan 11 00:00:00 EST 2008,Fixed,There is a guide to deploying 3rd party jars to a remote repository &#91;1&#93;  using deploy:deploy-file. This guide does not mention how source jars can be deployed along with the code jar. A section should be added to the end of this guide providing a quick explanation. Here is an example of what such documentation might look like: Deploying Source Jars To deploy a 3rd party source jar  packaging should be set to "java-source"  and generatePom should be set to false. &#91;1&#93; http://maven.apache.org/guides/mini/guide-deploying-3rd-party-jars.html,Minor,Siveton Vincent,siveton,Fri Apr 13 00:00:00 EDT 2007,[MNG-2947] Deploy 3rd party source jar,Closed,improvement
MNG-2954,Wed Jan 09 00:00:00 EST 2008,Fixed,Hi 1) the "Guide to uploading artifacts to the Central Repository" (http://maven.apache.org/guides/mini/guide-central-repository-upload.html) says  that upload requests have to be made as Jira issues using the URL http://jira.codehaus.org/secure/CreateIssue.jspa?pid=10367&amp;amp;issuetype=3. Under this URL one has to choose a Project and an Issue Type. It would be great if the guide could say which project and issue type to choose. I suppose that project is "maven-upload-requests" and issue type is wish  but I'm not sure. 2) the guide says that new bundles have to be downloadable via a URL which has to be entered into the Jira issue. But Jira also offers the possibility to add an attachment to the issue (up to 10MB). It would be nice  if the guide could clarify on this possibilty  either that using attachments is equal to download urls (then the url doesn't have to be a mandatory field any more) or that attachments added to the issue will be ignored. Kind regards  Stefan Prange,Minor,Siveton Vincent,siveton,Wed Apr 18 00:00:00 EDT 2007,[MNG-2954] Docu incomplete:  "Guide to uploading artifacts to the Central Repository": Jira project not specified  Attachment usage unclear,Closed,improvement
MNG-2964,Sun Jan 06 00:00:00 EST 2008,Fixed,How to set message level for maven2 output? (it always shows INFO level messages),Major,Siveton Vincent,siveton,Thu Apr 26 00:00:00 EDT 2007,[MNG-2964] Need documentation about Maven2 logging,Closed,improvement
MNG-2965,Fri Apr 27 00:00:00 EDT 2007,Fixed,Need to add the following to their respective svn:ignore properties: ?      maven-artifact-manager\.settings ?      maven-artifact-test\.settings ?      maven-artifact\.settings ?      maven-core\.settings ?      maven-error-diagnostics\.settings ?      maven-model\.settings ?      maven-monitor\.settings ?      maven-plugin-api\.settings ?      maven-plugin-descriptor\.settings ?      maven-plugin-parameter-documenter\.settings ?      maven-plugin-registry\.settings ?      maven-profile\.settings ?      maven-project\.settings ?      maven-reporting\maven-reporting-api\.settings ?      maven-repository-metadata\.settings ?      maven-script\maven-script-ant\.classpath ?      maven-script\maven-script-ant\.project ?      maven-script\maven-script-ant\.settings ?      maven-script\maven-script-beanshell\.settings ?      maven-settings\.settings ,Major,Carlos Sanchez,carlos,Fri Apr 27 00:00:00 EDT 2007,[MNG-2965] Update svn:ignores for developing with eclipse,Closed,improvement
MNG-2992,Sat Jun 02 00:00:00 EDT 2007,Fixed,Batch file uses %HOME% let's set this to a nice value if blank. The patch adds this line to set HOME to the value of  HOMEDRIVE + HOMEPATH,Minor,null,null,Thu May 17 00:00:00 EDT 2007,[MNG-2992] Batch file uses %HOME% - can set this to a value if blank,Closed,improvement
MNG-2997,Fri Sep 05 00:00:00 EDT 2008,Fixed,The introduction-to-dependency-mechanism page should explain how the 'optional' element combines with the 'scope' element. http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html,Minor,Brian Fox,brianf,Sun May 20 00:00:00 EDT 2007,[MNG-2997] Dependency mechanism page should describe the 'optional' element,Closed,improvement
MNG-3,Sun Sep 24 00:00:00 EDT 2006,Fixed,ide integration needs a listener mechanism so that when project/model is changed interested parties are notified and can eventually reflect those changes (f.i. refresh a view). we've implemented that in mevenide  please see :  http://cvs.mevenide.codehaus.org/cvsweb.cgi/mevenide-core/src/java/org/mevenide/project/,Major,Jason van Zyl,jvanzyl,Tue Apr 13 00:00:00 EDT 2004,[MNG-3] MavenProject / pom listener,Closed,improvement
MNG-3004,Thu Apr 08 00:00:00 EDT 2010,Fixed,One of the great advantages with maven over scripted build environments is that it can calculate the dependencies of the build  and it could execute items that are independent of each other in parallel. Unfortunately it currently doesn't do this  which would be a big win over tools such as 'ant'. It also means that multicore machines have lots of idle capacity when running a serial build that could be utilised. I had a quick shot at seeing what might be required. Bear in mind this is the first time I have looked at maven internally  and I was just trying to feel my way around and build a POC. I got some of the way there  but my build threads don't seem to have the correct classpath - I think this is something to do with plexus / classworlds - but I don't know enough. It'd be great to get this feature in a future version  or a way of running my hack (figuring out why in a thread has not the plexus stuff) in the interim.,Major,Kristian Rosenvold,krosenvold,Tue May 22 00:00:00 EDT 2007,[MNG-3004] Allow build lifecycle to execute projects in parallel,Closed,improvement
MNG-3024,Tue Oct 16 00:00:00 EDT 2007,Fixed,I love how when an artifact can't be found  a nice error explains how to install it locally. This is a great technique for onboarding new maven users who might otherwise be frustrated  thinking that they can't use things no in the public repo. Kudos to whoever did this initial work. Now I suggest you take it a step further by including instructions for deploying the file to a personal repo. For example: Caused by: Missing: ---------- 1) j2ssh:j2ssh-core:jar:0.2.9   Try downloading the file manually from the project website.   Then  install it using the command:        mvn install:install-file -DgroupId=j2ssh -DartifactId=j2ssh-core \           -Dversion=0.2.9 -Dpackaging=jar -Dfile=/path/to/file   Alternatively  if you host your own repository you can deploy the file there:       mvn deploy:deploy-file -DgroupId=j2ssh -DartifactId=j2ssh-core \           -Dversion=0.2.9 -Dpackaging=jar -Dfile=/path/to/file           -Durl=... -DrepositoryId=...   Path to dependency:          1) com.hostedqa:hostedqa-anywhere-server:jar:1.7.4-SNAPSHOT         2) j2ssh:j2ssh-core:jar:0.2.9,Minor,Jason van Zyl,jvanzyl,Wed May 30 00:00:00 EDT 2007,[MNG-3024] Missing artifact error text improvement,Closed,improvement
MNG-304,Wed Apr 13 00:00:00 EDT 2005,Fixed,this surely can find a beter home as it is only needed by maven-compiler-plugin (though it is worth keeping it reusable - perhaps it could even be in plexus-compilers  or if not  plexus-utils),Major,Brett Porter,brettporter,Tue Apr 12 00:00:00 EDT 2005,[MNG-304] move source scanner stuff out of maven-plugin-api,Closed,improvement
MNG-3047,Tue Aug 14 00:00:00 EDT 2007,Fixed,Over the course of investigating MNG-3046  I discovered DefaultArtifactVersion's implementation of Comparable.compareTo() is inconsistent with its equals(Object).  (DefaultArtifactVersion doesn't implement equals(...); it's using the instance equals it gets from Object.)  The contract for Comparable.compareTo()&#91;1&#93; states  while it's not strictly required the behavior between compareTo and equals be consistent  breaking it should be an overt and visible decision.  In the case of DefaultArtifactVersion  there's really no reason not to implement equals and hashCode. I have a fix-I'll attach a patch shortly-that implements equals and hashCode following the recipes from Bloch's "Effective Java."  In fact  equals now uses a cleaned-up compareTo  ensuring consistency across these methods. Since the interface ArtifactVersion extends Comparable (as opposed to DefaultArtifactVersion implementing both ArtifactVersion and Comparable) I assume the intent is to be able to compare different ArtifactVersions regardless of implementation.  Therefore  I added the equals and hashCode declaration to the interface and made the equals and compareTo implementations work with all ArtifactVersions. Note that this work obviates the patch for MNG-3046.  I made that patch small and surgical to fix a major issue.  This fix is less urgent-still important  imho-but I wasn't sure if the interface changes were right for the whole project  if such a big change is warranted  etc.  The bottom line is: only that patch or this one need be applied  not both. &#91;1&#93; http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html#compareTo(T),Minor,John Casey,jdcasey,Mon Jun 11 00:00:00 EDT 2007,[MNG-3047] DefaultArtifactVersion compareTo inconsistent with equals,Closed,improvement
MNG-3062,Tue Aug 14 00:00:00 EDT 2007,Fixed,I would like to be able to access the execution ID from within a plugin.  This could be useful for example to run only certain executions.  This could be done with a small change to the plugin expression evaluator. I created a patch that would give the plugin access to the current MojoExecution.,Major,John Casey,jdcasey,Tue Jun 19 00:00:00 EDT 2007,[MNG-3062] Allow access to mojoExecution from within plugin.,Closed,improvement
MNG-3113,Tue Nov 27 00:00:00 EST 2007,Fixed,I have just used the maven-archetype-archetype following the article 'Guide to Creating Archetypes' and I have noticed that the given directory structure under archetype/src/main/resources/META-INF/archetype.xml should read archetype/src/main/resources/META-INF/maven/archetype.xml.,Trivial,Brian Fox,brianf,Wed Jul 18 00:00:00 EDT 2007,[MNG-3113] Slight typo in 'Guide to Creating Archtypes',Closed,improvement
MNG-3118,Tue Jul 24 00:00:00 EDT 2007,Fixed,Currently maven-project creates the test classpath in the order: classes  tests-classes  dependencies. It would be better if test-classes came first because sometimes it is useful for a test class to replace a main class during testing.  The opposite case is not normally true (i.e. one would not want to override a test class with one of the main classes).,Major,null,null,Mon Jul 23 00:00:00 EDT 2007,[MNG-3118] Test-classes should come before classes in the classpath,Closed,improvement
MNG-3152,Tue Aug 21 00:00:00 EDT 2007,Fixed,Change to plugin testing harness to allow the setting of ArtifactRepository on the ArtifactStub,Major,Andrew Williams,handyande,Wed Aug 15 00:00:00 EDT 2007,[MNG-3152] Change to plugin testing harness to allow the setting of ArtifactRepository on the ArtifactStub,Closed,improvement
MNG-3168,Sun Jan 24 00:00:00 EST 2010,Fixed,When using the "-f" switch and passing the name of a file which does not exist  Maven complains about pom.xml  not the alternate file name.  For example  the command: mvn -f foo.xml install produces this error message: Cannot execute mojo: resources. It requires a project with an existing pom.xml  but the build is not using one. This error message is confusing and incorrect.  Maven should instead report that the file "foo.xml" could not be loaded.,Major,Benjamin Bentmann,bentmann,Tue Aug 28 00:00:00 EDT 2007,[MNG-3168] Correct error message when project descriptor not found,Closed,improvement
MNG-3182,Mon Sep 03 00:00:00 EDT 2007,Fixed,All the console based logging code needs to move to MavenCli.,Major,Jason van Zyl,jvanzyl,Mon Sep 03 00:00:00 EDT 2007,[MNG-3182] Remove console logging from DefaultMaven,Closed,improvement
MNG-3183,Mon Sep 03 00:00:00 EDT 2007,Fixed,We should have an option to log to text files: mvn -l build.txt clean ,Major,Jason van Zyl,jvanzyl,Mon Sep 03 00:00:00 EDT 2007,[MNG-3183] Allow a user to specify logging to a text file,Closed,improvement
MNG-3201,Mon Oct 22 00:00:00 EDT 2007,Fixed,This is completely useless: &#91;DEBUG&#93;   (f) project = org.apache.maven.project.MavenProject@255aaece &#91;DEBUG&#93;   (f) reactorProjects = &#91;org.apache.maven.project.MavenProject@76104acc  org.apache.maven.project.MavenProject@ccadffe2  org.apache.maven.project.MavenProject@16edfcd0  org.apache.maven.project.MavenProject@255aaece  org.apache.maven.project.MavenProject@677f8aca  org.apache.maven.project.MavenProject@52168df7  org.apache.maven.project.MavenProject@b720854  org.apache.maven.project.MavenProject@2879848c  org.apache.maven.project.MavenProject@a5150862  org.apache.maven.project.MavenProject@8f03016b  org.apache.maven.project.MavenProject@baaf2903  org.apache.maven.project.MavenProject@5138d332  org.apache.maven.project.MavenProject@2a99b933  org.apache.maven.project.MavenProject@b40bd50a  org.apache.maven.project.MavenProject@9862258  org.apache.maven.project.MavenProject@70b76a2d  org.apache.maven.project.MavenProject@c9f30a5c  org.apache.maven.project.MavenProject@4082f968  org.apache.maven.project.MavenProject@98122eb0  org.apache.maven.project.MavenProject@38d1386c  org.apache.maven.project.MavenProject@836e6a64  org.apache.maven.project.MavenProject@211a5153&#93;,Major,Brian Fox,brianf,Tue Sep 11 00:00:00 EDT 2007,[MNG-3201] org.apache.maven.project.MavenProject needs a toString(),Closed,improvement
MNG-3203,Tue Jun 09 00:00:00 EDT 2009,Fixed,Currently  it's impossible to configure the two default maven-compiler-plugin mojos in the jar lifecycle (:compile and :test-compile) separately without the configuration for one affecting both. This is because they are both executed in the same (default) execution. We should be assigning these to different execution id's  to allow separate configuration.,Major,John Casey,jdcasey,Tue Sep 11 00:00:00 EDT 2007,[MNG-3203] maven should execute compiler:compile and :test-compile in separate executions  to allow separate configuration,Closed,improvement
MNG-3214,Sun Jan 06 00:00:00 EST 2008,Fixed,Add a link reference to the sun repository with jars. https://maven-repository.dev.java.net/repository/,Trivial,Siveton Vincent,siveton,Tue Sep 18 00:00:00 EDT 2007,[MNG-3214] Coping with SUN JARs,Closed,improvement
MNG-3218,Tue Nov 27 00:00:00 EST 2007,Fixed,In the mojo documentation here: http://maven.apache.org/guides/plugin/guide-java-plugin-development.html It says: Listed below is a POM for a plugin which uses the simple sample mojo: I think it's supposed to say: Listed below is an illustration of the sample mojo project's pom with the parameters set as described in the above table: ,Major,Brian Fox,brianf,Fri Sep 21 00:00:00 EDT 2007,[MNG-3218] Plugin Documentation Update,Closed,improvement
MNG-3224,Mon Dec 22 00:00:00 EST 2008,Fixed,XML catalogs are usable especially for XML validation and in XML editors. They eliminate the need for schemaLocation attribute and online access to schema. They provide convenience and performance for XML processing. XML catalogs should map namespace to single schema file. This schema file can include other files but each namespace should be defined by single "primary" schema file. Unfortunately different maven schemes (maven-4.0.0.xsd  settings-1.0.0.xsd  etc.) define complex types with same name in the same namespace with different content. For Maven 2 I am suggesting quick solution which is to rename all repeating complex types to unique names and then either merge all schemes to one file or create simple "primary" schema file which would include all schema files. For Maven 3 I am suggesting to introduce different namespaces for different formats to allow separate versioning.,Major,Herv� Boutemy,hboutemy,Fri Sep 28 00:00:00 EDT 2007,[MNG-3224] Maven XML schemes are not usable in XML catalogs,Closed,improvement
MNG-3255,Sun Jan 06 00:00:00 EST 2008,Fixed,I tried checking out the 2.1 maven code and build to see if a problem I was seeing with maven eclipse integration was localized to the that integration or was caused by the new maven embedder in 2.1 that they use. I was checking out into a directory on my desktop under windows. The checkout did not complete and had a message: svn: Can't open file 'maven-components\maven-core\src\test\resources\org\apache\ maven\extension\test-extension-repo\org\apache\maven\core\test\test-lifecycle-an d-artifactHandler\1\.svn\tmp\text-base\test-lifecycle-and-artifactHandler-1.pom. md5.svn-base': The system cannot find the path specified. The problem is that while windows allows filenames up to 256 characters the maximum path length it allows is 260 characters. When you add that path to the path to the desktop directory it was too long. I was able to check it out to the root directory without problem. The guide to building maven should probably mention that for Windows users in the part about checking out the source.,Major,Siveton Vincent,siveton,Wed Oct 24 00:00:00 EDT 2007,[MNG-3255] Documentation for checking out and build should warn abour long path names on Windows,Closed,improvement
MNG-3268,Fri May 02 00:00:00 EDT 2008,Fixed,It is currently not possible to have more than one -P on the same command line. Only the first specified profile is considered. So if you do mvn -Pmain -Ptest only the main profile will be taken into account. This may sound enough but it's not when your maven call is wrapped into a batch file. Let's say you have a batch doing the compilation of a given module: a.bat ------------------------------------- mvn install -Pmymodule %* ------------------------------------- and you want to pass a special integration tests profile you would do: a.bat -Pintegration-tests But that won't work since you are not allowed to have two -P. To merge them in DOS shell is quite a pain in the ***.... ,Major,Paul Gier,pgier,Thu Nov 01 00:00:00 EDT 2007,[MNG-3268] Command line doesn't handle multiple -P correctly,Closed,improvement
MNG-3274,Mon Nov 05 00:00:00 EST 2007,Fixed,I have changed the MavenMetadataSource to have a flag which will determine if we blow up when a POM isn't present. It will not blow up but it's still pathetic that we get projects that don't give us POMs.,Major,Jason van Zyl,jvanzyl,Mon Nov 05 00:00:00 EST 2007,[MNG-3274] Have a clear flag to allow a POM or not,Closed,improvement
MNG-3279,Fri Jan 04 00:00:00 EST 2008,Fixed,It would be helpful if MojoFailureException provides constructors to supply an inner exception  just like MojoExecutionException does already.,Trivial,Siveton Vincent,siveton,Thu Nov 08 00:00:00 EST 2007,[MNG-3279] Support Exception Chaining for MojoFailureException,Closed,improvement
MNG-3318,Fri Jan 04 00:00:00 EST 2008,Fixed,ActiveProjectArtifact should have appropriate equals and hashCode method like the DefaultArtifact  to be comparable and to be usable with hash based collections.,Major,Siveton Vincent,siveton,Wed Dec 12 00:00:00 EST 2007,[MNG-3318] ActiveProjectArtifact should have appropriate equals and hashCode methods,Closed,improvement
MNG-3331,Tue Feb 05 00:00:00 EST 2008,Fixed,When collecting the sub modules during a reactor build  the path to the module POMs should always be normalized. Currently  this happens only on a Windows platform via File.getCanonicalFile(). The attached patch adds normalization (but not canonicalization) for other platforms  too. The motivation: Consider a multi module project with the following directory structure:   project/     project-parent/     project-module/ such that the parent POM in project-parent will contain    &lt;module&gt;../project-module&lt;/module&gt; to reference the sub module. Simple string/path concatenation will therefore deliver a path like     {SNIP}/project-parent/../project-module for the sub module. Having   {SNIP} /project-module  instead is surely better  and may it be just for nice log output. However  certain plugins/tools try to detect symlinks by comparing the canonicalized path with the absolute path of a file. While users of DirectoryScanner are usually fine because this class always canonicalizes the base directory before the check  code that does not know about a base directory but simply gets a single file will erroneously detect a symlink because ".." gets removed during canonicalization. This actually happens with the CpdReport of the maven-pmd-plugin. See CPD.addFile(int  File) for the cause  i.e. the code near line 97 where it prints "Skipping  {file}  since it appears to be a symlink".,Major,John Casey,jdcasey,Fri Dec 21 00:00:00 EST 2007,[MNG-3331] Normalize paths to sub modules,Closed,improvement
MNG-3335,Fri Jan 04 00:00:00 EST 2008,Fixed,The documentation for the "resource" / "targetPath" element in pom.xml here (http://maven.apache.org/ref/current/maven-model/maven.html#class_resource) is a little unclear about the location being relative to the target/classes directory. Specifically  I suggest adding: "The path is relative to the target/classes directory ($ {project.build.outputDirectory} ).",Major,Siveton Vincent,siveton,Sun Dec 23 00:00:00 EST 2007,[MNG-3335] Improvement to "resource" / "targetPath" element in pom.xml,Closed,improvement
MNG-3364,Thu Jan 17 00:00:00 EST 2008,Fixed,Hi I had small problems to get the Maven2 installed  because I used Windows system variables for "M2_HOME" and it in "path" variable. "Getting Started in 5 Minutes" should be excact for "stupid" users like I am. Problem was 1) I added M2_HOME to system variables - value was "C:\Apps\apache-maven-2.0.8\bin"   --&gt; mvn --version throwed a system message that mvn is not a valid command 2) I added M2_HOME to "path" variable   --&gt; mvn --version throwed a good error message that my JAVA_HOME was incorrect (I had that \bin there too) 3) I fixed JAVA_HOME - took that +bin away and tried again   --&gt; mvn --version throwed a good error message that my M2_HOME was incorrect (I had that \bin there too) 4) I fixed M2_HOME and path - took that +bin away and tried again  --&gt; mvn --version throwed a error message that I did not understand Usage: java [-options] class [args...]            (to execute a class)    or  java [-options] -jar jarfile [args...]            (to execute a jar file) where options include:     -client       to select the "client" VM     -server       to select the "server" VM     -hotspot      is a synonym for the "client" VM  [deprecated]                   The default VM is client.     -cp &lt;class search path of directories and zip/jar files&gt;     -classpath &lt;class search path of directories and zip/jar files&gt;                   A ; separated list of directories  JAR archives                   and ZIP archives to search for class files.     -D&lt;name&gt;=&lt;value&gt;                   set a system property     -verbose[:class|gc|jni]                   enable verbose output     -version      print product version and exit     -version:&lt;value&gt;                   require the specified version to run     -showversion  print product version and continue     -jre-restrict-search | -jre-no-restrict-search                   include/exclude user private JREs in the version search     -? -help      print this help message     -X            print help on non-standard options     -ea[:&lt;packagename&gt;...|:&lt;classname&gt;]     -enableassertions[:&lt;packagename&gt;...|:&lt;classname&gt;]                   enable assertions     -da[:&lt;packagename&gt;...|:&lt;classname&gt;]     -disableassertions[:&lt;packagename&gt;...|:&lt;classname&gt;]                   disable assertions     -esa | -enablesystemassertions                   enable system assertions     -dsa | -disablesystemassertions                   disable system assertions     -agentlib:&lt;libname&gt;[=&lt;options&gt;]                   load native agent library &lt;libname&gt;  e.g. -agentlib:hprof                     see also  -agentlib:jdwp=help and -agentlib:hprof=help     -agentpath:&lt;pathname&gt;[=&lt;options&gt;]                   load native agent library by full pathname     -javaagent:&lt;jarpath&gt;[=&lt;options&gt;]                   load Java programming language agent  see java.lang.instrument     -splash:&lt;imagepath&gt;                   show splash screen with specified image The problem was that I had "\" in the M2_HOME (M2_HOME was "C:\Apps\apache-maven-2.0.8\") Could you change a little this document - use examples and pictures - that would be helpfull. Thx -JPP,Minor,Siveton Vincent,siveton,Thu Jan 17 00:00:00 EST 2008,[MNG-3364] Path documentation is not excact in "Getting Started in 5 Minutes",Closed,improvement
MNG-3369,Tue Jan 29 00:00:00 EST 2008,Fixed,I discovered reporting plugins that struggle to run properly both during a site generation and during a standalone run because of their wrong usage of the outputDirectory parameter. A proper documentation of the API could have prevented that so I tried to add some explaining words to the Javadoc.,Major,Brian Fox,brianf,Fri Jan 18 00:00:00 EST 2008,[MNG-3369] Improve documentation for AbstractMavenReport.getOutputDirectory(),Closed,improvement
MNG-3388,Wed Feb 06 00:00:00 EST 2008,Fixed,Working on the maven-pdf-plugin  it is hard to understand why we got LinkageError. We need to catch this exception and display the content of realm.,Major,Siveton Vincent,siveton,Wed Feb 06 00:00:00 EST 2008,[MNG-3388] DefaultPluginManager needs to catch LinkageError,Closed,improvement
MNG-339,Mon Jun 20 00:00:00 EDT 2005,Fixed,presently  missing or invalid checksums are just warned on. sha1 and md5 are always uploaded. Need to pick one or the other for a repository (might choose to upload both  though probably not worth testing both on the way down) Need a way to specify a master override (command line) to turn off strict checking of things like this and anything else (eg skip bad transitive deps) ** Might want to retry on failure? had a discussion about this and it seems better to do this than to allow it to be specified in the project  to encourage those that have bad metadata to fix it. Need to still reassess the impact on the user  but we are in a position to make sure repo1 is verified and its integrity is maintained. ,Major,John Casey,jdcasey,Thu Apr 21 00:00:00 EDT 2005,[MNG-339] improve checksum handling,Closed,improvement
MNG-3395,Mon Mar 17 00:00:00 EDT 2008,Fixed,We should define the plugin versions for core and other common plugins (the apache plugins is a good place to start) in the super pom in 2.0.x to help with stability. See here for more info. http://www.nabble.com/Plugin-Versions-in-the-Super-pom-to15367074s177.html#a15367074,Major,Brian Fox,brianf,Sat Feb 09 00:00:00 EST 2008,[MNG-3395] Default core plugin versions in the superpom.,Closed,improvement
MNG-3402,Mon Jul 27 00:00:00 EDT 2009,Fixed,A plugin (like pdf-plugin) needs to use the most recent sink API and not the API embedded in maven. ,Major,Brett Porter,brettporter,Fri Feb 15 00:00:00 EST 2008,[MNG-3402] MavenArtifactFilterManager needs to not filtering doxia-sink-api,Closed,improvement
MNG-3424,Wed Oct 29 00:00:00 EDT 2008,Fixed,"Better safe than sorry" suggests to keep the ordering of collections when converting them into maps. It's hard to know when ordering is really irrelevant and the penalty of using java.util.Linked* is usually neglectable.,Trivial,Brett Porter,brettporter,Fri Feb 29 00:00:00 EST 2008,[MNG-3424] Respect ordering of elements as given in POM,Closed,improvement
MNG-3442,Thu Mar 06 00:00:00 EST 2008,Fixed,See MPIR-79 for some nice explanation.,Major,Siveton Vincent,siveton,Thu Mar 06 00:00:00 EST 2008,[MNG-3442] Add explicit resource bundle for English,Closed,improvement
MNG-3451,Fri Dec 19 00:00:00 EST 2008,Fixed,There are some message files hanging around in maven-core that miss a german edition. However  I wonder whether these files are actually really used. I searched my working copy and couldn't find any references to a key from the bundle or the bundle name itself. If this is really unused stuff from ancient times  it should better be completely deleted.,Trivial,Benjamin Bentmann,bentmann,Sat Mar 08 00:00:00 EST 2008,[MNG-3451] Add german translation,Closed,improvement
MNG-3461,Mon Mar 17 00:00:00 EDT 2008,Fixed,I ran into some issues recently with the IT tests. I use a mirrorof * to redirect everything to a repo manager but this is also redirecting the file based repositories. I can't think of any good reason this should apply to anything other than remote repos. I have two proposals: 1.      Change maven so that file based repos ignore all mirror settings 2.      Change maven so that file based repos ignore the wildcard but will respond if the mirror specifically names it. I can't think of any reason why a mirror should override a local repo so I suggest we go with #1.  ,Major,Brian Fox,brianf,Thu Mar 13 00:00:00 EDT 2008,[MNG-3461] Enhance Mirror definition syntax,Closed,improvement
MNG-3463,Wed Dec 15 00:00:00 EST 2010,Fixed,AbstractMojo currently defines it's own Log interface  hard coded to use System.out. This really restricts the logging capabilities of all plugins. It would be nice if it attempted to look up the plexus role "org.codehaus.plexus.logging.LoggerManager" first and only used System.out if that failed. Doing this would also go a long way towards resolving MNG-2570 and MNG-3305.,Major,Benjamin Bentmann,bentmann,Fri Mar 14 00:00:00 EDT 2008,[MNG-3463] AsbtractMojo should look for LoggerManager plexus component,Closed,improvement
MNG-3467,Tue Mar 18 00:00:00 EDT 2008,Fixed,It would be nice if PatternSet had a toString() method so it would print something intelligent rather than simply a memory location in debug mode. Before this change  it prints like: PatternSet@17a29a1 With this patch  it prints like: PatternSet [includes:  {one  two}  excludes:  {three  four} ],Major,Brian Fox,brianf,Mon Mar 17 00:00:00 EDT 2008,[MNG-3467] PatternSet needs a toString() method to properly print in debug mode,Closed,improvement
MNG-3468,Tue Mar 18 00:00:00 EDT 2008,Fixed,It would be nice if FileSet had a toString() method so it would print something intelligent rather than simply a memory location in debug mode.  Before this change  it prints like:  FileSet@129f3b5 With this patch  it prints like (assuming you accept my PatternSet patch): FileSet {directory: src/main/resources  PatternSet &#91;includes: {}  excludes: {}&#93;},Major,Brian Fox,brianf,Mon Mar 17 00:00:00 EDT 2008,[MNG-3468] FileSet needs a toString() method to properly print in debug mode,Closed,improvement
MNG-3469,Tue Mar 18 00:00:00 EDT 2008,Fixed,It would be nice if Resouce had a toString() method so it would print something intelligent rather than simply a memory location in debug mode. (People have complained about this on the Users list  and I've noticed it myself &#8211; its annoying.) Before this change  it prints like:  Resource@8f4fb3  With this patch  it prints like (assuming you accept my FileSet and PatternSet patches): Resource {targetPath: /target/resource-test  filtering: true  FileSet {directory: null  PatternSet &#91;includes: {}  excludes: {}&#93;}},Major,Brian Fox,brianf,Mon Mar 17 00:00:00 EDT 2008,[MNG-3469] Resource needs a toString() method to properly print in debug mode,Closed,improvement
MNG-3478,Wed Jun 25 00:00:00 EDT 2008,Fixed,The super POM hard-codes several paths to "target/...". Re-using project.build.directory for those paths would ease customization.,Trivial,John Casey,jdcasey,Sat Mar 22 00:00:00 EDT 2008,[MNG-3478] Use expression ${project.build.directory} instead of hard-coding "target" in super POM,Closed,improvement
MNG-3502,Sat Apr 05 00:00:00 EDT 2008,Fixed,The current description  in the POM reference  for the "provided" dependency scope is a bit misleading.  It currently states: "This scope ... is only available for the test compilation and execution phases." When I read this I thought that meant the dependency would only be available in the test-compile and execution phases.  What I needed was a scope that was available during the compilation  test  and execution phase.  Searching the user-list showed a couple other people were tripped up by this as well. I'd like to recommend a change of wording then to make this more clear: "This scope ... is available in the compilation  test compilation  and execution phases.",Minor,Benjamin Bentmann,bentmann,Sat Apr 05 00:00:00 EDT 2008,[MNG-3502] Reword description of "provided" scope,Closed,improvement
MNG-3503,Fri Oct 17 00:00:00 EDT 2008,Fixed,The Maven uber JAR currently ships with unshaded MXParser and MXSerializer  preventing plugins from using their recent implementations from plexus-utils. My initial question on the dev list showed now immediate objections and the core ITs also smile so here we go with the proposed patch.,Minor,Brett Porter,brettporter,Sat Apr 05 00:00:00 EDT 2008,[MNG-3503] Shade MX* classes from plexus-utils,Closed,improvement
MNG-3509,Sun Apr 13 00:00:00 EDT 2008,Fixed,Printing a platform's locale and file encoding might be worth to add when Maven is requested to show version information since these parameters can affect text/string handling code.,Minor,Herv� Boutemy,hboutemy,Tue Apr 08 00:00:00 EDT 2008,[MNG-3509] Make "mvn -v" output locale/encoding,Closed,improvement
MNG-3511,Tue Jul 08 00:00:00 EDT 2008,Fixed,As requested by Brett in MNG-3276  here a new issue. My relevant comment over at the other issue: I still consider the output from Maven quite unhelpful in this case. Please consider that Maven is just a tool/utility for developers and hence not everybody out there will spend time to get through the documentation. Some peoply simply want to "use" Maven  not understand how it works. The Ant scripts that I am trying to replace in our organization all provided some help about the current project and the available targets using the echo task when the default target was executed. This allowed newbies to quickly figure out how to perform build steps without ever reading the Ant manual. Surely  once you know Maven's lifecycle you never need such help targets but especially old Ant geeks need some easy way of migrating into Maven land. The attached patch should provide the following console output: [INFO] Scanning for projects... [INFO] ------------------------------------------------------------------------ [ERROR] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] You must specify at least one goal or lifecycle phase to perform build steps. The following list illustrates some commonly used build commands:   mvn clean     Deletes any build output (e.g. class files or JARs).   mvn test     Runs the unit tests for the project.   mvn install     Copies the project artifacts into your local repository.   mvn deploy     Copies the project artifacts into the remote repository.   mvn site     Creates project documentation (e.g. reports or Javadoc). Please see http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html for a complete description of available lifecycle phases. Use "mvn -?" to show general usage information about Maven's command line. [INFO] ------------------------------------------------------------------------ [INFO] For more information  run Maven with the -e switch [INFO] ------------------------------------------------------------------------ [INFO] Total time: 1 second [INFO] Finished at: Mon Oct 22 20:48:42 EDT 2007 [INFO] Final Memory: 1M/4M [INFO] ------------------------------------------------------------------------ This output is intended to show further comon use-cases than just "install". Besides  the user is pointed to a concrete URL with helpful information for his actual need (personally  I consider pointing people at home pages as helpful as telling to use Google... information should be found  not searched),Minor,John Casey,jdcasey,Wed Apr 09 00:00:00 EDT 2008,[MNG-3511] Review fix for MNG-2166,Closed,improvement
MNG-3520,Mon Apr 14 00:00:00 EDT 2008,Fixed,If I translate the message proeries to Korean  Can you add Korean message properies? I attached a Korean message properties  and I hope this file will be added to next release. Have a good day!,Major,Siveton Vincent,siveton,Sun Apr 13 00:00:00 EDT 2008,[MNG-3520] Korean message resource,Closed,improvement
MNG-3526,Tue Jan 07 00:00:00 EST 2014,Fixed,We currently many projects that use an OSGi compatible scheme for release version numbers.  The OSGi spec does not currently allow a "-" to determine the location of the qualifier.  So instead of the maven standard like this: 1.0.1-beta-1 We have something like this: 1.0.1.beta1 Maven's currently handles this by treating the entire version string as a classifier.  It would be helpful this could be parsed as  major = 1 minor = 0 incremental = 1 qualifier = beta1,Major,stephenconnolly,stephenconnolly,Tue Apr 15 00:00:00 EDT 2008,[MNG-3526] Small change to artifact version parsing.,Closed,improvement
MNG-353,Sun May 22 00:00:00 EDT 2005,Fixed,I'm pretty sure we can only configure objects (at least via expressions) with objects like java.lang.Boolean instead of a primitive type,Major,Brett Porter,brettporter,Mon Apr 25 00:00:00 EDT 2005,[MNG-353] allow primitive fields in mojos,Closed,improvement
MNG-3544,Sun Nov 23 00:00:00 EST 2008,Fixed,Currently: [DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-jar-plugin:2.2:jar' --&gt; [DEBUG]   (f) excludes = [Ljava.lang.String;@c3c315 [DEBUG] -- end configuration -- i.e. arrays won't show up nicely. The attached patch returns a string similar to the result of   Arrays.asList( (Object[]) value ).toString() but uses reflection to handle arrays of primitives as well.,Trivial,Benjamin Bentmann,bentmann,Wed Apr 23 00:00:00 EDT 2008,[MNG-3544] Beautify debug output for mojo parameters of type array,Closed,improvement
MNG-3571,Thu May 15 00:00:00 EDT 2008,Fixed,The current syntax for deactivating a profile from the command line is: mvn -P-myProfile It would be more intuitive if the exclamation point could be used in addition to the dash. mvn -P!myProfile,Minor,Paul Gier,pgier,Tue May 13 00:00:00 EDT 2008,[MNG-3571] Allow use of ! when deactivating profiles,Closed,improvement
MNG-3575,Sat Feb 12 00:00:00 EST 2011,Fixed,I like to ask to hexadecimal support on parameters  like this: /* @parameter default-value="0x869CA7"  */ private int defaultBackgroundColor; ,Major,Benjamin Bentmann,bentmann,Wed May 14 00:00:00 EDT 2008,[MNG-3575] Allow hexadecimal parameters,Closed,improvement
MNG-3598,Mon May 26 00:00:00 EDT 2008,Fixed,In order to make OSGi dependency information available during maven build  Tyhco needs a way to participate in how Maven reads and resolves project dependencies. Maven 2.1 almost provides this capabilities  except for unfortunate "private" modifier. Attached is a trivial patch that allows subclasses override relevant methods.,Major,Jason van Zyl,jvanzyl,Mon May 26 00:00:00 EDT 2008,[MNG-3598] trivial patch to enable custom depepndeny resolution mechanism,Closed,improvement
MNG-3600,Wed Feb 04 00:00:00 EST 2009,Fixed,setting this makes it impossible to have "no setting"  that is  to trust the umask on the server. This also means that if files on the server are not owned by the user  deploy fails because the mode can't be set. wagon 1.0-beta-3 has fixed a number of long standing issues with file permission setting using scp that were part of the impetus for this change  though it proved ineffectual in the end.,Major,Brett Porter,brettporter,Wed May 28 00:00:00 EDT 2008,[MNG-3600] remove default settings of 664 / 775 for permissions,Closed,improvement
MNG-3631,Sat May 16 00:00:00 EDT 2009,Fixed,There are five sources for maven plugin configuration &#8211; build/plugins  parent build/plugins  build/pluginManagement  parent build/pluginManagement and plugin default configuration. Currently  MavenEmbedder.readProjectWithDependencies never considers default plugin configuration. Also  lifecycle-included plugins and configuration are not considered during readProjectWithDependencies (see MNGECLIPSE-627). It would be nice to have new method MavenEmbedder.getPluginConfiguration( MavenProject project  String pluginKey ): PlexusConfiguration (or similar) which would calculate and return fully inherited/interpolated plugin configuration.,Major,Shane Isbell,sisbell,Wed Jun 25 00:00:00 EDT 2008,[MNG-3631] Introduce new MavenEmbedder.getPluginConfiguration method,Closed,improvement
MNG-3648,Mon Dec 28 00:00:00 EST 2009,Fixed,Things I would like to move to 'debug' or 'trace' levels: 1. Reactor build order list: the order is always the same  so why print? if it's an issue of telling the user  in case he forgot to trigger a profile  then i think that in most cases it misses the target  simply because it appears so much that people just don't pay attention to the list 2. Reactor summary: showing successful modules means it's harder to find the failed ones. Just show me what failed.  3. Plugins usually print they are running in 'info' level. This is actually a tracing message as they will always run. I know I can suppress these with '-q'  but then it suppresses all 'info' messages  so that relevant information about actions taken (actions that change in each build) is not printed. ,Major,null,null,Thu Jul 03 00:00:00 EDT 2008,[MNG-3648] Maven is too verbose in its output  obscuring actual messages,Closed,improvement
MNG-3652,Thu Jul 03 00:00:00 EDT 2008,Fixed,Apache Maven/2.1-SNAPSHOT,Major,Brett Porter,brettporter,Thu Jul 03 00:00:00 EDT 2008,[MNG-3652] set a user agent for Maven HTTP requests,Closed,improvement
MNG-3673,Tue Jul 22 00:00:00 EDT 2008,Fixed,Use this issue to record which plugins were changed  and which version was used for each.,Major,John Casey,jdcasey,Mon Jul 21 00:00:00 EDT 2008,[MNG-3673] Upgrade plugin versions in super-POM where appropriate,Closed,improvement
MNG-3698,Fri Aug 22 00:00:00 EDT 2008,Fixed,This is increasing time to build by anywhere from 20% up to a reported 300%  depending on whether reports and aggregator mojos are bound into the lifecycle phases that are executed. Best candidate for fixing this issue is currently to move this transition into the LIfecycleExecutor (out of the PluginManager and PluginParameterExpressionEvaluator) to make the transition less sensitive to report instantiation and forked lifecycles. There are a couple of other potential performance improvements in the interpolator itself  such as giving a plausible buffer size to the StringWriter embedded for model interpolation  and hanging onto the plexus-interpolator RegexBasedInterpolator instance to prevent continual re-instantiation of the underlying regex Pattern object.,Blocker,John Casey,jdcasey,Wed Aug 06 00:00:00 EDT 2008,[MNG-3698] Improve performance regarding concrete/dynamic build transitions surrounding plugin executions and report instantiations,Closed,improvement
MNG-3709,Thu Aug 14 00:00:00 EDT 2008,Fixed,I'll see if this is feasible for 2.0.10  but may push it to 2.0.11 since the source is  in fact  making it out to the repository...just in a different artifact-id.,Trivial,John Casey,jdcasey,Thu Aug 14 00:00:00 EDT 2008,[MNG-3709] Be sure source distro has the same name as the binary distro in the repository.,Closed,improvement
MNG-371,Sun May 08 00:00:00 EDT 2005,Fixed,I got the following error java.lang.IllegalStateException: Plugin descriptor ID incomplete: null:null:null         at org.apache.maven.plugin.descriptor.PluginDescriptor.getId(PluginDescriptor.java:112)         at org.apache.maven.plugin.DefaultPluginManager.componentDiscovered(DefaultPluginManager.java:129) .... I fixed the errormessage to include the location of the Plugin Descriptor plugin.xml file. To do that  I had to modify PluginDescriptor to add a 'source' attribute; modify maven-core's MavenPluginDiscoverer to not disregard the source parameter and pass it on to maven-plugin-descriptor's PluginDescriptorBuilder (retaining backwards compatiblity) and set it there. Now the errormessage looks like: java.lang.IllegalStateException: Plugin descriptor ID incomplete: null:null:null in jar:file:/home/forge/.m2/repository/org/apache/maven/plugins/maven-war-plugin/1.0-SNAPSHOT/maven-war-plugin-1.0-20050405.162144-1.jar!/META-INF/maven/plugin.xml         at org.apache.maven.plugin.descriptor.PluginDescriptor.getId(PluginDescriptor.java:112)         at org.apache.maven.plugin.DefaultPluginManager.componentDiscovered(DefaultPluginManager.java:130) which is a lot more helpful to me. I thought I'd share this with you  hoping you'll find it useful enough to incorporate it. By the way  this exception is triggered in a new NullpointerException (in DefaultPluginManager) warning about the PluginDescriptor's version being null; while constructing this message another exception is triggered  so the original error doesn't get through at all. For the record  I tried to enhance Plexus' ComponentSetDescriptor  but found I could only access the source (parameter) in 2 out of 5 places without API modification  so I abandoned this approach but it might prove wise to include the source there  rather than in the special case of maven's PluginManager.,Minor,null,null,Sat May 07 00:00:00 EDT 2005,[MNG-371] PluginDescriptor location enhancement,Closed,improvement
MNG-3714,Fri Sep 04 00:00:00 EDT 2009,Fixed,Allowing CLI specification of the toolchains.xml file will allow more flexible configurations in CI environments.,Major,Benjamin Bentmann,bentmann,Thu Aug 14 00:00:00 EDT 2008,[MNG-3714] Allow specification of the toolchains.xml location on the command line,Closed,improvement
MNG-377,Wed Jul 20 00:00:00 EDT 2005,Fixed,We have a default rule which will be used as a fallback  where the prefix "idea" is turned into "maven-idea-plugin". This will be retained if no other information is found. Before applying the default rule  some more metadata from the repository will be consulted. This will be stored at the group level  and named "plugins.xml". /org/apache/maven/plugins/plugins.xml /org.apache.maven.plugins/plugins.xml While this could potentially include version information as well  it is worth being able to check these on a plugin-by-plugin basis  and it also fits with the potential RELEASE specifier on dependencies. This could be reconsidered in future versions. Format of the file for now is simple: &lt;prefixes&gt;   &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;   &lt;plugins&gt;     &lt;plugin&gt;       &lt;prefix&gt;idea&lt;/prefix&gt;       &lt;artifactId&gt;maven-idea-plugin&lt;/artifactId&gt;     &lt;/plugin&gt;     ...   &lt;/plugins&gt; &lt;/prefixes&gt; This particular file will also be updated at release time for a plugin (though it should rarely be necessary as only new additions need to be published back). The list of group IDs to search will be configured from settings.xml with the default being just org.apache.maven.plugins. The process will be to load the plugins.xml file from each of the configured groups  then build the map of prefixes to plugin group/artifactIDs. If there is a clash  initially it should fail. We might allow using the first discovered or some other resolution mechanism  but would hope not to get that situation as a goal representation might start taking on different meanings in different contexts.,Major,John Casey,jdcasey,Tue May 10 00:00:00 EDT 2005,[MNG-377] implement group/artifactID looked by plugin prefix,Closed,improvement
MNG-3779,Mon Mar 29 00:00:00 EDT 2010,Fixed,I've seen many users on the mailing lists or in my company who get this error message: Cannot execute mojo: resources. It requires a project with an existing pom.xml  but the build is not using one. Most often than not they do not understand what the cause of the problem is. Most often that not this is simply because they are 1 directory up or down relatively to the directory that contains the pom.xml of the project they want to build. I suggest that the error message should be updated to something like: Cannot execute mojo "bla". Maven was executed in directory "foo" and it doesn't contain a pom.xml Moreover  maven should look 1 directory up and 1 directory down from the basedir for pom.xml files. And if one is detected suggest the user to move to that directory.,Major,Benjamin Bentmann,bentmann,Wed Oct 01 00:00:00 EDT 2008,[MNG-3779] Improve error message when trying to execute mojo with no pom.xml,Closed,improvement
MNG-378,Mon May 23 00:00:00 EDT 2005,Fixed,currently  this is published with every deployment  including snapshots. This is probably not desirable  as it will cause people referencing that plugin repository to receive updates they do not want. Only publish the file at release time (which might be for a snapshot  if desired),Major,Brett Porter,brettporter,Tue May 10 00:00:00 EDT 2005,[MNG-378] only publish RELEASE.version.txt at release time,Closed,improvement
MNG-3787,Sun Nov 23 00:00:00 EST 2008,Fixed,For the same reasons that motivated MNG-3395  there should also be a version lockdown for the default reports. Note: Due to MNG-3385  this can't currently be realized via the super POM.,Major,Benjamin Bentmann,bentmann,Sun Oct 12 00:00:00 EDT 2008,[MNG-3787] Add plugin version to default reports,Closed,improvement
MNG-379,Thu Jun 16 00:00:00 EDT 2005,Fixed,currently  plugin updates are checked daily (or whatever the plugin repository's snapshot policy is)  and new versions downloaded automatically. The user needs more control: prompting for updates ability to stick to a particular version ability to check on different intervals than snapshots (probably default to never  and use a --update-plugins clie or something) ,Major,John Casey,jdcasey,Tue May 10 00:00:00 EDT 2005,[MNG-379] more control over plugin updates,Closed,improvement
MNG-3794,Thu Feb 19 00:00:00 EST 2009,Fixed,When resolving dependencies (downloading pom.xml or jar files)  the logging output does not offer any information as to WHY the respective file was not downloaded. Consider the following output (snipped from a standard "mvn install" run): Downloading: http://mavenproxy/repository/proxy/javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.pom Downloading: http://mavenproxy/repository/unavailables/javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.pom Downloading: http://mavenproxy/repository/inHouse//javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.pom Downloading: http://mavenproxy/repository/proxy/javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.pom Downloading: http://mavenproxy/repository/proxy/javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.jar Downloading: http://mavenproxy/repository/unavailables/javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.jar Downloading: http://mavenproxy/repository/inHouse//javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.jar Downloading: http://download.java.net/maven/1//javax.xml.ws/jars/jaxws-api-2.1-1.jar Downloading: http://mavenproxy/repository/proxy/javax/xml/ws/jaxws-api/2.1-1/jaxws-api-2.1-1.jar As you can see  a maven proxy is queried  and then re-checked  but no clear statement is made as to WHY this happens (could be connection problems  not found - 404  not authenticated - 401).,Major,Brett Porter,brettporter,Thu Oct 16 00:00:00 EDT 2008,[MNG-3794] Improve error logging when downloading depedencies,Closed,improvement
MNG-3795,Thu Dec 18 00:00:00 EST 2008,Fixed,Unless there were reasons to hide &lt;pluginGroups&gt; from users  we should consider to add some example snippet to the installation settings of the distro. This settings file is often used as a starting point for a customized user settings and its various example snippets usually save one from searching the Maven site.,Trivial,Brett Porter,brettporter,Fri Oct 17 00:00:00 EDT 2008,[MNG-3795] Add example <pluginGroups> snippet to conf/settings.xml in distribution,Closed,improvement
MNG-3825,Sat Jul 30 00:00:00 EDT 2016,Fixed,If I have two dependencies one with a classifier and one without  that look something like this: &lt;dependency&gt;   &lt;groupId&gt;com.mycompany&lt;/groupId&gt;   &lt;artifactId&gt;project1&lt;/artifact&gt;   &lt;version&gt;1&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt;   &lt;groupId&gt;com.mycompany&lt;/groupId&gt;   &lt;artifactId&gt;project1&lt;/artifact&gt;   &lt;classifier&gt;client&lt;/classifier&gt;   &lt;version&gt;1&lt;/version&gt; &lt;/dependency&gt; Currently I need to specify versions for both of them.  If I specify the versions in dependency management  I should only have to specify the non-classifier version.  The dependency with the classifier should default to the same version as the one without the dependency.  This would save a lot of extra configuration for some projects. ,Major,null,null,Fri Nov 07 00:00:00 EST 2008,[MNG-3825] Dependencies with classifier should not always require a version.,Closed,improvement
MNG-383,Wed May 18 00:00:00 EDT 2005,Fixed,We need to obtain in MavenProject the resolved artifact of parent  plugins and reports like dependencies. So  we can differentiate the baseVersion and the real version. It will simplify the release process.,Major,null,null,Thu May 12 00:00:00 EDT 2005,[MNG-383] Create and resolve artifact parent  plugin and reports in maven-project,Closed,improvement
MNG-3834,Mon Apr 13 00:00:00 EDT 2009,Fixed,Currently  if I have two dependencies on the same groupId:artifactId  one with a classifier and one without  the missing version error message does not distinguish which dependency is missing a version.  For example  the following pom is missing a version number for one of the dependencies. &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;   &lt;groupId&gt;org.apache.maven&lt;/groupId&gt;   &lt;artifactId&gt;missing-version-error&lt;/artifactId&gt;   &lt;packaging&gt;jar&lt;/packaging&gt;   &lt;name&gt;Missing version error&lt;/name&gt;   &lt;version&gt;1.0.0-SNAPSHOT&lt;/version&gt;      &lt;dependencies&gt;     &lt;dependency&gt;       &lt;groupId&gt;org.apache.maven&lt;/groupId&gt;       &lt;artifactId&gt;myartifact1&lt;/artifactId&gt;       &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;     &lt;/dependency&gt;     &lt;dependency&gt;       &lt;groupId&gt;org.apache.maven&lt;/groupId&gt;       &lt;artifactId&gt;myartifact1&lt;/artifactId&gt;       &lt;classifier&gt;test&lt;/classifier&gt;     &lt;/dependency&gt;   &lt;/dependencies&gt; &lt;/project&gt; The error message prints the following: Validation Messages:     [0]  'dependencies.dependency.version' is missing for org.apache.maven:myartifact1 The error message should include information about the dependency's classifier.,Minor,Paul Gier,pgier,Tue Nov 11 00:00:00 EST 2008,[MNG-3834] Improve error message when dependency with classifier is missing version,Closed,improvement
MNG-386,Tue Jul 26 00:00:00 EDT 2005,Fixed,this ballooned out over 1mb with the inclusion of site stuff in alpha-2. It and marmalade should only be used as needed  not in the distro.,Major,Brett Porter,brettporter,Fri May 13 00:00:00 EDT 2005,[MNG-386] trim back the distro,Closed,improvement
MNG-3865,Sat Nov 22 00:00:00 EST 2008,Fixed, ,Major,Jason van Zyl,jvanzyl,Sat Nov 22 00:00:00 EST 2008,[MNG-3865] Allow the generation of the component.xml files from the bootstrap so that we can start eliminating the hand-written versions,Closed,improvement
MNG-3867,Tue Dec 23 00:00:00 EST 2008,Fixed,When using "mvnDebug" to start maven  the MAVEN_OPTS environment variable from $HOME/.mavenrc is not used. This makes it hard to set stuff like -Xmx on a debuggable maven instance. Workaround of course is not to use mvnDebug but put all debug option  including the -Xmx  inside the MAVEN_OPTS  but this kind of beats the purpose of mvnDebug ,Minor,Benjamin Bentmann,bentmann,Mon Nov 24 00:00:00 EST 2008,[MNG-3867] Support MAVEN_OPTS in mvnDebug script,Closed,improvement
MNG-3891,Thu Dec 25 00:00:00 EST 2014,Fixed,Actually  we can only specify the toolchains.xml in ${user.home}/.m2/toolchains.xml. However  like for the settings.xml  it would be very convenient to specify a default toolchains.xml in ${maven.home}/conf/toolchains.xml The idea is : If there is NO ${user.home}/.m2/toolchains.xml   then uses ${maven.home}/conf/toolchains.xml   otherwise NONE defined. Merging both would also be good but not necessary. The change is very simple. Edit the file maven-toolchain\src\main\java\org\apache\maven\toolchain\DefaultToolchainManager.java and replace  private PersistedToolchains readToolchainSettings() throws MisconfiguredToolchainException {     File tch = new File(System.getProperty("user.home")  ".m2/toolchains.xml");     if (tch.exists()) {        MavenToolchainsXpp3Reader reader = new MavenToolchainsXpp3Reader();        ... by  private PersistedToolchains readToolchainSettings() throws MisconfiguredToolchainException {     File tch = null;     tch = new File(System.getProperty("user.home")  ".m2/toolchains.xml");     if (tch == null || !tch.exists()) {         tch = new File(System.getProperty("maven.home")  "conf/toolchains.xml");     }     if (tch.exists()) {         MavenToolchainsXpp3Reader reader = new MavenToolchainsXpp3Reader();         ... I did that on my local environment by compiling this 2.0.11-SNAPSHOT class and integrating it in my maven-2.0.9-uber.jar and it works perfectly. ,Major,Robert Scholte,rfscholte,Thu Dec 04 00:00:00 EST 2008,[MNG-3891] Modify maven-toolchain to look in ${maven.home}/conf/toolchains.xml and in ${user.home}/.m2/toolchains.xml ,Closed,improvement
MNG-390,Fri Aug 05 00:00:00 EDT 2005,Fixed, ,Minor,Trygve Laugst�l,trygvis,Sat May 14 00:00:00 EDT 2005,[MNG-390] The compiler mojos should show the compile classpath when running with -X,Closed,improvement
MNG-3915,Sun Dec 21 00:00:00 EST 2008,Fixed,Refactoring has been an order of magnitude easier since using annotations for everything  but I'm still getting bitten by test cases using manually written component descriptors. These all need to go ASAP.,Major,Jason van Zyl,jvanzyl,Sun Dec 14 00:00:00 EST 2008,[MNG-3915] Use annotations in all test components to get rid of manually written test components.xml files,Closed,improvement
MNG-3951,Fri Jan 30 00:00:00 EST 2009,Fixed,Take this nice path: /tmp (note the leading slash). This is an absolute path on Unix derivates but a drive-relative path on a Windows box. Drive-relative paths are resolved by prepending the drive of the current directory  not the entire current directory. This notation of a drive-relative path is not well-known  even among Windows users  and in particular not easy going for cross-platform Java tools. A Java developer usually assumes that a path is either (directory-)relative or absolute. To avoid unnecessary complications as seen on our own multi-OS CI grid (cf. dev@ thread CI Grid  Windows and Paths) and as reported by users (e.g. MECLIPSE-404)  the core should not only align directory-relative paths but also resolve drive-relative paths.,Minor,Benjamin Bentmann,bentmann,Fri Jan 02 00:00:00 EST 2009,[MNG-3951] Hide drive-relative paths from plugins,Closed,improvement
MNG-3962,Fri Jan 30 00:00:00 EST 2009,Fixed, ,Major,olle,olle,Mon Jan 05 00:00:00 EST 2009,[MNG-3962] Allow a Maven runtime to update itself,Closed,improvement
MNG-3969,Wed Feb 25 00:00:00 EST 2009,Fixed, ,Major,Jason van Zyl,jvanzyl,Mon Jan 05 00:00:00 EST 2009,[MNG-3969] replace maven-ant with mercury-ant in the bootstrap,Closed,improvement
MNG-3971,Wed Feb 11 00:00:00 EST 2009,Fixed,In particular  we need to make sure classpaths  etc. that are available in the antrun plugin are made available in the ant-mojo support. Going forward  it'd be nice to find a way to use a common module for the two ways of using Ant inside Maven. The features available in the Antrun Plugin are often confused with those available in the ant-mojo support  so this feature parity is critical to make Ant usage in Maven more intuitive.,Major,John Casey,jdcasey,Tue Jan 06 00:00:00 EST 2009,[MNG-3971] Provide parity in features between native ant-mojo support and antrun plugin,Closed,improvement
MNG-3975,Wed Jan 14 00:00:00 EST 2009,Fixed,We recently had an issue where the local repo could not be created due to permissions issues.  Unfortunately the default output of mvn -X is not helpful in debugging this issue. In org.apache.maven.wagon.AbstractWagon:    protected void createParentDirectories( File destination )         throws TransferFailedException     {         File destinationDirectory = destination.getParentFile();         if ( destinationDirectory != null &amp;&amp; !destinationDirectory.exists() )         {             if ( !destinationDirectory.mkdirs() )             {                 throw new TransferFailedException(                     "Specified destination directory cannot be created: " + destinationDirectory );             }         }     } if  TransferFailedException("Specified destination directory cannot be created: " + destinationDirectory ); is thrown it eventually bubbles up to org.apache.maven.artifact.manager.DefaultWagonManager and is caught in the second catch block from this snippet of public void getArtifact( Artifact artifact  List remoteRepositories ):          try             {                 getArtifact( artifact  repository );                 successful = artifact.isResolved();             }             catch ( ResourceDoesNotExistException e )             {                 // This one we will eat when looking through remote repositories                 // because we want to cycle through them all before squawking.                 getLogger().debug( "Unable to get resource '" + artifact.getId() + "' from repository " +                     repository.getId() + " (" + repository.getUrl() + ")" );             }             catch ( TransferFailedException e )             {                 getLogger().debug( "Unable to get resource '" + artifact.getId() + "' from repository " +                     repository.getId() + " (" + repository.getUrl() + ")" );             } Can we also include the exception in the debug log message?  e.g. make this call:     getLogger().debug( "Unable to get resource '" + artifact.getId() + "' from repository " +                     repository.getId() + " (" + repository.getUrl() + ")"   e); ,Minor,Benjamin Bentmann,bentmann,Wed Jan 07 00:00:00 EST 2009,[MNG-3975] getArtifact(Artifact artifact  List remoteRepositories) should include Exception in debug log messages.,Closed,improvement
MNG-399,Tue Oct 24 00:00:00 EDT 2006,Fixed,It should be up to the plugin what log4j settings are used when the plugin is executed.  In this manner  a plugin could bundle two different log4j configurations &#8211; one for when the plugin was being operated normally  and the other for debug (-X) mode.  If there is no bundled configuration  the current settings would be used. This would be useful with the XDoclet plugin  because either it uses nonstandard settings  or the settings that Maven chooses for it are insufficient for error messages (which may be posted as warnings) to reach the console.  When this happens  generation problems are silently lost and the root cause can be very difficult to track down.,Minor,null,null,Mon Feb 02 00:00:00 EST 2004,[MNG-399] Per-plugin adjustable logging settings,Closed,improvement
MNG-4,Tue Jun 05 00:00:00 EDT 2007,Fixed,It would great if the writer would remember the structure of the file (if already exists) to keep comments and formatting so that user is not lost when reopening the file. Milos has written that  altho with jdom.  please see http://cvs.mevenide.codehaus.org/cvsweb.cgi/mevenide-core/src/java/org/mevenide/project/io/CarefulProjectMarshaller.java?rev=1.4,Major,null,null,Tue Apr 13 00:00:00 EDT 2004,[MNG-4] MavenXpp3Writer improvement,Closed,improvement
MNG-4005,Tue Apr 06 00:00:00 EDT 2010,Fixed,Throw a validation error if a pom contains the same dependency with two different versions. ,Major,null,null,Mon Jan 26 00:00:00 EST 2009,[MNG-4005] Throw Validation Error if pom contains a dependency with two different versions.,Closed,improvement
MNG-4024,Mon Feb 09 00:00:00 EST 2009,Fixed,Make CLIManager class public  so that people embedding Maven (like me) can reuse its command line parsing facility.,Major,John Casey,jdcasey,Mon Feb 09 00:00:00 EST 2009,[MNG-4024] Open up CLIManager,Closed,improvement
MNG-4037,Sun Feb 15 00:00:00 EST 2009,Fixed,Tracking down environment issues like missing SSL certs or missing javac is easier when one knows what Java home Maven is currently using.,Trivial,Benjamin Bentmann,bentmann,Sun Feb 15 00:00:00 EST 2009,[MNG-4037] Include Java home in version information,Closed,improvement
MNG-4048,Thu Sep 17 00:00:00 EDT 2009,Fixed,Currently  the reactor can only resolve dependencies that are specified using a simple version like "1.1-SNAPSHOT". If a consumer declares the dependeny version as "[1.0 )"  reactor resolution is no longer possible.,Major,Benjamin Bentmann,bentmann,Sat Feb 21 00:00:00 EST 2009,[MNG-4048] Allow to resolve dependencies using version range from reactor,Closed,improvement
MNG-4057,Sat Feb 28 00:00:00 EST 2009,Fixed,From the plugin manager: PluginDescriptor addedPlugin = pluginCollector.getPluginDescriptor( plugin ); if ( addedPlugin == null ) {     throw new IllegalStateException( "The PluginDescriptor for the plugin " + plugin + " was not found." ); } One scenario where this actually happens is when the plugin JAR is unreadable. Hence  we should extend the error message and propose to the users to check whether the plugin JAR (pluginArtifact.getFile()) is intact.,Trivial,Benjamin Bentmann,bentmann,Fri Feb 27 00:00:00 EST 2009,[MNG-4057] Propose checking of plugin artifact when plugin descriptor cannot be found,Closed,improvement
MNG-4075,Tue Mar 10 00:00:00 EDT 2009,Fixed,currently this is logged to the WARNING level  but it can be disquieting without causing any real problems. I'm not entirely sure how these messages come up during the clean phase  but at least in the CXF project  they definitely seem to. We should tone them down to the DEBUG log level for now  unless/until we can find a way of being certain they're going to cause a problem.,Major,John Casey,jdcasey,Mon Mar 09 00:00:00 EDT 2009,[MNG-4075] Tone down warnings about reactor dependencies that don't have an associated file,Closed,improvement
MNG-4091,Mon Mar 16 00:00:00 EDT 2009,Fixed,Currently  if the plugin descriptor is mismatched with the artifact  it will be added to the plugin manager under it's own key  and then subsequently not found under the original key  making the error unclear. The descriptor should be validated against the artifact it was loaded from.,Major,Brett Porter,brettporter,Mon Mar 16 00:00:00 EDT 2009,[MNG-4091] Validate the plugin descriptors and improve error reporting when mismatched with artifact,Closed,improvement
MNG-4092,Tue Mar 17 00:00:00 EDT 2009,Fixed,currently  the plugin collector and plugin validator are run for each dependency of the plugin at a later stage. while this has no known negative side effects other than performance and memory consumption  the behaviour is incorrect as it is only intended to discover the mojos in the main plugin.,Major,Brett Porter,brettporter,Tue Mar 17 00:00:00 EDT 2009,[MNG-4092] remove plugin listeners for minor memory improvement and to avoid scanning descriptors from dependencies of plugins,Closed,improvement
MNG-4098,Wed Apr 07 00:00:00 EDT 2010,Fixed,this started out in 2.1.0. To avoid file locking issues parallelism was limited to artifacts in different groups. However  I'm now of the opinion this is not necessary and we should investigate allowing jars to be downloaded in parallel regardless of group. Don has also suggested some improvements to the synchronization that might make the code cleaner and faster  which I'll look for him to add here.,Major,Benjamin Bentmann,bentmann,Fri Mar 20 00:00:00 EDT 2009,[MNG-4098] increase concurrency of parallel downloads,Closed,improvement
MNG-4099,Fri Jan 10 00:00:00 EST 2014,Fixed,The -emp and -ep CLI switches should prompt for a password if the user omits it.  This would help to avoid having to escape shell characters in strong passwords. Note that the docs mention that these switches prompt for a password when they do not: http://maven.apache.org/guides/mini/guide-encryption.html,Trivial,Robert Scholte,rfscholte,Fri Mar 20 00:00:00 EDT 2009,[MNG-4099] Password encryption CLI switches should prompt for password if missing,Closed,improvement
MNG-411,Tue Jul 19 00:00:00 EDT 2005,Fixed,we need to do the following: improve the layout of the mailing list reports (too wide)  and add multiple archives list all transitive dependencies (look at artifacts instead of dependencies) in a separate table on the dependency list add other reports  such as source control  etc. from m1 xdoc plugin. Vincent Siveton has volunteered to take a look at this.,Major,Siveton Vincent,siveton,Tue May 17 00:00:00 EDT 2005,[MNG-411] improve maven-project-reports inline with m1,Closed,improvement
MNG-4112,Sun Jul 17 00:00:00 EDT 2011,Fixed,It would be helpful to have an easy way to access the current version of maven.  This might be accomplished by setting a property like "maven.version" during startup that would be available to the pom and/or to plugins.  This could be used to record what version of maven was used during the build to facilitate build reproducibility.  ,Major,Paul Gier,pgier,Fri Mar 27 00:00:00 EDT 2009,[MNG-4112] Set property containing the currently executing maven version.,Closed,improvement
MNG-414,Sat Jun 18 00:00:00 EDT 2005,Fixed,currently  to get your scripts scanned for generating a plugin descriptor  the directory must be in &lt;scriptSourceDirectory&gt;  but to get them included in the jar they must be in &lt;resources&gt;. Only one or the other should be needed. Either get rid of scriptSourceDirectory (and scan all resources)  or have the plugin copy stuff from the script source directory into the jar. I'm in favour of the latter.,Major,John Casey,jdcasey,Wed May 18 00:00:00 EDT 2005,[MNG-414] scriptSourceDirectory vs resources,Closed,improvement
MNG-415,Thu Jun 16 00:00:00 EDT 2005,Fixed,this has been requested for WAR  but it should apply to all archives that include dependencies.,Major,Brett Porter,brettporter,Wed May 18 00:00:00 EDT 2005,[MNG-415] allow exclusion of certain dependencies from inclusion in an archive,Closed,improvement
MNG-4157,Tue Dec 29 00:00:00 EST 2009,Fixed,Hi All!! In my current project we want to be able to view the full build log from past builds. This is possible if forwarding the output to a textfile with the command mvn &gt;&gt; build.log or by building with a CI tool. Doing the former way will not give a console output. I'm prettys sure this is easy to get by just editing the mvn.bat or mvn.sh file. It would be great if I could get a build log file and then access it from a generated project report. Is there already such a feature implemented. If not I would be very pleased if you consider taking this into a forthcomming release. Kind regards /Oskar ,Major,null,null,Tue May 12 00:00:00 EDT 2009,[MNG-4157] Great if possible to specify build log file and then access in from a project report,Closed,improvement
MNG-4162,Thu Mar 25 00:00:00 EDT 2010,Fixed,Any reporting implementation will be implemented as a plugin. Maven will provide any information  APIs  and extension points to make this possible. But the conflation of building with reporting in the core makes it almost impossible for anyone to understand the distinction  makes it impossible to have alternate implementations and couple many tools like Doxia directly to the core which is unacceptable for Maven 3.x.,Major,Benjamin Bentmann,bentmann,Sat May 16 00:00:00 EDT 2009,[MNG-4162] Removal of all reporting logic from the core of Maven,Closed,improvement
MNG-418,Mon Jun 20 00:00:00 EDT 2005,Fixed,When embedding Maven 2 in Continuum the build log is full of lines like these: 2/1585K 3/1585K 5/1585K Having a "non-interactive" mode would not continuously write out these status messages.,Major,null,null,Thu May 19 00:00:00 EDT 2005,[MNG-418] Add non-interactive mode,Closed,improvement
MNG-4186,Tue Oct 20 00:00:00 EDT 2009,Fixed,Improve the exception handler so that a pointer can be provided to the user that gives a full explanation of the error that occurred.,Major,Benjamin Bentmann,bentmann,Sun Jun 07 00:00:00 EDT 2009,[MNG-4186] Provide an exact pointer to documentation specific to each known exception that can occur,Closed,improvement
MNG-4193,Mon Jun 08 00:00:00 EDT 2009,Fixed,Within the same POM  we should be more strict with regard to the uniqueness of identifiers. For instance &lt;repositories&gt;   &lt;repository&gt;     &lt;id&gt;one&lt;/id&gt;     &lt;url&gt;http://repo1.maven.org/maven2&lt;/url&gt;   &lt;/repository&gt;   &lt;repository&gt;     &lt;id&gt;one&lt;/id&gt;     &lt;url&gt;http://repository.codehaus.org/&lt;/url&gt;   &lt;/repository&gt; &lt;/repositories&gt; is currently considered valid. However  this usually results from copy&amp;paste errors and the missing uniqueness makes it unnecessary complicated to define Maven's behavior during inheritance or profile injection when we want to merge elements with the same id. Of course  this extended validation must only apply to local builds and not to the metadata retrieval.,Minor,Benjamin Bentmann,bentmann,Mon Jun 08 00:00:00 EDT 2009,[MNG-4193] Throw validation error upon multiple repository declarations with the same id,Closed,improvement
MNG-4194,Tue Mar 30 00:00:00 EDT 2010,Fixed,This is a followup request for MNG-4041.  PluginManager and Plugin cache should allow safe release of plugin realms  that is  ability for embedding application  like Eclipse or Netbeans  to determine if any given plugin realm is currently being used and remove unused realms from PluginCache in a thread-safe manner. I see at least two cases when it is not safe to release a plugin realm Regular plugin realm during mojo execution. Extensions plugin realm for as long as the referencing project(s) are in the reactor or otherwise known to the embedding application. ,Major,Benjamin Bentmann,bentmann,Tue Jun 09 00:00:00 EDT 2009,[MNG-4194] API to safely release of plugin realms,Closed,improvement
MNG-4210,Mon Jun 22 00:00:00 EDT 2009,Fixed,Running mvn help:active-profiles -U on a (minimal) POM delivers [INFO] artifact org.apache.maven.plugins:maven-help-plugin: checking for updates from central log4j:WARN No appenders could be found for logger (hidden.org.apache.commons.httpclient.params.DefaultHttpParams). log4j:WARN Please initialize the log4j system properly. We probably need to ship with a log4j.properties to silence this harmless noise.,Trivial,John Casey,jdcasey,Thu Jun 18 00:00:00 EDT 2009,[MNG-4210] Remove log4j configuration warning,Closed,improvement
MNG-4224,Tue Jun 30 00:00:00 EDT 2009,Fixed,Attached patch introduces AbstractMavenLifecycleParticipant that allows maven core extensions participate in maven lifecycle. My immediate use case is injection of OSGi dependencies from Tycho  but I believe the same approach can be applied to other problems  like  for example  reworked reporting plugins discussed for 3.0 (this  however  will need new callback methods).,Major,Benjamin Bentmann,bentmann,Tue Jun 30 00:00:00 EDT 2009,[MNG-4224] maven lifecycle participant,Closed,improvement
MNG-4226,Tue May 20 00:00:00 EDT 2014,Fixed,On mac JAVA_HOME is detected by using the following code:            if [ -z "$JAVA_VERSION" ] ; then              JAVA_VERSION="CurrentJDK"            else              echo "Using Java version: $JAVA_VERSION"            fi            if [ -z "$JAVA_HOME" ] ; then              JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home            fi But this does not work in collaboration with Using "Java preferences" to change the actual java version to use as "CurrentJDK" does not change once you update the "java applications" order. There is an alternative (at least on Leopard) for determining current java home that is based on Java Preferences by using an apple provided script. So  as a replacement fo rthe code above the following could be used.            if [ -z "$JAVA_HOME" ] ; then              JAVA_HOME=`/usr/libexec/java_home | tail -1`            fi Could also be taht this is teh first attempt and if fails use the current way of determining home.,Major,Jason van Zyl,jvanzyl,Wed Jul 01 00:00:00 EDT 2009,[MNG-4226] Better detection of JAVA_HOME on Apple Mac OS X,Closed,improvement
MNG-4244,Fri Jul 17 00:00:00 EDT 2009,Fixed,Right now  the make-like reactor mode accepts either a relative path or groupId:artifactId to denote the projects to build. As a matter of convenience  selecting projects by only artifact id would reduce the clumsiness of the CLI.,Minor,Benjamin Bentmann,bentmann,Fri Jul 17 00:00:00 EDT 2009,[MNG-4244] Allow to select project for make-like reactor by artifact id,Closed,improvement
MNG-4247,Fri Jul 24 00:00:00 EDT 2009,Fixed,Current trunk doesn't display which artifacts are downloaded which is/was a convenient way to debug some settings (mirror etc..) and to know which artifacts is downloaded and from which repo. ,Major,Olivier Lamy (*$^�%`�),olamy,Sun Jul 19 00:00:00 EDT 2009,[MNG-4247] Displaying which artifacts are downloaded and from which repo,Closed,improvement
MNG-4254,Thu Jul 23 00:00:00 EDT 2009,Fixed,We have competing bug lists in the different implementations of the HTTP wagon  so it'd be nice to provide a default (lightweight) wagon implementation  then allow users who need it to specify the httpclient-driven implementation via Maven configuration. This is implemented for Maven 2.2.1  just needs integration tests.,Blocker,John Casey,jdcasey,Thu Jul 23 00:00:00 EDT 2009,[MNG-4254] Support selection of wagon implementation for a particular protocol,Closed,improvement
MNG-4279,Mon Aug 03 00:00:00 EDT 2009,Fixed,Currently  if the server section of the settings.xml uses wagonProvider to set a provider suffix  that provider may apply to multiple different repository definitions. If the user specifies a repository with protocol == http and provider == httpclient for artifact resolution using a server id of 'foo'  then configure a distribution repository with protocol == scp  the provider == httpclient will be applied to this distribution repo  and result in an error like this: Component descriptor cannot be found in the component repository: org.apache.maven.wagon.Wagonscp-httpclient. Obviously  this will never work. In these cases  ideally different server IDs should be used. However  if not then Maven should fallback gracefully to a roleHint of 'scp'.,Major,John Casey,jdcasey,Mon Aug 03 00:00:00 EDT 2009,[MNG-4279] wagon provider selection should fail gracefully and use protocol for roleHint if protocol-provider roleHint isn't available.,Closed,improvement
MNG-428,Thu Mar 06 00:00:00 EST 2008,Fixed,Now  we got message_ja.properties.,Minor,Siveton Vincent,siveton,Tue May 24 00:00:00 EDT 2005,[MNG-428] Japanese message resource,Closed,improvement
MNG-4292,Mon Sep 07 00:00:00 EDT 2009,Fixed,With the move of Maven 2.2 to require Java 5  it would be great if mojo parameter injection could be updated to allow enumerated types in addition to strings  booleans  numbers  files  and urls.,Minor,Benjamin Bentmann,bentmann,Tue Aug 11 00:00:00 EDT 2009,[MNG-4292] Support Enum-type parameters in mojos,Closed,improvement
MNG-4293,Wed Aug 12 00:00:00 EDT 2009,Fixed,Right now  only @requiresDependencyResolution compile|runtime|test is supported. However  runtime is no superset of compile but plugins occasionally need both scopes. To better support those use cases  a new resolution scope compile+runtime will be introduced. See also [DISCUSS] Extend Mojo API to allow for resolution of multiple dependency scopes,Minor,Benjamin Bentmann,bentmann,Wed Aug 12 00:00:00 EDT 2009,[MNG-4293] Extend Mojo API to allow resolution of both compile and runtime dependencies,Closed,improvement
MNG-4296,Thu Aug 13 00:00:00 EDT 2009,Fixed,Both m2e and tycho configure maven core classrealm to include additional JAR files and need a way to make classes from these additional JAR files to be accessible by maven plugins. Attached patch introduces new ClassRealmManagerDelegate  which can be used by m2e and tycho to contribute this kind of configuration to the core.,Major,Benjamin Bentmann,bentmann,Thu Aug 13 00:00:00 EDT 2009,[MNG-4296] allow core extensions configure new classrealms,Closed,improvement
MNG-4298,Thu Aug 13 00:00:00 EDT 2009,Fixed,Some embedding scenarios  like m2e workspace dependency resolution  can be implemented more efficiently if maven core allowed incremental construction of MavenProject instances. That is  build MavenProject with basic project information properly inherited and interpolated first  then populate project dependencies  then populate project plugins and plugins configuration. Attached is proposed implementation that supports such incremental MavenProject construction.,Major,Benjamin Bentmann,bentmann,Thu Aug 13 00:00:00 EDT 2009,[MNG-4298] Build MavenProject instances incrementally,Closed,improvement
MNG-4368,Thu Aug 27 00:00:00 EDT 2009,Fixed,install:install (from maven-install-plugin) by default uses DefaultArtifactInstaller to install artifacts. DefaultArtifactInstaller in turn uses FileUtils.copyFile()  thereby overwriting destination files even if they are unchanged. It would be helpful if DefaultArtifactInstaller used FileUtils.copyFileIfModified() instead  at least as an option  to speed up the build process.,Major,null,null,Wed May 28 00:00:00 EDT 2008,[MNG-4368] DefaultArtifactInstaller should only overwrite files if timestamp has changed,Closed,improvement
MNG-437,Tue May 31 00:00:00 EDT 2005,Fixed,Would be nice to get something like artifact version cannot be null for g:a instead of this; constituent&#91;0&#93;: file:/home/jvanzyl/m2/lib/commons-validator-1.1.4.jar constituent&#91;1&#93;: file:/home/jvanzyl/m2/lib/maven-plugin-api-2.0-SNAPSHOT.jar constituent&#91;2&#93;: file:/home/jvanzyl/m2/lib/bsh-1.3.0.jar constituent&#91;3&#93;: file:/home/jvanzyl/m2/lib/plexus-bsh-factory-1.0-alpha-6-20050517.080828-1.jar constituent&#91;4&#93;: file:/home/jvanzyl/m2/lib/plexus-container-artifact-1.0-alpha-4-20050527.013505-1.jar constituent&#91;5&#93;: file:/home/jvanzyl/m2/lib/maven-settings-2.0-SNAPSHOT.jar constituent&#91;6&#93;: file:/home/jvanzyl/m2/lib/wagon-http-lightweight-1.0-alpha-3.jar constituent&#91;7&#93;: file:/home/jvanzyl/m2/lib/maven-reporting-api-2.0-SNAPSHOT.jar constituent&#91;8&#93;: file:/home/jvanzyl/m2/lib/maven-model-2.0-SNAPSHOT.jar constituent&#91;9&#93;: file:/home/jvanzyl/m2/lib/maven-script-beanshell-2.0-SNAPSHOT.jar constituent&#91;10&#93;: file:/home/jvanzyl/m2/lib/maven-artifact-2.0-SNAPSHOT.jar constituent&#91;11&#93;: file:/home/jvanzyl/m2/lib/wagon-provider-api-1.0-alpha-3.jar constituent&#91;12&#93;: file:/home/jvanzyl/m2/lib/doxia-core-1.0-alpha-3-SNAPSHOT.jar constituent&#91;13&#93;: file:/home/jvanzyl/m2/lib/maven-project-2.0-SNAPSHOT.jar constituent&#91;14&#93;: file:/home/jvanzyl/m2/lib/commons-cli-1.0-beta-2.jar constituent&#91;15&#93;: file:/home/jvanzyl/m2/lib/maven-script-marmalade-2.0-SNAPSHOT.jar constituent&#91;16&#93;: file:/home/jvanzyl/m2/lib/marmalade-core-1.0-alpha-3.jar constituent&#91;17&#93;: file:/home/jvanzyl/m2/lib/oro-2.0.7.jar constituent&#91;18&#93;: file:/home/jvanzyl/m2/lib/maven-plugin-descriptor-2.0-SNAPSHOT.jar constituent&#91;19&#93;: file:/home/jvanzyl/m2/lib/plexus-i18n-1.0-beta-4.jar constituent&#91;20&#93;: file:/home/jvanzyl/m2/lib/maven-monitor-2.0-SNAPSHOT.jar constituent&#91;21&#93;: file:/home/jvanzyl/m2/lib/plexus-marmalade-factory-1.0-alpha-3.jar constituent&#91;22&#93;: file:/home/jvanzyl/m2/lib/maven-core-2.0-SNAPSHOT.jar --------------------------------------------------- java.lang.NullPointerException: Artifact version cannot be null.         at org.apache.maven.artifact.DefaultArtifact.&lt;init&gt;(DefaultArtifact.java:92)         at org.apache.maven.artifact.factory.DefaultArtifactFactory.createArtifact(DefaultArtifactFactory.java:69)         at org.apache.maven.artifact.factory.DefaultArtifactFactory.createArtifact(DefaultArtifactFactory.java:39)         at org.apache.maven.project.DefaultMavenProjectBuilder.createArtifacts(DefaultMavenProjectBuilder.java:487)         at org.apache.maven.project.DefaultMavenProjectBuilder.processProjectLogic(DefaultMavenProjectBuilder.java:296)         at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:239)         at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFile(DefaultMavenProjectBuilder.java:155)         at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMavenProjectBuilder.java:144)         at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:309)         at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:203)         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:111)         at org.apache.maven.cli.MavenCli.main(MavenCli.java:246)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)         at java.lang.reflect.Method.invoke(Method.java:324)         at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:303)         at org.codehaus.classworlds.Launcher.launch(Launcher.java:243)         at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:416)         at org.codehaus.classworlds.Launcher.main(Launcher.java:363) Press any key to continue...,Major,John Casey,jdcasey,Tue May 31 00:00:00 EDT 2005,[MNG-437] Improve version = null message in DefaultArtifact,Closed,improvement
MNG-439,Sat Oct 08 00:00:00 EDT 2005,Fixed,&gt; m2 -nonsense lists 'usage: maven &#91;options&#93; [goal [goal2 &#91;goal3&#93;...]]' this is confusing to a novice (who thinks goals have 'gone away in m2').,Minor,Brett Porter,brettporter,Wed Jun 01 00:00:00 EDT 2005,[MNG-439] Improve the usage statement for the CLI,Closed,improvement
MNG-4390,Sun Oct 11 00:00:00 EDT 2009,Fixed,Currently  Maven parses the settings.xml in strict mode  making it error out upon occurrence of any tag that it does not understand. This makes co-existence of different Maven versions on the same machine more difficult as a user employing some newly added settings elements can't use the same settings.xml for old Maven versions. In principle  unrecognized elements don't hurt and can be safely ignored. The only benefit from the strict parsing is to tell the user about potential problems/typos in his settings.xml. This can however also be realized by warnings instead of errors.,Major,Benjamin Bentmann,bentmann,Sun Oct 11 00:00:00 EDT 2009,[MNG-4390] Make parsing of settings.xml lenient with respect to unrecognized tags,Closed,improvement
MNG-4402,Sat Oct 24 00:00:00 EDT 2009,Fixed,Maven should better scream at the duplicate module in the originating POM to catch the issue at its source. Right now it does print [INFO] Scanning for projects... [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-compiler-iface:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-compiler-iface:4 .0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-sandbox\flexmojos-generator-compiler-iface\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-compiler-iface:4.0-S NAPSHOT  F:\flexmojos-aggregator\flexmojos-sandbox\flexmojos-generator-compiler-iface\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-compiler-iface:4.0- SNAPSHOT  F:\flexmojos-aggregator\flexmojos-sandbox\flexmojos-generator-compiler-iface\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-compiler-iface:4.0-SNAPSHO T  F:\flexmojos-aggregator\flexmojos-sandbox\flexmojos-generator-compiler-iface\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-compiler-iface:4.0-SNAPS HOT  F:\flexmojos-aggregator\flexmojos-sandbox\flexmojos-generator-compiler-iface\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-api:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F: \flexmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F :\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F:\flexm ojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F:\fle xmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0: 4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0- SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0 -SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0-SNAPSH OT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0-SNAP SHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0: 4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0- SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0 -SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0-SNAPSH OT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0-SNAP SHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-constraints:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0- SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNAP SHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNA PSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNAPSHOT F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-api:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F: \flexmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F :\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F:\flexm ojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-api:4.0-SNAPSHOT  F:\fle xmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0: 4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0- SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0 -SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0-SNAPSH OT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0-SNAP SHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0: 4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0- SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0 -SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0-SNAPSH OT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0-SNAP SHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-generator-constraints:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0- SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNAP SHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNA PSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNAPSHOT F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNAPSHOT  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml [WARNING] [WARNING] Some problems were encountered while building the effective model for org.sonatype.flexmojos:flexmojos-tester:jar:4.0-SNAPSHOT [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-checkstyle-plugin @ org.sonatype.flexmojos:flexmojos-tester:4.0-SNAPSHOT  F:\fl exmojos-aggregator\flexmojos-testing\flexmojos-tester\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-plugin-plugin @ org.sonatype.flexmojos:flexmojos-tester:4.0-SNAPSHOT  F:\flexmo jos-aggregator\flexmojos-testing\flexmojos-tester\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.apache.maven.plugins:maven-javadoc-plugin @ org.sonatype.flexmojos:flexmojos-tester:4.0-SNAPSHOT  F:\flexm ojos-aggregator\flexmojos-testing\flexmojos-tester\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:taglist-maven-plugin @ org.sonatype.flexmojos:flexmojos-tester:4.0-SNAPSHOT  F:\flexmojos-ag gregator\flexmojos-testing\flexmojos-tester\pom.xml [WARNING] 'reporting.plugins.plugin.version' is missing for org.codehaus.mojo:changelog-maven-plugin @ org.sonatype.flexmojos:flexmojos-tester:4.0-SNAPSHOT  F:\flexmojos- aggregator\flexmojos-testing\flexmojos-tester\pom.xml [WARNING] [WARNING] It is highly recommended to fix these problems because they threaten the stability of your build. [WARNING] [WARNING] For this reason  future Maven versions might no longer support building such malformed projects. [WARNING] [ERROR] Two or more projects in the reactor have the same identifier  please make sure that &lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt; is unique for each project: {org.sonatype.fle xmojos:flexmojos-generator:4.0-SNAPSHOT=[F:\flexmojos-aggregator\flexmojos-generator\pom.xml  F:\flexmojos-aggregator\flexmojos-generator\pom.xml]  org.sonatype.flexmojos :flexmojos-generator-api:4.0-SNAPSHOT=[F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-api\pom.xml  F:\flexmojos-aggregator\flexmojos-generator\flexmojos- generator-api\pom.xml]  org.sonatype.flexmojos:flexmojos-generator-graniteds-1.1.0:4.0-SNAPSHOT=[F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds -1.1.0\pom.xml  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-1.1.0\pom.xml]  org.sonatype.flexmojos:flexmojos-generator-graniteds-2.0.0:4.0-S NAPSHOT=[F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-graniteds-2.0.0\pom.xml  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-granited s-2.0.0\pom.xml]  org.sonatype.flexmojos:flexmojos-generator-constraints:4.0-SNAPSHOT=[F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml  F:\flexmojos-aggregator\flexmojos-generator\flexmojos-generator-constraints\pom.xml]} [0] [ERROR] [ERROR] To see the full stack trace of the errors  re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR] [ERROR] For more information about the errors and possible solutions  please read the following articles: [ERROR] [0] http://cwiki.apache.org/confluence/display/MAVEN/DuplicateProjectException ,Major,Benjamin Bentmann,bentmann,Fri Oct 23 00:00:00 EDT 2009,[MNG-4402] Improve duplicated modules error,Closed,improvement
MNG-4404,Sat Oct 24 00:00:00 EDT 2009,Fixed,Identifiers ought to be unique  this is currently not enforced for profile id's.,Minor,Benjamin Bentmann,bentmann,Sat Oct 24 00:00:00 EDT 2009,[MNG-4404] Throw validation error upon duplicate profile id,Closed,improvement
MNG-4405,Sat Oct 24 00:00:00 EDT 2009,Fixed,Basically the same as MNG-4383 just for plugins. No need to trip to the repo with a bad version when we know it's bad beforehand.,Major,Benjamin Bentmann,bentmann,Sat Oct 24 00:00:00 EDT 2009,[MNG-4405] Uninterpolated expressions should cause an error for plugin versions,Closed,improvement
MNG-4421,Sat Oct 31 00:00:00 EDT 2009,Fixed,I was reading the Introduction to the POM page. It says: &gt; These variables are all referenced by the prefix "project.". &gt; You may also see references with pom. as the prefix  or the &gt; prefix omitted entirely - these forms are now deprecated and &gt; should not be used. Jason van Zyl says: For backward compat they will remain during 3.0. We should collapse them in 3.1. Brian Fox says: Yeah deprecated in 3.x. However we'll always have to support them when resolving things from the repo since that's cast in stone for projects already released. We should not support them for projects being built with 3.x though. Paul Merlin has suggested giving them warnings to facilitate their dis-use. The summary is:  (a) 3.0 should warn about the old-style references (b) The references must remain interpolated when present in poms drawn from the repositories (c) 3.1 should prevent their use in project builds,Major,Benjamin Bentmann,bentmann,Fri Oct 30 00:00:00 EDT 2009,[MNG-4421] Warn regarding old-style references when used in a project build,Closed,improvement
MNG-4423,Sat Oct 31 00:00:00 EDT 2009,Fixed,Something like /** @parameter default-value="${session.executionProperties}" */ private Properties executionProperties; does not work because the PluginParameterExpressionEvaluator currently only supports {{$ {session} }} but not {{$ {session.*} }}.,Minor,Benjamin Bentmann,bentmann,Sat Oct 31 00:00:00 EDT 2009,[MNG-4423] Allow to query session data via plugin parameter expressions,Closed,improvement
MNG-443,Thu Jun 02 00:00:00 EDT 2005,Fixed,when a URL (SCM  web  etc) is inherited  it should always have the artifactId appended to it. This is a default to avoid needing to respecify - however if your path structure doesn't match the artifactId convention  you should respecify it. This should happen regardless of the original structure of the URL - there wasn't really an instance where inheriting a URL that doesn't change makes sense.,Major,Brett Porter,brettporter,Thu Jun 02 00:00:00 EDT 2005,[MNG-443] inherited URLs should always have artifact ID,Closed,improvement
MNG-4432,Tue Jan 19 00:00:00 EST 2010,Fixed,the current maven3 trunk (3.0-alpha-3) doesn't contains a nice feature which exists in 2.x : parallel download artifacts. This made really faster starting with an empty repo.,Major,Benjamin Bentmann,bentmann,Tue Nov 10 00:00:00 EST 2009,[MNG-4432] reimplement parallel artifacts download,Closed,improvement
MNG-4439,Thu Nov 12 00:00:00 EST 2009,Fixed,I noticed these in the 3.0-alpha-3 repository. As the module contains no source and no longer shades  there is no reason to produce these JARs.,Major,Brett Porter,brettporter,Thu Nov 12 00:00:00 EST 2009,[MNG-4439] apache-maven project should not deploy a source JAR or JAR  as it is only a distribution module,Closed,improvement
MNG-4440,Sat Nov 14 00:00:00 EST 2009,Fixed,though the error reporting pushes most of the error information to a single location at the end  you need to scroll back and check which module was building at the time (or which is marked FAILED in the long list of modules) to determine where you were up to. It would be helpful to list the module name (and perhaps goal) in the error contextually. It might also be worth adding the comment: "After correcting this problem  you can resume the build with the command 'mvn /goals used/ -rf /module name/'",Major,Benjamin Bentmann,bentmann,Thu Nov 12 00:00:00 EST 2009,[MNG-4440] error message should clearly indicate the module that failed  and how to continue,Closed,improvement
MNG-4452,Wed Sep 08 00:00:00 EDT 2010,Fixed,Please see the whole conversation here: http://old.nabble.com/Multi-Platform-snapshots-td25295999.html Essentially  an artifact's classifier isn't included in the repository's metadata of a snapshot. This makes it difficult (impossible?) to deploy multiply snapshots with different classifiers. The primary use case is to continuously build an artifact for different environments.,Major,Benjamin Bentmann,bentmann,Tue Nov 17 00:00:00 EST 2009,[MNG-4452] Metadata for snapshots should include classifier,Closed,improvement
MNG-4456,Fri Nov 20 00:00:00 EST 2009,Fixed,You could output a deprecation warning whenever a fully qualified path is specified  but not warn if the path starts with a variable. For example  this would generate no warning:     &lt;dependency&gt;        &lt;groupId&gt;com.sun&lt;/groupId&gt;        &lt;artifactId&gt;tools&lt;/artifactId&gt;        &lt;version&gt;1.6.0&lt;/version&gt;        &lt;scope&gt;system&lt;/scope&gt;        &lt;systemPath&gt;$ {java.home} /../lib/tools.jar&lt;/systemPath&gt;     &lt;/dependency&gt; but this would:     &lt;dependency&gt;        &lt;groupId&gt;yuck&lt;/groupId&gt;        &lt;artifactId&gt;ugh&lt;/artifactId&gt;        &lt;version&gt;4.2.8&lt;/version&gt;        &lt;scope&gt;system&lt;/scope&gt;        &lt;systemPath&gt;C:/dumb/way/to/set/up/maven/dependency&lt;/systemPath&gt;     &lt;/dependency&gt; That way at least users are warned when they're doing something dumb  and if they change to the variable-based form  they stand a fighting chance of having portable builds.,Minor,Benjamin Bentmann,bentmann,Wed Nov 18 00:00:00 EST 2009,[MNG-4456] Deprecate fully qualified pathnames in system path,Closed,improvement
MNG-4464,Sat Jan 30 00:00:00 EST 2010,Fixed,Consider this snippet: &lt;parent&gt;   &lt;relativePath&gt;..\pom.xml&lt;/relativePath&gt; &lt;/parent&gt; Note in particular the backslash used in the path. While this path will be properly resolved on a Windows box  it will fail to resolve the local parent on a Unix/Mac box (as the backslash is not a separator but escape character here). This applies to other paths in the POM as well. For platform-independent behavior  we should either encourage the user to use forward slashes (by means of validation warnings/errors) or have Maven convert the paths internally.,Minor,Benjamin Bentmann,bentmann,Mon Nov 23 00:00:00 EST 2009,[MNG-4464] Improve handling of relative paths with backslashes,Closed,improvement
MNG-4492,Mon Dec 14 00:00:00 EST 2009,Fixed,Git is rapidly becoming the tool of choice for working with forks/patches of svn projects. MavenITmng1830ShowVersionTest fails if no svn repo is present. The enclosed patches need to be applied in maven3 trunk (mng1830GitVersionNumber.patch)  and adds a profile that activates a different buildnumber plugin setting  when no ".svn" folder is present. I have made no attempts at being overly clever with the version number  which is basically "rGIT; &lt;date&gt;". The second patch is for MavenITmng1830ShowVersionTest to accept this format in addition to the two others.  Since this fix is mostly in the test  there is no additional testcase.,Major,Benjamin Bentmann,bentmann,Sun Dec 13 00:00:00 EST 2009,[MNG-4492] Integration test MNG1830 fails with GIT based forks,Closed,improvement
MNG-4494,Tue Dec 15 00:00:00 EST 2009,Fixed,Custom repository layout  like p2  for example  may require special ArtifactRepository implementation and/or configuration to work along with regular maven repositories. To support this  custom repository layout implementations should be able to act as ArtifactRepository instance factories. Below is proposed trivial fix  but I'll try to commit this myself  assuming I can figure out what's wrong with my svn access. Index: maven-compat/src/main/java/org/apache/maven/repository/legacy/repository/DefaultArtifactRepositoryFactory.java =================================================================== --- maven-compat/src/main/java/org/apache/maven/repository/legacy/repository/DefaultArtifactRepositoryFactory.java (revision 890982) +++ maven-compat/src/main/java/org/apache/maven/repository/legacy/repository/DefaultArtifactRepositoryFactory.java (working copy)  -26 6 +26 7 @@  import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;  import org.apache.maven.artifact.repository.MavenArtifactRepository;  import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout; +import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout2;  import org.codehaus.plexus.component.annotations.Component;  import org.codehaus.plexus.component.annotations.Requirement;    -124 7 +125 17 @@              releases.setChecksumPolicy( globalChecksumPolicy );          }   -        ArtifactRepository repository = new MavenArtifactRepository( id  url  repositoryLayout  snapshots  releases ); +        ArtifactRepository repository; +        if ( repositoryLayout instanceof ArtifactRepositoryLayout2 ) +        { +            repository = +                ( (ArtifactRepositoryLayout2) repositoryLayout ).newMavenArtifactRepository( id  url  snapshots +                                                                                             releases ); +        } +        else +        { +            repository = new MavenArtifactRepository( id  url  repositoryLayout  snapshots  releases ); +        }            return repository;      } Index: maven-artifact/src/main/java/org/apache/maven/artifact/repository/layout/ArtifactRepositoryLayout.java =================================================================== --- maven-artifact/src/main/java/org/apache/maven/artifact/repository/layout/ArtifactRepositoryLayout.java (revision 890982) +++ maven-artifact/src/main/java/org/apache/maven/artifact/repository/layout/ArtifactRepositoryLayout.java (working copy)  -22 6 +22 7 @@  import org.apache.maven.artifact.Artifact;  import org.apache.maven.artifact.metadata.ArtifactMetadata;  import org.apache.maven.artifact.repository.ArtifactRepository; +import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;    /** @author jdcasey */  public interface ArtifactRepositoryLayout Index: maven-artifact/src/main/java/org/apache/maven/artifact/repository/layout/ArtifactRepositoryLayout2.java =================================================================== --- maven-artifact/src/main/java/org/apache/maven/artifact/repository/layout/ArtifactRepositoryLayout2.java (revision 0) +++ maven-artifact/src/main/java/org/apache/maven/artifact/repository/layout/ArtifactRepositoryLayout2.java (revision 0)  -0 0 +1 31 @@ +package org.apache.maven.artifact.repository.layout; + +import org.apache.maven.artifact.repository.ArtifactRepository; +import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy; + +/* + * Licensed to the Apache Software Foundation (ASF) under one + * or more contributor license agreements.  See the NOTICE file + * distributed with this work for additional information + * regarding copyright ownership.  The ASF licenses this file + * to you under the Apache License  Version 2.0 (the + * "License"); you may not use this file except in compliance + * with the License.  You may obtain a copy of the License at + * + *  http://www.apache.org/licenses/LICENSE-2.0 + * + * Unless required by applicable law or agreed to in writing + * software distributed under the License is distributed on an + * "AS IS" BASIS  WITHOUT WARRANTIES OR CONDITIONS OF ANY + * KIND  either express or implied.  See the License for the + * specific language governing permissions and limitations + * under the License. + */ + +public interface ArtifactRepositoryLayout2 +    extends ArtifactRepositoryLayout +{ + +    ArtifactRepository newMavenArtifactRepository( String id  String url  ArtifactRepositoryPolicy snapshots +                                                   ArtifactRepositoryPolicy releases ); +} Original problem and corresponding build failure: https://issues.sonatype.org/browse/TYCHO-324,Major,igorfie,igorfie,Tue Dec 15 00:00:00 EST 2009,[MNG-4494] Custom repository layout should be able to participate in repository instance creation,Closed,improvement
MNG-4498,Wed Dec 16 00:00:00 EST 2009,Fixed,It can happen that Maven fetches broken maven-metadata.xml into the local repo (e.g. because it doesn't understand HTTP error codes properly and downloads HTML files or just because the remote repo serves crap). Currently  the bad metadata file for one repo will make the entire dependency resolution fail  regardless whether the repo/metadata in question is actually needed to complete the resolution. We should just warn in case of unreadable metadata. If it was crucial for the current artifact resolution  it will still fail the build later on when all metadata has been merged (and the bits from the broken metadata are missing).,Major,Benjamin Bentmann,bentmann,Wed Dec 16 00:00:00 EST 2009,[MNG-4498] Don't fail dependency resolution if one remote repo's metadata is broken,Closed,improvement
MNG-451,Thu Jun 09 00:00:00 EDT 2005,Fixed,This patch adds a @configurator &lt;role-hint&gt; tag to the  JavaMojoDescriptorExtractor so Mojo implementors may override the default 'java' ComponentConfigurator. This makes it possible to handle parameters in mojo specific manners  should there be such a need. (The patch doesn't affect existing mojo's  it just exposes the role-hint which is left to a default (not set) in the Java extractor and set to 'bsh' e.a. in the other Extractors). ,Major,null,null,Mon Jun 06 00:00:00 EDT 2005,[MNG-451] Specify ComponentConfigurator hint in Mojo doclet tags,Closed,improvement
MNG-456,Mon Jul 25 00:00:00 EDT 2005,Fixed, ,Blocker,Brett Porter,brettporter,Tue Jun 07 00:00:00 EDT 2005,[MNG-456] allow separate snapshot repositories,Closed,improvement
MNG-4591,Mon Mar 15 00:00:00 EDT 2010,Fixed,While doing a build today  i noticed something that is a little confusing. Take the following output Downloading: http://localhost:8012/somesuperbig.jar Downloading: http://localhost:8012/somesmall.jar 5 KB downloaded at 10.4 KB/sec Downloading: http://localhost:8012/someotherbig.jar 500 MB downloaded at 19.2 KB/sec 500 MB downloaded at 19.2 KB/sec While this is occurring  you have no idea which file downloaded at a size of 5KB (only once its done can you figure it out  and this is simple example for purpose of ticket). Would be nice to see something like this 500 MB downloaded at 19.2 KB/sec (http://localhost:8012/someotherbig.jar) for example,Major,Benjamin Bentmann,bentmann,Mon Mar 15 00:00:00 EDT 2010,[MNG-4591] Enhance the download rate output to include downloaded file name,Closed,improvement
MNG-461,Fri Jul 22 00:00:00 EDT 2005,Fixed, ,Blocker,Brett Porter,brettporter,Wed Jun 08 00:00:00 EDT 2005,[MNG-461] warn  but don't fail  on a missing POM in the repository,Closed,improvement
MNG-4610,Fri Mar 26 00:00:00 EDT 2010,Fixed,Change the default version of maven-release-plugin to 2.0 in the super POM. The background for this request is that v2.0-beta-9 doesn't have signatures and I have some customers requiring signature verification for Apache artifacts. As some Maven commands are run outside of a POM  the default version would be used. Which doesn't work in this case.,Major,Benjamin Bentmann,bentmann,Fri Mar 26 00:00:00 EDT 2010,[MNG-4610] Bump maven-release-plugin to v2.0 in super POM,Closed,improvement
MNG-4619,Sun Apr 04 00:00:00 EDT 2010,Fixed,While a version mismatch for the local POM at parent.relativePath is not unusual  discovering a POM with a completely different groupId or artifactId indicates an inconsistency between the project structure and the POM. We should tell users this via a warning to help fixing their setup and avoid potential confusion about parent resolution.,Minor,Benjamin Bentmann,bentmann,Sun Apr 04 00:00:00 EDT 2010,[MNG-4619] Issue warning in case parent.relativePath points at POM with different groupId/artifactId,Closed,improvement
MNG-4623,Wed Apr 07 00:00:00 EDT 2010,Fixed,I accidentally left out the &lt;build&gt; tag around extensions:   &lt;/dependencies&gt; ...   &lt;extensions&gt;     &lt;extension&gt;       &lt;groupId&gt;org.apache.maven.wagon&lt;/groupId&gt;       &lt;artifactId&gt;wagon-ssh-external&lt;/artifactId&gt;       &lt;version&gt;1.0-beta-6&lt;/version&gt;     &lt;/extension&gt;   &lt;/extensions&gt; ...   &lt;distributionManagement&gt; In Maven 2.2.1 the error was long winded but included: Reason: Parse error reading POM. Reason: Unrecognised tag: 'extensions' (position: START_TAG seen ...&lt;/dependencies&gt;\n  &lt;extensions&gt;... @18:15)  for project unknown at .../pom.xml In Maven 3.0-SNAPSHOT  the error is: [ERROR]     Non-parseable POM .../pom.xml: Duplicated tag: 'artifactId' (position: START_TAG seen ...&lt;/groupId&gt;\n      &lt;artifactId&gt;... @21:19) -&gt; [Help 2] While it points at the right section  the first is much more accurate about what the problem was,Major,Benjamin Bentmann,bentmann,Tue Apr 06 00:00:00 EDT 2010,[MNG-4623] model parsing errors can be less helpful in Maven 3,Closed,improvement
MNG-4628,Wed Apr 07 00:00:00 EDT 2010,Fixed,This was originally reported as https://issues.sonatype.org/browse/TYCHO-404 but will affect other build lifecycle participants as well. In short  ReactorArtifactRepository is setup too late during build bootstrap and AbstractMavenLifecycleParticipant#afterProjectsRead are not able to resolve inter-module dependencies as a result. I will commit trivial patch shortly.,Major,igorfie,igorfie,Wed Apr 07 00:00:00 EDT 2010,[MNG-4628] ReactorArtifactRepository is not setup soon enough for AbstractMavenLifecycleParticipant#afterProjectsRead,Closed,improvement
MNG-463,Thu Jun 09 00:00:00 EDT 2005,Fixed,I've set up M2_HOME to a wrong directory by mistake  and the m2 installer deleted everything in it... May I suggest to use the same strategy used by the cargo installer? I.e.  if (target directory empty || m2 marker file exists) copy the contents add a marker file specific to m2 else   warn user See CARGO-27 for the original CARGO issue.,Critical,null,null,Thu Jun 09 00:00:00 EDT 2005,[MNG-463] [data loss] installation script inconditionally deletes M2_HOME contents,Closed,improvement
MNG-4634,Tue Apr 13 00:00:00 EDT 2010,Fixed,Allow build extensions to contribute new lifecycles. Most of the required plumbing is already present  so we only need to make Lifecycle into a component.,Major,igorfie,igorfie,Tue Apr 13 00:00:00 EDT 2010,[MNG-4634] Allow custom lifecycles,Closed,improvement
MNG-464,Sun Jan 19 00:00:00 EST 2014,Fixed,I was trying to share a repository between 2 users  and tried to do so before setting the repository permissions correctly. user1 created the repository user2 tried to do a build without having write access to repository the build failed with a confusing error. Something like: Caused by: java.io.FileNotFoundException: /usr/local/tools/share/m2/org/codehaus/cargo/cargo/0.6-SNAPSHOT/cargo-0.6-SNAPSHOT.version.txt (No such file or directory) (I don't have the exact log unfortunately  but it shouldn't be too hard to reproduce) I think a previous failure (e.g. couldn't write in a directory) was silently discarded. That error if treated appropriately could help better diagnose the issue.,Minor,Edwin Punzalan,elpunzalan,Thu Jun 09 00:00:00 EDT 2005,[MNG-464] confusing error reported when using a non writable local directory,Closed,improvement
MNG-4642,Tue Apr 27 00:00:00 EDT 2010,Fixed, ,Major,Kristian Rosenvold,krosenvold,Sun Apr 25 00:00:00 EDT 2010,[MNG-4642] Mojos need some way to indicate support of multithreading,Closed,improvement
MNG-4693,Sun May 30 00:00:00 EDT 2010,Fixed,like already done for Doxia  Doxia Sitetools  Mercury or Modello.,Major,Herv� Boutemy,hboutemy,Sun May 30 00:00:00 EDT 2010,[MNG-4693] add a dependency graph with image map to navigate easily to modules,Closed,improvement
MNG-4732,Sat Jul 17 00:00:00 EDT 2010,Fixed,If a / character is accidentally put into a version string it can cause some weird results.  Maven installs and deploys some nameless (.jar  -sources.jar  etc) files without an error messages.  This can be a bit tricky to track down  so it would be better if Maven did some validation on the version string to prevent the '/' character or other invalid characters.,Minor,Benjamin Bentmann,bentmann,Wed Jul 14 00:00:00 EDT 2010,[MNG-4732] Version string validation,Closed,improvement
MNG-4744,Fri Jul 30 00:00:00 EDT 2010,Fixed,The coordinates for exclusons should be subject to the same validation as dependencies  i.e. groupId&amp;artifactId should be valid IDs. Maven itself doesn't care  but a typo in there or an attempt to use wildcards will cause surprises to users so let's emit a warning.,Minor,Benjamin Bentmann,bentmann,Fri Jul 30 00:00:00 EDT 2010,[MNG-4744] Validate coordinates of dependency exclusions,Closed,improvement
MNG-4749,Tue Aug 24 00:00:00 EDT 2010,Fixed,Plexus is dead  the new king is called Guice. Stuart McCulloch created a Plexus-shim on top of Guice that makes existing Plexus components (e.g. Maven plugins) work in Guice. For Maven  the transition is as simple as flipping dependencies. Attached is the required patch from Stuart.,Major,Benjamin Bentmann,bentmann,Thu Aug 05 00:00:00 EDT 2010,[MNG-4749] Move from Plexus to Guice as IoC container,Closed,improvement
MNG-4782,Thu Aug 26 00:00:00 EDT 2010,Fixed,This output isn't really helpful: [ERROR] Internal error: java.lang.NullPointerException -&gt; [Help 1] [ERROR] [ERROR] To see the full stack trace of the errors  re-run Maven with the -e switch. [ERROR] Re-run Maven using the -X switch to enable full debug logging. [ERROR] [ERROR] For more information about the errors and possible solutions  please read the following articles: [ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/InternalErrorException We know by the nature of this exception that we need more information to analyze the issue (where did the nested exception occur within the core?)  i.e. the stack trace is pretty much required. As such  we should automatically dump it to the console as if -e was given. This is not only more convenient for the user as it saves him from re-running the build but also ensures we capture valuable data for an error that might only show up occasionally.,Trivial,Benjamin Bentmann,bentmann,Thu Aug 26 00:00:00 EDT 2010,[MNG-4782] Automatically dump stack trace in case of internal Maven error,Closed,improvement
MNG-4787,Tue Aug 31 00:00:00 EDT 2010,Fixed,As part of the fix for MNG-4747  a new class realm was introduced that represents the public part of the Maven core. Life for integrators that need to contribute additional classes like Polyglot Maven or M2Eclipse would be easier if this realm is also subject to the class realm delegates. This would allow to inject the custom types at a central place rather than injecting them into each and every plugin realm.,Minor,Benjamin Bentmann,bentmann,Tue Aug 31 00:00:00 EDT 2010,[MNG-4787] Allow class realm manager delegates to alter public part of Maven core realm,Closed,improvement
MNG-4815,Wed Sep 22 00:00:00 EDT 2010,Fixed,I get nullpointers all over the place if I do not set up the configuration options exactly as maven requires them. This is fine  but not a very friendly experience for developers trying to figure out how to use the API. This is a correct/simple bootstrap (see below ) but if any or many of the methods are not called "just so" a nullpointer will result. Better error messages should be provided  such as: "No LocalRepositoryManager was configured in the RespositorySession - this may not be null." Etc... /*  * JBoss  Home of Professional Open Source  * Copyright 2010  Red Hat  Inc.  and individual contributors  * by the @authors tag. See the copyright.txt in the distribution for a  * full listing of individual contributors.  *  * This is free software; you can redistribute it and/or modify it  * under the terms of the GNU Lesser General Public License as  * published by the Free Software Foundation; either version 2.1 of  * the License  or (at your option) any later version.  *  * This software is distributed in the hope that it will be useful  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU  * Lesser General Public License for more details.  *  * You should have received a copy of the GNU Lesser General Public  * License along with this software; if not  write to the Free  * Software Foundation  Inc.  51 Franklin St  Fifth Floor  Boston  MA  * 02110-1301 USA  or see the FSF site: http://www.fsf.org.  */ package org.jboss.arqmvn; import java.io.File; import java.util.ArrayList; import org.apache.maven.artifact.repository.ArtifactRepository; import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy; import org.apache.maven.artifact.repository.MavenArtifactRepository; import org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout; import org.apache.maven.project.DefaultProjectBuildingRequest; import org.apache.maven.project.ProjectBuilder; import org.apache.maven.project.ProjectBuildingException; import org.apache.maven.project.ProjectBuildingRequest; import org.apache.maven.project.ProjectBuildingResult; import org.codehaus.plexus.DefaultPlexusContainer; import org.codehaus.plexus.logging.console.ConsoleLoggerManager; import org.sonatype.aether.impl.internal.SimpleLocalRepositoryManager; import org.sonatype.aether.util.DefaultRepositorySystemSession; /**  * @author &lt;a href="mailto:lincolnbaxter@gmail.com"&gt;Lincoln Baxter  III&lt;/a&gt;  */ public class MavenFacet {    private final ProjectBuildingRequest request = new DefaultProjectBuildingRequest();    private DefaultPlexusContainer container = null;    private ProjectBuilder builder = null;    private void bootstrapMaven()    {       if (!initialized())       {          try          {             container = new DefaultPlexusContainer();             ConsoleLoggerManager loggerManager = new ConsoleLoggerManager();             loggerManager.setThreshold("ERROR");             container.setLoggerManager(loggerManager);             builder = container.lookup(ProjectBuilder.class);             // TODO this needs to be configurable via the project/.sidekick file.             String localRepository = getUserHomeDir().getAbsolutePath() + "/.m2/repository";             request.setLocalRepository(new MavenArtifactRepository(                      "local"  new File(localRepository).toURI().toURL().toString()                      container.lookup(ArtifactRepositoryLayout.class)                      new ArtifactRepositoryPolicy(true  ArtifactRepositoryPolicy.UPDATE_POLICY_NEVER                               ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN)                      new ArtifactRepositoryPolicy(true  ArtifactRepositoryPolicy.UPDATE_POLICY_NEVER                               ArtifactRepositoryPolicy.CHECKSUM_POLICY_WARN)));             request.setRemoteRepositories(new ArrayList&lt;ArtifactRepository&gt;());             DefaultRepositorySystemSession repositorySession = new DefaultRepositorySystemSession();             repositorySession.setLocalRepositoryManager(new SimpleLocalRepositoryManager(localRepository));             repositorySession.setOffline(true);             request.setRepositorySession(repositorySession);             request.setProcessPlugins(true);             request.setResolveDependencies(true);             // request.setOffline(true);          }          catch (Exception e)          {             throw new RuntimeException(e);          }       }    }    private boolean initialized()    {       return request == null;    }    /*     * POM manipulation methods     */    public ProjectBuildingResult getProjectBuildingResult()    {       bootstrapMaven();       try       {          ProjectBuildingResult buildingResult = builder.build(getPOMFile()  request);          return buildingResult;       }       catch (ProjectBuildingException e)       {          throw new RuntimeException(e);       }    }    private File getPOMFile()    {       File file = new File("pom.xml");       return file;    }    private File getUserHomeDir()    {       return new File(System.getProperty("user.home")).getAbsoluteFile();    } } ,Major,Benjamin Bentmann,bentmann,Thu Sep 16 00:00:00 EDT 2010,[MNG-4815] (3.0-RC1) Maven Java API does not give nice error messages when improperly configured,Closed,improvement
MNG-4824,Mon Sep 20 00:00:00 EDT 2010,Fixed,I got 3 resolution errors. On a smaller console width  they were very hard to read: [ERROR] The build could not read 3 projects -&gt; [Help 1] [ERROR]   The project org.codehaus.redback:redback-authorization-rbac:1.3-SNAPSHOT (/Users/brett/scm/redback/redback-rbac/redback-authorization-rbac/pom.xml) has 1 error [ERROR]     Non-resolvable parent POM org.codehaus.redback:redback-authorization-providers:1.3-SNAPSHOT for org.codehaus.redback:redback-authorization-rbac:1.3-SNAPSHOT: Failed to resolve POM for org.codehaus.redback:redback-authorization-providers:1.3-SNAPSHOT due to The following artifacts could not be resolved: org.codehaus.redback:redback-authorization-providers:pom:1.3-SNAPSHOT: Could not find artifact org.codehaus.redback:redback-authorization-providers:pom:1.3-SNAPSHOT -&gt; [Help 2] [ERROR]   The project org.codehaus.redback:redback-authentication-keys:1.3-SNAPSHOT (/Users/brett/scm/redback/redback-keys/redback-authentication-keys/pom.xml) has 1 error [ERROR]     Non-resolvable parent POM org.codehaus.redback:redback-authentication-providers:1.3-SNAPSHOT for org.codehaus.redback:redback-authentication-keys:1.3-SNAPSHOT: Failed to resolve POM for org.codehaus.redback:redback-authentication-providers:1.3-SNAPSHOT due to The following artifacts could not be resolved: org.codehaus.redback:redback-authentication-providers:pom:1.3-SNAPSHOT: Could not find artifact org.codehaus.redback:redback-authentication-providers:pom:1.3-SNAPSHOT -&gt; [Help 2] [ERROR]   The project org.codehaus.redback:redback-authentication-users:1.3-SNAPSHOT (/Users/brett/scm/redback/redback-users/redback-authentication-users/pom.xml) has 1 error [ERROR]     Non-resolvable parent POM org.codehaus.redback:redback-authentication-providers:1.3-SNAPSHOT for org.codehaus.redback:redback-authentication-users:1.3-SNAPSHOT: Failed to resolve POM for org.codehaus.redback:redback-authentication-providers:1.3-SNAPSHOT due to The following artifacts could not be resolved: org.codehaus.redback:redback-authentication-providers:pom:1.3-SNAPSHOT: Could not find artifact org.codehaus.redback:redback-authentication-providers:pom:1.3-SNAPSHOT -&gt; [Help 2] I suggest adding a number to the front of each  and a new line between them.,Major,Benjamin Bentmann,bentmann,Sun Sep 19 00:00:00 EDT 2010,[MNG-4824] multiple failures need additional whitespace,Closed,improvement
MNG-4825,Mon Sep 20 00:00:00 EDT 2010,Fixed,See the exceptions in MNG-4824. This was caused by a default relative path of '../pom.xml' which was not correct. Maven 2.x ignored it and went to the repository  but as specified in the compatibility notes Maven 3 fails. The exception should state that it was a non-resolvable parent because  it is not in the repository and not found at the relative path of '../pom.xml',Major,Benjamin Bentmann,bentmann,Sun Sep 19 00:00:00 EDT 2010,[MNG-4825] Relative path errors could be more explicit,Closed,improvement
MNG-4860,Mon Oct 11 00:00:00 EDT 2010,Fixed,For lazy construction/loading of some bits  MavenProject instances currently hold a reference to the ProjectBuildingRequest from which they were created. This proves to be problematic for IDE integration where those requests a) hold a fair amount of memory (in particular the repo system cache) b) hold references to potentially obsolete objects like GUI-backed transfer listeners As such IDE integrators have the need to either nullify or update this request.,Major,Benjamin Bentmann,bentmann,Mon Oct 11 00:00:00 EDT 2010,[MNG-4860] Allow management of project building request kept inside MavenProject instances,Closed,improvement
MNG-4886,Sun Nov 07 00:00:00 EDT 2010,Fixed,When using a mirror to replace a repository and Maven fails to retrieve an artifact from the mirror  the log messages conflict on the actual URL that the download attempt was to. Example of this behavior is below. 09/29/10 21:12:43 /cm/somepath/project   |&#91;DEBUG&#93; Trying repository central 09/29/10 21:12:43 /cm/somepath/project   |Downloading: https://somemirror.org:8081/nexus/content/groups/bncbuild/org/apache/felix/maven-bundle-plugin/2.0.1/maven-bundle-plugin-2.0.1.pom 09/29/10 21:12:43 /cm/somepath/project   |&#91;DEBUG&#93; Unable to get resource 'org.apache.felix:maven-bundle-plugin:pom:2.0.1' from repository central (http://repo1.maven.org/maven2): Error transferring file The second log statement indicates that the file was being downloaded from somemirror.org.  The last log statement conflicts with second  indicating instead that the connection was to repo1.maven.org.  Seeing an attempt to download from a repository outside our firewall worries the security folk at our company.  The expected result would be for the log to indicate the actual URL it is going to or at least indicate that the repository's URL is being overridden by a mirror. Investigation points to the problem log statement being in org.apache.maven.artifact.manager.DefaultWagonManager.getArtifact()  line 341. http://svn.apache.org/viewvc/maven/maven-2/tags/maven-2.2.0/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java,Minor,Benjamin Bentmann,bentmann,Wed Nov 03 00:00:00 EDT 2010,[MNG-4886] Conflicting log statements when using a mirror,Closed,improvement
MNG-4891,Tue Nov 09 00:00:00 EST 2010,Fixed,This is a follow-up to MNG-4418. The model/settings validation that has been put in place to avoid metadata corruption of the local repo by a remote repo that misuses the same id doesn't help when plugins create repository instances on their own as with the maven-deploy-plugin in combination with its altDeploymentRepository parameter. Using such a setup  the JGit folks ended up with builds that weren't able to resolve local snapshots that had just been installed seconds before. We need to improve the diagnostic output to more easily detect this kind of metadata corruption and gracefully recover from it.,Major,Benjamin Bentmann,bentmann,Tue Nov 09 00:00:00 EST 2010,[MNG-4891] Improve robustness of snapshot dependency resolution in case a remote repo accidently uses the id "local",Closed,improvement
MNG-4896,Sat Nov 13 00:00:00 EST 2010,Fixed,The help for the -pl option does not explain how to set more than one project.  Using more than on -pl option won't work  only the first value is respected.,Minor,Benjamin Bentmann,bentmann,Fri Nov 12 00:00:00 EST 2010,[MNG-4896] Help for -pl option does not include use of comma-sep  also more than one -pl does not work or complain,Closed,improvement
MNG-49,Thu Jul 22 00:00:00 EDT 2004,Fixed,maven-core bootstrap.sh should look in the other known locations if not in the path.,Minor,null,null,Thu Jan 08 00:00:00 EST 2004,[MNG-49] bootstrap should also look in $MBOOT_HOME and $HOME/mboot for mboot executable,Closed,improvement
MNG-4904,Thu Nov 18 00:00:00 EST 2010,Fixed,MavenExecutionResult.getTopologicallySortedProjects() returns null when there are no projects forcing consumers to perform null checks.  Consider returning an empty collection instead.,Major,Benjamin Bentmann,bentmann,Thu Nov 18 00:00:00 EST 2010,[MNG-4904] Make MavenExecutionResult.getTopologicallySortedProjects() return empty list instead of null,Closed,improvement
MNG-4907,Sun Nov 21 00:00:00 EST 2010,Fixed,I'll attach a zipped sample showing the issue; it has 3 folders  each having a small pom.  They are named childFolder  parentFolder  and submodule. The child has the parent as its parent. The child has a &lt;modules&gt; section listing the parent and the submodule as things to be built. The submodule list "parent" as its parent  but fails (on purpose  to illustrate the issue) to include a &lt;relativePath&gt; element. If I do mvn clean on the "submodule"  it says  correctly: &#91;ERROR&#93; The build could not read 1 project -&gt; &#91;Help 1&#93; &#91;ERROR&#93; &#91;ERROR&#93;   The project t:submodule:1-SNAPSHOT (D:\mavenAlign\trunk\mvn-parent-relative-path\submodule\pom.xml) has 1 error &#91;ERROR&#93;     Non-resolvable parent POM: Could not find artifact t:parent:pom:1-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 8  column 11 -&gt; &#91;Help 2&#93;    Note: line 8  column 11 is right after the "&lt;parent&gt;" element in the source. But  if I run mvn clean on the "child"  it says  incorrectly: &#91;ERROR&#93; The build could not read 1 project -&gt; &#91;Help 1&#93; &#91;ERROR&#93; &#91;ERROR&#93;   The project t:child:1-SNAPSHOT (D:\mavenAlign\trunk\mvn-parent-relative-path\childFolder\pom.xml) has 1 error &#91;ERROR&#93;     Non-resolvable parent POM: Could not find artifact t:parent:pom:1-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 5  column 11 -&gt; &#91;Help 2&#93; In fact  the ...\childFolder\pom.xml doesn't have an error  and the message that it points at the wrong local POM at line 5  column 11 is not correct.  If you comment out the &lt;module&gt; reference in this pom to the "submodule"  it works fine.  The error is actually in the submodule.  The line 5  column 11 refers to a spot right after the "&lt;parent&gt;" element in the child module  where everything is OK. This of course  misleads the person trying to debug this  to look hard in the wrong place .,Minor,Benjamin Bentmann,bentmann,Fri Nov 19 00:00:00 EST 2010,[MNG-4907] Wrong error message when relativePath wrong,Closed,improvement
MNG-4909,Mon Nov 22 00:00:00 EST 2010,Fixed,Import of managed dependencies works only if the managed depencency uses scope import and is of type pom. The latter condition is easily forgotten/overlooked by users which then wonder why the import doesn't work. Maven should emit a validation warning to help troubleshoot this typo.,Minor,Benjamin Bentmann,bentmann,Mon Nov 22 00:00:00 EST 2010,[MNG-4909] Emit warning when dependency with scope import but inproper type is declared,Closed,improvement
MNG-4910,Mon Nov 22 00:00:00 EST 2010,Fixed,Attached patch extends BeanConfigurator to allow picking individual configuration sub-elements. This is useful when embedding application  like m2e  only needs access to subset of original configuration. The change is an addition to brand new API introduced in 3.0 and is fully backwards compatible with (unlikely) existing clients  so I wonder if this is okay to include this change in 3.0.1?,Major,igorfie,igorfie,Mon Nov 22 00:00:00 EST 2010,[MNG-4910] Use BeanConfigurator for configuration sub-elements,Closed,improvement
MNG-4912,Fri Nov 26 00:00:00 EST 2010,Fixed,To avoid raw type and unchecked warnings  ArtifactVersion should implement Comparable&lt;ArtifactVersion&gt;  not raw Comparable. Compare interface Artifact extends Comparable&lt;Artifact&gt; etc.,Minor,Benjamin Bentmann,bentmann,Tue Nov 23 00:00:00 EST 2010,[MNG-4912] Use of raw type should be Comparable<ArtifactVersion>,Closed,improvement
MNG-4916,Wed Nov 24 00:00:00 EST 2010,Fixed,Need to extend PluginArtifactsCache to also cache extension plugin artifact resolution errors  otherwise DefaultProjectBuildingHelper keeps failing to resolve the same plugin again and again.,Major,igorfie,igorfie,Wed Nov 24 00:00:00 EST 2010,[MNG-4916] Poor ProjectBuilder.build performance for projects with unresolvable extension plugins,Closed,improvement
MNG-4922,Sat Dec 04 00:00:00 EST 2010,Fixed,It could be usefull for having the exception details in ExecutionListener impls to have something like (to not wait the end of the maven execution) : ExecutionEvent.getException(). could be done with  MojoExecution.getException() will need some stuff for projectFailed but at least could be interesting for mojo executions. WDYT ?,Major,Olivier Lamy (*$^�%`�),olamy,Wed Dec 01 00:00:00 EST 2010,[MNG-4922] ExecutionEvent give on the exception encountered (when having mojoFailed),Closed,improvement
MNG-4926,Sat Dec 04 00:00:00 EST 2010,Fixed,It could be usefull for having the exception details in ExecutionListener impls to have something like (to not wait the end of the maven execution) : API change : ExecutionEvent.getException(). ,Major,Benjamin Bentmann,bentmann,Sat Dec 04 00:00:00 EST 2010,[MNG-4926] ExecutionEvent give on the exception encountered (when having projectFailed   forkedProjectFailed),Closed,improvement
MNG-494,Tue Jun 21 00:00:00 EDT 2005,Fixed,because plugins are established at the start of the run  dependencies are all resolved at the start  even if some are never executed. This means getting dependencies of mojos you aren't even using. This is something to improve in the lifecycle executor  but it would still be good to defer plugin dep resolution until execution  the same as it is for the project itself. It would also mean not getting such a large dep hit at the start of a reactor build. This would complicate the set up of the classworld  otherwise it would be a quick fix.,Major,John Casey,jdcasey,Sun Jun 19 00:00:00 EDT 2005,[MNG-494] defer plugin dependency resolution to execution rather than at addPlugin,Closed,improvement
MNG-4944,Sat Dec 18 00:00:00 EST 2010,Fixed,On occasion it's helpful to know the JRE vendor when tracking down bugs.,Trivial,Benjamin Bentmann,bentmann,Sat Dec 18 00:00:00 EST 2010,[MNG-4944] Include JRE vendor in version info,Closed,improvement
MNG-4950,Wed Dec 22 00:00:00 EST 2010,Fixed,The javadocs of DefaultSettingsWriter and DefaultSettingsReader is just copied from the interface and should better reflect what these classes do. I fixed this in the attached patch (project: maven-settings-builder on trunk).,Trivial,Benjamin Bentmann,bentmann,Wed Dec 22 00:00:00 EST 2010,[MNG-4950] Javadoc improvements to DefaultSettingsWriter/Reader,Closed,improvement
MNG-4953,Mon Dec 27 00:00:00 EST 2010,Fixed,This is an anti-pattern that asks for troubles as the declaring POM will be be unusable during dependency resolution (when accessed from a repository): &lt;dependency&gt;   ...   &lt;scope&gt;system&lt;/scope&gt;   &lt;systemPath&gt;${basedir}/lib/foo.jar&lt;/systemPath&gt; &lt;/dependency&gt; As such  usage of either basedir and project.basedir for the system path should emit a warning to help stopping this kind of bad practice.,Minor,Benjamin Bentmann,bentmann,Thu Dec 23 00:00:00 EST 2010,[MNG-4953] Issue a warning when a system-scope dependency refers to the project basedir,Closed,improvement
MNG-4971,Fri Jan 14 00:00:00 EST 2011,Fixed,Display maven.home information when user run "mvn -version". Similar motivation as MNG-4944. User may have same version of maven for different project such as company/open source. Same as java.home  user may need go into maven.home to do some verification. The patch moved java.home one line up to group together with maven.home. With patch "mvn -version" will show: Apache Maven 3.0.1 (r1038046; 2010-11-23 10:58:32+0000) Maven home: /software/maven/3.0.1 Java home: /usr/lib/jvm/java-6-openjdk/jre Java version: 1.6.0_20  vendor: Sun Microsystems Inc. Default locale: en_IE  platform encoding: UTF-8 OS name: "linux"  version: "2.6.32-25-generic"  arch: "i386"  family: "unix" Without patch "mvn -version" will show: Apache Maven 3.0.1 (r1038046; 2010-11-23 10:58:32+0000) Java version: 1.6.0_20  vendor: Sun Microsystems Inc. Java home: /usr/lib/jvm/java-6-openjdk/jre Default locale: en_IE  platform encoding: UTF-8 OS name: "linux"  version: "2.6.32-25-generic"  arch: "i386"  family: "unix",Trivial,Benjamin Bentmann,bentmann,Wed Jan 12 00:00:00 EST 2011,[MNG-4971] Display maven home in version info,Closed,improvement
MNG-4984,Wed Jan 19 00:00:00 EST 2011,Fixed,To enhance a stock Maven distro  3rd parties can drop additional JARs into the distro's lib directory. If those JARs need to replace default components  the extension needs to be placed first on the classpath to ensure the Plexus container looks up the desired impl. Ensuring that the 3rd party JARs get loaded before the stock Maven JAR requires currently editing the m2.conf used to bootstrap Classworlds. To eliminate this last step  we can support a dedicated ext directory that gets loaded before the default JARs.,Major,Benjamin Bentmann,bentmann,Wed Jan 19 00:00:00 EST 2011,[MNG-4984] Simplify drop in of 3rd party extensions for Maven core,Closed,improvement
MNG-4988,Thu Jan 20 00:00:00 EST 2011,Fixed,m2e uses project execution plan to determine how to configure the project in eclipse workspace and what to do during workbench build. Not all mojo execution bound to execution plan are relevant for this (think enforcer or deploy plugin)  so m2e needs an API to analyse execution plan and perform full configuration of interesting mojo execution only.  Original m2e jira https://issues.sonatype.org/browse/MNGECLIPSE-2724 Proposed patch attached.,Major,igorfie,igorfie,Thu Jan 20 00:00:00 EST 2011,[MNG-4988] API to calculate execution plan without full mojo execution configuration,Closed,improvement
MNG-499,Tue Jul 05 00:00:00 EDT 2005,Fixed,The README.txt that says how to bootstrap-build maven doesn't say how to handle proxies.,Minor,John Casey,jdcasey,Tue Jun 21 00:00:00 EDT 2005,[MNG-499] the README.txt for maven-components doesn't say how to handle proxies,Closed,improvement
MNG-4992,Sat Feb 12 00:00:00 EST 2011,Fixed,java.util.Properties is a java.util.Map  yet plugin parameters of type Properties cannot be configured like ordinary Map parameters  i.e.: &lt;map&gt;   &lt;key&gt;value&lt;/key&gt; &lt;/map&gt; ,Minor,Benjamin Bentmann,bentmann,Sat Jan 22 00:00:00 EST 2011,[MNG-4992] Allow to configure plugin parameters of type java.util.Properties just like a map,Closed,improvement
MNG-5011,Sat Feb 12 00:00:00 EST 2011,Fixed,It would be helpful for plugin authors and users if Maven could configure collections/arrays from comma-separated property values  e.g. mvn -Dincludes=*Foo *Bar whatever/** goal This allows plugin authors to consequently use the proper data type for parameters and avoids doing manual string splitting to please the user's occasional need to configure a parameter from the command line.,Minor,Benjamin Bentmann,bentmann,Sat Feb 12 00:00:00 EST 2011,[MNG-5011] Allow to configure array/collection type plugin parameters via system properties,Closed,improvement
MNG-5012,Sat Feb 12 00:00:00 EST 2011,Fixed,The distinction between arrays and collections is often times more a low-tech thingy than anything else  conceptually  both types are useful to hold zero or more items. As such it would be nice if plugin authors can freely choose which type works best for their plugin parameters. E.g. many Maven APIs provide collections yet arrays currently render the nicer plugin docs (component type mentioned). Currently  this is not possible: /** @parameter default-value="${project.compileSourceRoots}" */ String[] sourceRoots; ,Minor,Benjamin Bentmann,bentmann,Sat Feb 12 00:00:00 EST 2011,[MNG-5012] Allow to configure array-typed plugin parameters from expressions yielding collections and vice versa,Closed,improvement
MNG-5013,Sat Feb 12 00:00:00 EST 2011,Fixed,Let's take this example configuration snippet: &lt;resources&gt;   &lt;resource&gt;     &lt;directory&gt;src/foo&lt;/directory&gt;     &lt;filtering&gt;true&lt;/filtering&gt;   &lt;/resource&gt;   &lt;resource&gt;src/bar&lt;/resource&gt; &lt;/resources&gt; Apparently  the last &lt;resource&gt; element is meant as a shorthand form for &lt;resource&gt;&lt;directory&gt;src/bar&lt;/directory&gt;&lt;/resource&gt;. Not only does support for this notation save users a few bits of (sometimes hated) XML but it also provides plugin authors with a smooth upgrade path say when a parameter was initially typed as File[] but later needs to be extended into Bean[].,Minor,Benjamin Bentmann,bentmann,Sat Feb 12 00:00:00 EST 2011,[MNG-5013] Allow to condense configuration of plugin parameter beans that commonly require only one value,Closed,improvement
MNG-502,Wed Jul 13 00:00:00 EDT 2005,Fixed, ,Minor,John Casey,jdcasey,Tue Jun 21 00:00:00 EDT 2005,[MNG-502] Move detection of plugin-execution id-collisions into the project validator  rather than the DefaultMavenProjectBuilder.,Closed,improvement
MNG-5020,Thu Feb 24 00:00:00 EST 2011,Fixed,When JAVA_HOME is not set (but java command is in the PATH) then bin/mvn script  prints warning message "Warning: JAVA_HOME environment variable is not set."  I don't want to explicitly set JAVA_HOME variable because I manage my JDK instances by update-java-alternatives in Ubuntu. It switches system wide JDK  but does not set the JAVA_HOME variable. If I would set JAVA_HOME manually then any changes made by update-java-alternatives would not be reflected in JAVA_HOME which is obviously incorrect. However mvn script can be improved  so that it can guess JAVA_HOME. Actually Groovy startup script does it very well  so I moved auto-discovery code from groovy script to mvn and attach patch here,Minor,Benjamin Bentmann,bentmann,Mon Feb 21 00:00:00 EST 2011,[MNG-5020] JAVA_HOME auto discovery,Closed,improvement
MNG-5028,Mon Feb 28 00:00:00 EST 2011,Fixed,Right now  when determining the target type for a collection item to convert POM configuration to  Maven/Plexus uses some heuristics based on the XML element name and the mojo package name and eventually falls back to String. The current approach requires plugin authors to either put their parameter bean classes into the same package as the mojo or requires users to explicitly use the implementation attribute in the POM. These troubles can be avoided if Maven would recognize the generic type of a parameter declaration List&lt;Bean&gt;  thereby aligning collections with arrays regarding the ease of configuration/use.,Minor,Benjamin Bentmann,bentmann,Mon Feb 28 00:00:00 EST 2011,[MNG-5028] Obey generics in plugin collection parameters when populating them,Closed,improvement
MNG-5033,Thu Mar 03 00:00:00 EST 2011,Fixed,The need to wrap collection/array elements into a container element is occasionally frustrating to users (XML verbosity). Within plugin configuration  this can be achieved without a new model format  e.g. &lt;fileset&gt;   &lt;directory&gt;src/demo&lt;/directory&gt;   &lt;include&gt;Foo*&lt;/include&gt;   &lt;include&gt;Bar*&lt;/include&gt;   &lt;exclude&gt;*Bad&lt;/exclude&gt; &lt;/fileset&gt; ,Minor,Benjamin Bentmann,bentmann,Thu Mar 03 00:00:00 EST 2011,[MNG-5033] Allow to inline collection/array items within plugin configuration,Closed,improvement
MNG-5073,Tue Sep 27 00:00:00 EDT 2011,Fixed,ProjectBuilder.build(File ProjectBuildingRequest) returns null MavenProject instance for the following pom.xml even when using ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL. Expected/desired behaviour is to return MavenProject instance populated with all good/resolved dependencies and information about all bad/missing dependencies in MavenExecutionResult.getExceptions and/or MavenExecutionResult.getDependencyResolutionResult.   &lt;project&gt;   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;   &lt;groupId&gt;xxx&lt;/groupId&gt;   &lt;artifactId&gt;m01&lt;/artifactId&gt;   &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;   &lt;dependencies&gt;     &lt;dependency&gt;       &lt;groupId&gt;junit&lt;/groupId&gt;       &lt;artifactId&gt;junit&lt;/artifactId&gt;     &lt;/dependency&gt;   &lt;/dependencies&gt; &lt;/project&gt;   Original m2e bugreport https://bugs.eclipse.org/bugs/show_bug.cgi?id=343568,Major,Benjamin Bentmann,bentmann,Thu Apr 21 00:00:00 EDT 2011,[MNG-5073] ProjectBuilder.build(File ProjectBuildingRequest) returns null project if dependency version info is missing,Closed,improvement
MNG-5076,Sun Apr 24 00:00:00 EDT 2011,Fixed,I will attach a patch. If someone tells me the corresponding mdo file for 3.x  I'll get that too.,Major,Herv� Boutemy,hboutemy,Sun Apr 24 00:00:00 EDT 2011,[MNG-5076] Improve SEO of documentation of lifecycle.xml,Closed,improvement
MNG-5108,Tue Jun 14 00:00:00 EDT 2011,Fixed,This handy page at sonatype contains data that  I submit  should be part of the core maven pom reference documentation. http://www.sonatype.com/people/2011/01/maven-how-to-merging-plugin-configuration-in-complex-projects/,Major,Benson Margulies,bmargulies,Sun May 29 00:00:00 EDT 2011,[MNG-5108] Useful information on property inheritance control is not in the pom doc,Closed,improvement
MNG-511,Mon Jul 11 00:00:00 EDT 2005,Fixed,utilise the metadata source instead of a resolver.,Major,John Casey,jdcasey,Thu Jun 23 00:00:00 EDT 2005,[MNG-511] only retrieve metadata to determine version in version manager  not resolve plugin artifact,Closed,improvement
MNG-5119,Tue Aug 30 00:00:00 EDT 2011,Fixed,see http://markmail.org/search/?q=list%3Aorg.apache.maven.dev#query:list%3Aorg.apache.maven.dev+page:1+mid:i5vduo7nzq47anoi+state:results work in progress can be evaluated comparing 3.0.3 and 3.0.4-SNAPSHOT,Major,Herv� Boutemy,hboutemy,Mon Jun 13 00:00:00 EDT 2011,[MNG-5119] improve site organization of core components,Closed,improvement
MNG-512,Sat Oct 08 00:00:00 EDT 2005,Fixed,eg  package on a pom does nothing - give a brief message and skip.,Minor,Brett Porter,brettporter,Thu Jun 23 00:00:00 EDT 2005,[MNG-512] skip project if no goals are bound,Closed,improvement
MNG-5134,Sun Sep 18 00:00:00 EDT 2011,Fixed,The Maven site documentation should include a reference to all the available properties. There are a couple of existing locations of property documentation  but nothing on the official Maven site from what I can tell. http://docs.codehaus.org/display/MAVENUSER/MavenPropertiesGuide http://www.sonatype.com/books/mvnref-book/reference/resource-filtering-sect-properties.html,Minor,Paul Gier,pgier,Sun Jul 17 00:00:00 EDT 2011,[MNG-5134] Standard documentation for build-in properties,Closed,improvement
MNG-5141,Thu Jul 28 00:00:00 EDT 2011,Fixed,In order to be able to honour @requiresDependencyResolution when executing mojos inside m2e jvm (during workspace build  for example) m2e needs access to MojoExecutor.ensureDependenciesAreResolved,Trivial,igorfie,igorfie,Thu Jul 28 00:00:00 EDT 2011,[MNG-5141] Make MojoExecutor.ensureDependenciesAreResolved public,Closed,improvement
MNG-5151,Thu Dec 22 00:00:00 EST 2011,Fixed,use CNAME or repo to provide more stability,Major,Olivier Lamy (*$^�%`�),olamy,Tue Aug 09 00:00:00 EDT 2011,[MNG-5151] use CNAME or repo to provide more stability,Closed,improvement
MNG-5152,Tue Aug 09 00:00:00 EDT 2011,Fixed,we still use the old 1.0.-beta7 in maven-core.,Major,Mark Struberg,struberg,Tue Aug 09 00:00:00 EDT 2011,[MNG-5152] upgrade wagon to the final 1.0 version,Closed,improvement
MNG-5158,Fri Aug 19 00:00:00 EDT 2011,Fixed,Someone who tries to delete or temporarily rename lib/ext will get rewarded with an error: java.io.FileNotFoundException: D:\apache-maven-3.0.3\bin\..\lib\ext         at org.codehaus.plexus.classworlds.launcher.ConfigurationParser.loadGlob(ConfigurationParser.java:336)         at org.codehaus.plexus.classworlds.launcher.ConfigurationParser.parse(ConfigurationParser.java:247)         at org.codehaus.plexus.classworlds.launcher.Configurator.configure(Configurator.java:135)         at org.codehaus.plexus.classworlds.launcher.Launcher.configure(Launcher.java:132)         at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:405)         at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352) Classworlds provides a means to handle a missing dir more gracefully which fits the idea of optional extensions better.,Trivial,Benjamin Bentmann,bentmann,Fri Aug 19 00:00:00 EDT 2011,[MNG-5158] Make loading of extensions from lib/ext more robust with regard to existence of ext directory,Closed,improvement
MNG-5159,Fri Aug 19 00:00:00 EDT 2011,Fixed,The various &lt;id&gt; elements in the settings.xml are meant to serve as unique keys for their container. The uniqueness aspect of those elements is currently not checked by the settings validator  giving rise to confusion and potential misbehavior.,Minor,Benjamin Bentmann,bentmann,Fri Aug 19 00:00:00 EDT 2011,[MNG-5159] Extend validation of settings.xml to check for uniqueness of id elements,Closed,improvement
MNG-516,Tue Jul 05 00:00:00 EDT 2005,Fixed,The current implementation only uses properties specified in filter.properties. This patch (relative to maven-plugins/maven-resources-plugin) adds the ability to specify properties from the project namespace as well. ,Major,null,null,Fri Jun 24 00:00:00 EDT 2005,[MNG-516] <filtering> in maven-resources-plugin does not honour project properties,Closed,improvement
MNG-517,Thu Sep 22 00:00:00 EDT 2005,Fixed,If I have (notice the goal that is incorrectly prefixed by "clover:"): &lt;lifecycles&gt;   &lt;lifecycle&gt;     &lt;id&gt;clover&lt;/id&gt;     &lt;phases&gt;       &lt;phase&gt;         &lt;id&gt;generate-sources&lt;/id&gt;         &lt;executions&gt;           &lt;execution&gt;             &lt;configuration&gt;               &lt;outputDirectory&gt;$ {project.build.directory} /clover&lt;/outputDirectory&gt;             &lt;/configuration&gt;             &lt;goals&gt;               &lt;goal&gt;clover:instrument&lt;/goal&gt;             &lt;/goals&gt;           &lt;/execution&gt;         &lt;/executions&gt;       &lt;/phase&gt;     &lt;/phases&gt;   &lt;/lifecycle&gt; &lt;/lifecycles&gt; Then I get: java.lang.NullPointerException         at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:162)         at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:143)         at org.apache.maven.lifecycle.DefaultLifecycleExecutor.forkLifecycle(DefaultLifecycleExecutor.java:227)         at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:164)         at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:143) ... which is not very explicit...,Major,Brett Porter,brettporter,Fri Jun 24 00:00:00 EDT 2005,[MNG-517] NPE when goal is invalid in custom lifecycle.xml file,Closed,improvement
MNG-5175,Thu Nov 24 00:00:00 EST 2011,Fixed,With WAGON-348  the http connection pooling made some improvement. The wagon http shaded jar included all needed classes.,Major,Olivier Lamy (*$^�%`�),olamy,Sat Sep 17 00:00:00 EDT 2011,[MNG-5175] replace wagon http lightweight with wagon http 2.1,Closed,improvement
MNG-5176,Sun Feb 09 00:00:00 EST 2014,Fixed,The current output of build times is hard to read and does not follow any standard. I have patched branch 2.2.x and 3 trunk to follow ISO 8601-style date/time formats. My patches need less code compared to the current solution. I had the following ideas in mind: 1. Display times in the same proportional format. 2. hour display is fixed to max 24 h as in ISO defined. 3. Days are directly integrated  not brain math necessary anymore. Though this should be a rare case. 3. remove the smallest component if a bigger one is added. 4. Easier to parse  predictable output. More over  I have changed the finish and total time to ISO too. I did not touch the finish time in Maven 2.2.x because it is alphanumeric. I'd rather prefer that as total time but this is maybe a matter of taste and harder to parse. This is a real output: [INFO] Building tar : /.amd_mnt/blnn728x/home/osipovmi/Projekte/maven-3/apache-maven/target/apache-maven-3.0.4-SNAPSHOT-bin.tar.gz [INFO] ------------------------------------------------------------------------ [INFO] Reactor Summary: [INFO] [INFO] Apache Maven ...................................... SUCCESS [00:04.732] [INFO] Maven Model ....................................... SUCCESS [00:06.332] [INFO] Maven Artifact .................................... SUCCESS [00:02.551] [INFO] Maven Plugin API .................................. SUCCESS [00:03.855] [INFO] Maven Model Builder ............................... SUCCESS [00:06.708] [INFO] Maven Settings .................................... SUCCESS [00:02.292] [INFO] Maven Settings Builder ............................ SUCCESS [00:02.138] [INFO] Maven Repository Metadata Model ................... SUCCESS [00:01.931] [INFO] Maven Aether Provider ............................. SUCCESS [00:02.442] [INFO] Maven Core ........................................ SUCCESS [00:28.509] [INFO] Maven Compat ...................................... SUCCESS [00:20.260] [INFO] Maven Embedder .................................... SUCCESS [00:03.478] [INFO] Maven Distribution ................................ SUCCESS [00:26.715] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 01:52.618 [INFO] Finished at: 2011-09-19 14:25:24 [INFO] Final Memory: 36M/144M [INFO] ------------------------------------------------------------------------ A crafted output with all formats would look like this: [INFO] Building tar : /.amd_mnt/blnn728x/home/osipovmi/Projekte/maven-3/apache-maven/target/apache-maven-3.0.4-SNAPSHOT-bin.tar.gz [INFO] ------------------------------------------------------------------------ [INFO] Reactor Summary: [INFO] [INFO] Apache Maven ...................................... SUCCESS [1 d 03:04] [INFO] Maven Model ....................................... SUCCESS [01:00:06] [INFO] Maven Artifact .................................... SUCCESS [00:02.551] [INFO] Maven Plugin API .................................. SUCCESS [00:03.855] [INFO] Maven Model Builder ............................... SUCCESS [00:06.708] [INFO] Maven Settings .................................... SUCCESS [00:02.292] [INFO] Maven Settings Builder ............................ SUCCESS [00:02.138] [INFO] Maven Repository Metadata Model ................... SUCCESS [00:01.931] [INFO] Maven Aether Provider ............................. SUCCESS [00:02.442] [INFO] Maven Core ........................................ SUCCESS [00:28.509] [INFO] Maven Compat ...................................... SUCCESS [00:20.260] [INFO] Maven Embedder .................................... SUCCESS [00:03.478] [INFO] Maven Distribution ................................ SUCCESS [00:26.715] [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 1 d 03:05 [INFO] Finished at: 2011-09-19 14:25:24 [INFO] Final Memory: 36M/144M [INFO] ------------------------------------------------------------------------ Since most build are below an hour  they are way easier to read.,Major,Michael Osipov,michael-o,Mon Sep 19 00:00:00 EDT 2011,[MNG-5176] Print build times in an ISO 8601-style manner,Closed,improvement
MNG-518,Fri Jul 22 00:00:00 EDT 2005,Fixed,Here's what I get: org.apache.maven.artifact.InvalidArtifactRTException: For artifact  {org.apache.maven.plugins:null:1.0-SNAPSHOT:jar} : The artifactI d cannot be empty.         at org.apache.maven.artifact.DefaultArtifact.validateIdentity(DefaultArtifact.java:97)         at org.apache.maven.artifact.DefaultArtifact.&lt;init&gt;(DefaultArtifact.java:85) There are 2 problems with this: 1/ If the artifactId is not specified there's no point in writing null in  {org.apache.maven.plugins:null:1.0-SNAPSHOT:jar} . I'd rather that the full location of the pom.xml file be specified 2/ It seems that the problem does not come from my plugin but rather from one of its dependency. It would be nice to know which one... ,Major,Brett Porter,brettporter,Fri Jun 24 00:00:00 EDT 2005,[MNG-518] InvalidArtifactRTException exception should be more precise,Closed,improvement
MNG-5181,Thu Jan 31 00:00:00 EST 2013,Fixed,I just discover the change introduced in Maven 3.x to try to improve the resolution mechanism and to avoid to use a local artifact which may not be available in its remote repository :  https://cwiki.apache.org/confluence/display/MAVEN/Maven+3.x+Compatibility+Notes#Maven3.xCompatibilityNotes-ResolutionfromLocalRepository Even if the feature is interesting it has several problems : When an artifact isn't accessible from its remote repository it isn't used by maven which replies a classical "dependency not found error". It is really annoying for a user with some Maven 2 skills which will have a look at his local repo  will find the artifact and won't understand why Maven doesn't use it. At least the error reported by Maven should be clear that even if the dependency is available locally  it isn't used because it's remote repository isn't available. This behavior cannot be configured to be only a warning for example. It is really annoying because it doesn't take care of some context and constraints we may have in a development team. Let's imagine that the remote artifact is really removed. Cool Maven broke the build to warn us. But it brakes the build of all the team whereas perhaps only one of them may try to solve the issue (and it can be a long resolution). Thus having the ability to configure if this control is blocker or warning may allow the team to configure it as blocker on the CI server and as warning on the development environment. This behavior may introduce some bad practices for example when we are using a staging feature on a repository manager. In our case my teams have a dedicated profile to activate a staging repository when we are validating a release. I recommend to not have this profile always activated but to do it only on-demand to avoid them to DL staging stuffs they don't need. With this new feature they need for all builds they run to activate this staging profile while binaries are stored in it. When you have to do it 20 times per day minimum let's imagine what the developer does : It adds it as an alwaysActive profile and then forget to remove it when the release is ended. For all these reason I would like we improve this feature to make it more usable and before all bet understandable for ours users.,Major,Olivier Lamy (*$^�%`�),olamy,Thu Oct 06 00:00:00 EDT 2011,[MNG-5181] New resolution from local repository is very confusing,Closed,improvement
MNG-5200,Tue Nov 15 00:00:00 EST 2011,Fixed, ,Major,Olivier Lamy (*$^�%`�),olamy,Mon Nov 14 00:00:00 EST 2011,[MNG-5200] upgrade plugin versions in super pom,Closed,improvement
MNG-5201,Thu Nov 17 00:00:00 EST 2011,Fixed, ,Major,Olivier Lamy (*$^�%`�),olamy,Thu Nov 17 00:00:00 EST 2011,[MNG-5201] upgrade aether to 1.13 and sisu to 2.3.0,Closed,improvement
MNG-521,Wed Jul 27 00:00:00 EDT 2005,Fixed,Currently m2 pom require to have explicit version of the parent pom in all submodules. This should work fine for "standalone" artifacts. However there is different type of projects (e.g. EAR) that is usually stored in version control as a whole thing and may contain multiple modules (ejb jars  rar  war  etc) that are build with the same version as entire EAR. So  EAR application released with a single global version for all submodules. In m1 this was possible to specify relative path to parent pom and use version substitution in child modules and deployer goal was substituting values for version numbers upon deployment. For this kind of modules it is very important to have single palce that will have global version number  which then used for submodules. It is also make sense to kee optional relative path (that can be also removed/replaced with concrete parent id/version upon deployment) to support local build. I believe this is very important for J2EE builds as well as any other projects that are releasing multiple artifacts/jars under the same version  (e.g. ASM  XDoclet).,Blocker,John Casey,jdcasey,Fri Jun 24 00:00:00 EDT 2005,[MNG-521] Version inheritance from the parent pom,Closed,improvement
MNG-5239,Sun Mar 31 00:00:00 EDT 2013,Fixed,Integrations with maven logging right now have to be down with primitive piping that loses context of the log. A greatly improved mechanism would be by allowing integration developers to control where and how logs are output and give an much improved integration capability. This could be achieved by exposing the logging configuration to the maven user (through a configuration file such as the log4j.xml).,Major,null,null,Mon Feb 06 00:00:00 EST 2012,[MNG-5239] Maven integration developers would like to be able to override the maven logging appender.,Closed,improvement
MNG-5245,Fri Nov 16 00:00:00 EST 2012,Fixed, ,Major,Olivier Lamy (*$^�%`�),olamy,Tue Feb 14 00:00:00 EST 2012,[MNG-5245] upgrade default plugins versions,Closed,improvement
MNG-5302,Sun Jan 05 00:00:00 EST 2014,Fixed,When doing a parallel build the log messages are mixed up making it hard to determine what module a message comes from. If the thread number is included in the log message it would make it easier to see what is going on  especially when the debug flag is used.,Minor,Robert Scholte,rfscholte,Fri Jun 22 00:00:00 EDT 2012,[MNG-5302] Include thread number in output messages,Closed,improvement
MNG-5338,Fri Sep 07 00:00:00 EDT 2012,Fixed,The overwhelming majority of Maven POMs are in fact named pom.xml. Yet if you want to build a project in another directory  you are forced to specify e.g. -f subdir/pom.xml where /pom.xml ought to be obvious. This simple patch lets you pass a directory to -f in which case the filename pom.xml is assumed. There should be no compatibility issue since 3.0.4 just rejects such paths with a silly error: $ mvn -f /src/maven3 install [INFO] Scanning for projects... [ERROR] The build could not read 1 project -&gt; [Help 1] [ERROR]    [ERROR]   The project  (/src/maven3) has 1 error [ERROR]     Non-readable POM /src/maven3: /src/maven3 (Is a directory) (I made an analogous change for Ant 1.8.3 in revision 1204655.),Minor,Olivier Lamy (*$^�%`�),olamy,Wed Aug 29 00:00:00 EDT 2012,[MNG-5338] Accept a directory with -f/--file,Closed,improvement
MNG-5350,Sun Oct 14 00:00:00 EDT 2012,Fixed,just got the problem in MBUILDHELPER-43 most goals were marker @threadSafe  only one was missing the marker finding the culprit would have been easier if the error message didn't speak about the overall plugin but pointed to the goal,Minor,Herv� Boutemy,hboutemy,Sat Sep 22 00:00:00 EDT 2012,[MNG-5350] improve @threadSafe error message: tell which goal,Closed,improvement
MNG-537,Fri Jul 01 00:00:00 EDT 2005,Fixed,Some informations in the page at http://maven.apache.org/maven2/building.html are missing in order to help beginners. 1/ an hyperlink to JIRA for MNG: to find quickly issues 2/ an hyperlink to Subversion: for those who don't know this new tool 3/ a correction about the environment variable:  set PATH=%M2_HOME%\bin;%PATH%  instead of  set PATH=%M2_HOME%\bin;$PATH 4/ more explanations about the build itself: as explained in a mail (http://marc.theaimsgroup.com/?l=turbine-maven-dev&amp;m=111990869209029&amp;w=2) I couldn't build successfuly maven 2 without installing the alpha 3 version in the %M2_HOME% directory!,Minor,null,null,Wed Jun 29 00:00:00 EDT 2005,[MNG-537] building maven 2.0 webpage is not clear,Closed,improvement
MNG-5399,Sat Dec 01 00:00:00 EST 2012,Fixed,The version is still locked on 2.0. I'd prefer to upgrade this to 2.3.2.,Major,Robert Scholte,rfscholte,Sat Dec 01 00:00:00 EST 2012,[MNG-5399] Upgrade version of maven-release-plugin in superpom to 2.3.2,Closed,improvement
MNG-5400,Sat Dec 01 00:00:00 EST 2012,Fixed, ,Minor,Robert Scholte,rfscholte,Sat Dec 01 00:00:00 EST 2012,[MNG-5400] Upgrade version of maven-dependency-plugin in superpom to 2.5,Closed,improvement
MNG-5402,Wed Dec 05 00:00:00 EST 2012,Fixed,After the switch to git  executing "mvn -v" we get something like: Apache Maven 3.1.0 (rNON-CANONICAL_2012-12-03_20-03_jvanzyl; 2012-12-04 05:03:32+0100) A better build number for git would be nice.,Minor,Anders Hammar,afloom,Tue Dec 04 00:00:00 EST 2012,[MNG-5402] Better build number for git,Closed,improvement
MNG-5452,Fri Jun 13 00:00:00 EDT 2014,Fixed,The maven.build.timestamp property currently uses the default local timezone. This can lead to problems when this is used in a build  as the output is dependent on the local timezone. It would be nice if it defaulted to UTC  or if it could be configured (maybe similar to maven.build.timestamp.format. See also Eclipse bug 367945 where this is also discussed.,Minor,Jason van Zyl,jvanzyl,Mon Mar 11 00:00:00 EDT 2013,[MNG-5452] ${maven.build.timestamp} should use UTC instead of local timezone (or be configurable),Closed,improvement
MNG-548,Thu Jul 28 00:00:00 EDT 2005,Fixed,I've made a patch to add the projects from the 'reactor' as discovered by DefaultMaven.collectProjects to MavenSession  the plexus Context and make it available to the PluginParameterExpressionEvaluator. This is needed for the maven-eclipse-plugin to be able to make references to other projects (and not to their installed artifacts). Now you can do the following:   /** @parameter expression="$ {reactorProjects} " @required @readonly    */   private List reactorProjects; // List of MavenProject objects  ordered for dependencies. I've had a discussion with trygve about this and he said there was no idea what to do with the reactor. I think for the mean time  this is an elegant enough solution.,Major,Brett Porter,brettporter,Fri Jul 01 00:00:00 EDT 2005,[MNG-548] Add the reactor projects to MavenSession,Closed,improvement
MNG-5480,Sat May 18 00:00:00 EDT 2013,Fixed,as seen in MSITE-672  people don't understand how urls are interpolated from parent when not defined,Major,Herv� Boutemy,hboutemy,Sat May 18 00:00:00 EDT 2013,[MNG-5480] document in POM descriptor reference how urls are interpolated from parent,Closed,improvement
MNG-5481,Mon May 20 00:00:00 EDT 2013,Fixed,As a followup to http://www.mail-archive.com/dev@maven.apache.org/msg96659.html here's a patch that configures  an additional enforcer rule to prevent using dependencies that were compiled with a compiler more recent than the maximum allowed. The proposed patch patches the maven-plugins/pom.xml but if you think this should go somewhere else  don't hesitate to ask. Cheers PS : not perfectly sure this is the right JIRA project  please just tell me if this should be relocated.,Minor,Herv� Boutemy,hboutemy,Mon May 20 00:00:00 EDT 2013,[MNG-5481] Prevent dependency with too recent bytecode from creeping in unnoticed,Closed,improvement
MNG-5482,Wed May 29 00:00:00 EDT 2013,Fixed,In Maven 3.1 Sonatype Aether was replaced by Eclipse Aether where the root package was changed org.sonatype.aether -&gt; org.eclipse.aether Due to this all plugins which are using directly aether have to be updated to support both packages. For now with old plugins the user receive such ugly error : [INFO] Dependency-reduced POM written at: /Users/arnaud/Code/eXo/platform-public-distributions/plf-tomcat-extensions-manager/dependency-reduced-pom.xml [WARNING] Error injecting: org.apache.maven.shared.dependency.graph.internal.Maven3DependencyGraphBuilder java.lang.NoClassDefFoundError: org/sonatype/aether/graph/Dependency at java.lang.Class.getDeclaredMethods0(Native Method) at java.lang.Class.privateGetDeclaredMethods(Class.java:2436) at java.lang.Class.getDeclaredMethods(Class.java:1793) at com.google.inject.spi.InjectionPoint.getInjectionPoints(InjectionPoint.java:674) at com.google.inject.spi.InjectionPoint.forInstanceMethodsAndFields(InjectionPoint.java:366) at com.google.inject.internal.ConstructorBindingImpl.getInternalDependencies(ConstructorBindingImpl.java:165) at com.google.inject.internal.InjectorImpl.getInternalDependencies(InjectorImpl.java:609) at com.google.inject.internal.InjectorImpl.cleanup(InjectorImpl.java:565) at com.google.inject.internal.InjectorImpl.initializeJitBinding(InjectorImpl.java:551) at com.google.inject.internal.InjectorImpl.createJustInTimeBinding(InjectorImpl.java:865) at com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:790) at com.google.inject.internal.InjectorImpl.getJustInTimeBinding(InjectorImpl.java:278) at com.google.inject.internal.InjectorImpl.getBindingOrThrow(InjectorImpl.java:210) at com.google.inject.internal.InjectorImpl.getProviderOrThrow(InjectorImpl.java:986) at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:1019) at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:982) at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1032) at org.eclipse.sisu.reflect.AbstractDeferredClass.get(AbstractDeferredClass.java:44) at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:86) at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:55) at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:70) at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:100) at org.eclipse.sisu.plexus.lifecycles.PlexusLifecycleManager.onProvision(PlexusLifecycleManager.java:134) at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:109) at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:55) at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:68) at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:47) at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46) at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1054) at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40) at com.google.inject.Scopes$1$1.get(Scopes.java:59) at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41) at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:997) at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1047) at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:993) at org.eclipse.sisu.locators.LazyBeanEntry.getValue(LazyBeanEntry.java:82) at org.eclipse.sisu.plexus.locators.LazyPlexusBean.getValue(LazyPlexusBean.java:52) at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:259) at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:239) at org.apache.maven.shared.dependency.graph.internal.DefaultDependencyGraphBuilder.buildDependencyGraph(DefaultDependencyGraphBuilder.java:60) at org.apache.maven.plugins.shade.mojo.ShadeMojo.updateExcludesInDeps(ShadeMojo.java:965) at org.apache.maven.plugins.shade.mojo.ShadeMojo.createDependencyReducedPom(ShadeMojo.java:938) at org.apache.maven.plugins.shade.mojo.ShadeMojo.execute(ShadeMojo.java:544) at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:105) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59) at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183) at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:318) at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:153) at org.apache.maven.cli.MavenCli.execute(MavenCli.java:555) at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214) at org.apache.maven.cli.MavenCli.main(MavenCli.java:158) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290) at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:414) at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:357) Caused by: java.lang.ClassNotFoundException: org.sonatype.aether.graph.Dependency at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50) at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:244) at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:230) ... 64 more A specific catch of this error may be done to display a more user friendly error,Major,Herv� Boutemy,hboutemy,Wed May 29 00:00:00 EDT 2013,[MNG-5482] Catch NoClassDefFoundError org/sonatype/aether,Closed,improvement
MNG-549,Thu Jul 28 00:00:00 EDT 2005,Fixed,&#91;depends on MNG-548&#93; This patch will make maven-eclipse-plugin check the projects in the reactor when it adds dependencies to the generated .classpath file. If one of the projects in the reactor produces that exact artifact (groupId/artifactId/version checking) a reference to the project itself is included  not a reference to M2_REPO/group/artifact/version/..... This was stated as a TODO in the plugin.,Major,Brett Porter,brettporter,Fri Jul 01 00:00:00 EDT 2005,[MNG-549] Make maven-eclipse-plugin reactor aware [patch included],Closed,improvement
MNG-550,Sun Jul 17 00:00:00 EDT 2005,Fixed,Replaces the general.fml from the maven-site module,Minor,Brett Porter,brettporter,Mon Jul 04 00:00:00 EDT 2005,[MNG-550] new General Information site page,Closed,improvement
MNG-5502,Mon Aug 19 00:00:00 EDT 2013,Fixed,Please update Aether to version 0.9.0.M3. Patch attached. After update Maven builds  all tests pass. Maven can rebuild itself and other projects.,Major,null,null,Mon Aug 12 00:00:00 EDT 2013,[MNG-5502] Update Aether to 0.9.0.M3,Closed,improvement
MNG-5504,Sat Mar 21 00:00:00 EDT 2015,Fixed,Similar to MINSTALL-48  don't create checksums when deploying a gpg signature file along with the artifact. Currently we end up with filename.asc  filename.asc.md5 and filename.asc.sha1 in the remote repository  and only filename.asc is necessary.,Minor,Olivier Lamy (*$^�%`�),olamy,Sat Feb 23 00:00:00 EST 2008,[MNG-5504] Don't add checksums on gpg signature files,Closed,improvement
MNG-551,Mon Jul 04 00:00:00 EDT 2005,Fixed,Attached patch adds a 'classpathPrefix' property to the ManifestConfiguration so you can specify a prefix for each classpath element. Example: ...    &lt;configuration&gt;     &lt;archive&gt;       &lt;manifest&gt;         &lt;addClasspath&gt;true&lt;/addClasspath&gt;         &lt;classpathPrefix&gt;lib&lt;/classpathPrefix&gt; ...... Now you can build an assembly where your dependent jars are not in the same directory as the executable jar. Use case: a program that is distributed as an self-executable jar (no startup scripts) in the program root can now have it's dependant jars in a lib/ directory  so there's no confusion to the user about which jar to start. It also eliminates the need for platform specific startup scripts.,Minor,null,null,Mon Jul 04 00:00:00 EDT 2005,[MNG-551] Allow adding classpath prefix to manifest Classpath [patch included],Closed,improvement
MNG-5530,Tue Jan 07 00:00:00 EST 2014,Fixed,It'd be nice to have custom Guice scope (http://code.google.com/p/google-guice/wiki/Scopes) for each mojo execution. This would allow mojo execution configuration and related objects to be injected in regular JSR330 components.,Major,igorfie,igorfie,Wed Oct 30 00:00:00 EDT 2013,[MNG-5530] mojo execution guice scope,Closed,improvement
MNG-5534,Tue Aug 26 00:00:00 EDT 2014,Fixed,Please update to Eclipse Sisu 0.1.0 and Sisu Guice 3.1.6. Sisu depends on Guice  but dependency scope changed from "compile" to "provided" in Sisu 0.1.0.  As a Sisu user  Maven needs to have runtime dependency on Guice.,Major,igorfie,igorfie,Wed Nov 13 00:00:00 EST 2013,[MNG-5534] Update to Sisu 0.3.0M1 and Guice 3.2.3,Closed,improvement
MNG-5549,Sun Dec 15 00:00:00 EST 2013,Fixed,As a build extension developer  I would like to be able to receive before/after callback events for project and mojo executions. For project-level events  I need MavenSession and ManveProject (obviously) as well as calculated project execution plain. For mojo executions I need MavenSession  ManveProject  MojoExecution and Mojo instances. The idea is to allow extensions observe and participate project build as a whole  not as set of independent mojo executions.,Major,igorfie,igorfie,Sat Dec 14 00:00:00 EST 2013,[MNG-5549] Provide before/after callbacks for project and mojo execution,Closed,improvement
MNG-5574,Sun Feb 09 00:00:00 EST 2014,Fixed,If I disable stdout on mvn and JAVA_HOME is not set in cron env  I'll never see the error message.,Minor,Michael Osipov,michael-o,Tue Feb 04 00:00:00 EST 2014,[MNG-5574] Write error/warning messages from mvn shell and batch scripts to stderr,Closed,improvement
MNG-5575,Wed Feb 05 00:00:00 EST 2014,Fixed,Current the different build strategies are conflated into Lifecycle starter and it's not very easy to create a new implementation of a strategy that builds the project in a different way and it just makes our code hard to read. Make a first attempt to isolate the strategies and discuss what can be done further. I think it would make sense to remove the weave mode which would greatly simplify the code and allow another set of simplifications.,Major,null,null,Wed Feb 05 00:00:00 EST 2014,[MNG-5575] Separate build strategies into their own implementations,Closed,improvement
MNG-5576,Thu Feb 06 00:00:00 EST 2014,Fixed,Currently warnings will be emitted when there are expressions in versions  a few exceptions should be deemed valid to make continuous delivery easier. The use case is to allow easy versioning of an entire multi-module build that can take a version from an external source like SCM. These are the types of exceptions that will be allowed: 1.0.0.${changelist} 1.0.0.${revision} 1.0.0.${sha1} When a whole build is versioned like this we can avoid churning the POMs in the SCM which makes it a lot easier to see the actual changes in the project. Not a complete solution for continuous delivery but is a step in the right direction and doesn't interfere with currently behavior as it is currently allowed  just warned against.,Major,null,null,Thu Feb 06 00:00:00 EST 2014,[MNG-5576] Allow continuous delivery friendly versions,Closed,improvement
MNG-5578,Sun Feb 09 00:00:00 EST 2014,Fixed,Right now the logic that controls how artifacts are looked up in the reactor is not pluggable which makes it very hard to try new implementations. This may require a custom MavenSession scope.,Major,Jason van Zyl,jvanzyl,Fri Feb 07 00:00:00 EST 2014,[MNG-5578] Make the ReactorReader pluggable in the core,Closed,improvement
MNG-5579,Mon Jan 30 00:00:00 EST 2017,Fixed,Currently   both output two different messages. Shell: Error: JAVA_HOME is not defined correctly.    We cannot execute $JAVACMD while batch says: Error: JAVA_HOME not found in your environment. Please set the JAVA_HOME variable in your environment to match the location of your Java installation. Same applies for M2_HOME. Additionally  testing for the Java command is handled different in both scripts. The batch script relies on JAVA_HOME while the shell script can ignore it. Both should require JAVA_HOME or warn about and use which java  respectively java in  PATH (for %%X in (java.exe) do (set JAVACMD=%%~$PATH:X)) on Windows. After that should proceed to checking M2_HOME. Any thoughts?,Minor,Michael Osipov,michael-o,Sat Feb 08 00:00:00 EST 2014,[MNG-5579] Unify error output/check logic from shell and batch scripts,Closed,improvement
MNG-5581,Sun Feb 09 00:00:00 EST 2014,Fixed,Default lifecycle mapping logic uses &lt;phase&gt; plugin execution configuration element to map to lifecycle instance. For custom lifecycles I would like to be able to provide custom logic. Specific usecase is to be able to define custom lifecycle which only runs specific phase from the default lifecycle and nothing else.,Major,igorfie,igorfie,Sun Feb 09 00:00:00 EST 2014,[MNG-5581] Provide a way to customize lifecycle mapping logic,Closed,improvement
MNG-5582,Mon Feb 10 00:00:00 EST 2014,Fixed,Currently we are throwing away the original set of projects when --projects is used to constrain the set of projects. They should be kept in the even they need to be used. One use case I have is reducing the number of projects being built  but still be able to access the contents of other projects in the reactor. In my case a type of workspace resolution from the command line where I build a set of projects but resolve resolve dependencies from the co-located projects instead of going to the local repository.,Major,null,null,Mon Feb 10 00:00:00 EST 2014,[MNG-5582] Continue to track all the projects in the reactor even if the set is constrained by --projects,Closed,improvement
MNG-5607,Sun Jan 29 00:00:00 EST 2017,Fixed,Currently the  mvn shell script and the mvn.bat using M2_HOME. This should be changed either to MAVEN_HOME or M3_HOME,Critical,Michael Osipov,michael-o,Sat Mar 22 00:00:00 EDT 2014,[MNG-5607] Don't use M2_HOME in mvn shell/command scripts anymore,Closed,improvement
MNG-5608,Sat Mar 29 00:00:00 EDT 2014,Fixed,documentation was improved in MNG-5590 but adding a warning will help users discover the documentation,Major,Robert Scholte,rfscholte,Sun Mar 23 00:00:00 EDT 2014,[MNG-5608] warn if file-based profile activation uses ${project.basedir} since only ${basedir} is supported,Closed,improvement
MNG-5610,Sun Mar 30 00:00:00 EDT 2014,Fixed,The README.txt file in the distro contains some text that should be updated/corrected: Windows 2000/XP (There are other quotes as well around different Windows versions.) We should probably just specify Windows. Please see the file called LICENSE.TXT The file is called LICENSE On Windows  Windows NT and above or Cygwin is required for the startup scripts. Very confusing. What are we saying? Also  the stated link http://maven.apache.org/release-notes.html should be verified if it's the correct one. There was a recent discussion on the dev list around the release notes not being up-to-date. Any changes should be synced with the http://maven.apache.org/download.html#Installation page as well.,Major,Anders Hammar,afloom,Tue Mar 25 00:00:00 EDT 2014,[MNG-5610] README.txt in distro should be updated,Closed,improvement
MNG-562,Fri Jul 08 00:00:00 EDT 2005,Fixed, ,Major,null,null,Fri Jul 08 00:00:00 EDT 2005,[MNG-562] Implement -Dmaven.test.skip=true,Closed,improvement
MNG-5625,Sat May 24 00:00:00 EDT 2014,Fixed,Sample output: [INFO] Using the builder org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder with a thread count of 1 This line is extremely long is not really readible. It could be cut down to (options)  1. If a single thread is used  omit completely 2. Cut down to simple class name: &#91;INFO&#93; Using the builder SingleThreadedBuilder with a thread count of 1 3. Cut down to a compressed class name like logback does: &#91;INFO&#93; Using the builder o.a.m.l.i.b.s.SingleThreadedBuilder with a thread count of 1 Line in question: link,Major,Michael Osipov,michael-o,Sun Apr 27 00:00:00 EDT 2014,[MNG-5625] Provide a terse information about the used thread builder,Closed,improvement
MNG-5630,Sat May 10 00:00:00 EDT 2014,Fixed,Currently we have [INFO]  [INFO] &gt;&gt;&gt; maven-javadoc-plugin:2.9.1:aggregate (report:aggregate) @ forked-lifecycle &gt;&gt;&gt; [INFO]  [INFO] &lt;&lt;&lt; maven-javadoc-plugin:2.9.1:aggregate (report:aggregate) @ forked-lifecycle &lt;&lt;&lt; it doesn't tell what is the forked goal or phase  which would be useful proposed new format in case of phase: [INFO]  [INFO] &gt;&gt;&gt; maven-javadoc-plugin:2.9.1:aggregate (report:aggregate) &gt; [lifecycle if any]generate-sources @ forked-lifecycle &gt;&gt;&gt; [INFO]  [INFO] &lt;&lt;&lt; maven-javadoc-plugin:2.9.1:aggregate (report:aggregate) &lt; [lifecycle if any]generate-sources @ forked-lifecycle &lt;&lt;&lt; and in case of goal: proposed new format in case of phase: [INFO]  [INFO] &gt;&gt;&gt; maven-javadoc-plugin:2.9.1:aggregate (report:aggregate) &gt; :goal @ forked-lifecycle &gt;&gt;&gt; [INFO]  [INFO] &lt;&lt;&lt; maven-javadoc-plugin:2.9.1:aggregate (report:aggregate) &lt; :goal @ forked-lifecycle &lt;&lt;&lt; ,Major,Herv� Boutemy,hboutemy,Sat May 10 00:00:00 EDT 2014,[MNG-5630] improve display of forked executions,Closed,improvement
MNG-5631,Mon May 12 00:00:00 EDT 2014,Fixed,Currently you get warnings like this: [INFO] --- maven-site-plugin:3.3:attach-descriptor (attach-descriptor) @ apache-maven --- [INFO] [INFO] --- maven-assembly-plugin:2.4:single (create-distro) @ apache-maven --- [INFO] Reading assembly descriptor: src/main/assembly/bin.xml [WARNING] The following patterns were never triggered in this artifact exclusion filter: o  'junit:junit' o  'commons-logging:commons-logging-api' [INFO] Building zip: /Users/kama/ws-git/apache/maven/apache-maven/target/apache-maven-3.2.2-SNAPSHOT-bin.zip [WARNING] The following patterns were never triggered in this artifact exclusion filter: o  'junit:junit' o  'commons-logging:commons-logging-api' ,Minor,Karl Heinz Marbaise,khmarbaise,Mon May 12 00:00:00 EDT 2014,[MNG-5631] WARNING about not triggered patterns in assembly descriptor,Closed,improvement
MNG-5649,Fri Oct 16 00:00:00 EDT 2015,Fixed,In several spots of Maven Core IAE is thrown where an argument is null. This should be turned into NullPointerException since JDK adheres to is and the description of this exception indicates that and Effective Java does that too. I possible fix version could next minor: 3.3. Is no one is opposed it could even be 3.2.2.,Major,Michael Osipov,michael-o,Sun Jun 15 00:00:00 EDT 2014,[MNG-5649] Use Commons Lang's Validate to intercept invalid input,Closed,improvement
MNG-566,Mon Jul 11 00:00:00 EDT 2005,Fixed,Please add the following entry to the Maven Plugin Matrix: Plugin: Maven XML Beans Plugin Maven 1.x: Yes Maven 2.x: No Author: David Jencks  Brett Porter and Kris Bravo Comments: Maven 2.x support for XML Beans 2.x in progress.,Minor,null,null,Sun Jul 10 00:00:00 EDT 2005,[MNG-566] Maven Plugin Matrix: XML Beans 2.0 support for m2,Closed,improvement
MNG-5672,Mon Aug 11 00:00:00 EDT 2014,Fixed,Maven Central can now be accessed via HTTPS. I think the default configuration should be switched to use that  rather than the current unsecured HTTP transport. http://central.sonatype.org/articles/2014/Aug/03/https-support-launching-now/ https://repo1.maven.org/maven2 or https://repo.maven.apache.org/maven2,Major,Brian Fox,brianf,Mon Aug 04 00:00:00 EDT 2014,[MNG-5672] Switch access to Maven Central to HTTPS,Closed,improvement
MNG-569,Sun Oct 02 00:00:00 EDT 2005,Fixed,Goal description is missing for some plugin  so plugin:xdoc generate documentation with "No description." For instance: http://maven.apache.org/maven2/plugins/maven-plugin-plugin/,Minor,null,null,Mon Jul 11 00:00:00 EDT 2005,[MNG-569] Missing goal description for some plugin,Closed,improvement
MNG-5712,Fri Oct 31 00:00:00 EDT 2014,Fixed,the documentation is pretty empty: http://maven.apache.org/ref/3.2.3/maven-core/toolchains.html at least pointing to m-toolchains-p http://maven.apache.org/plugins/maven-toolchains-plugin/ or jdk toolchain http://maven.apache.org/plugins/maven-toolchains-plugin/toolchains/jdk.html or mini-guide http://maven.apache.org/guides/mini/guide-using-toolchains.html,Major,Herv� Boutemy,hboutemy,Fri Oct 31 00:00:00 EDT 2014,[MNG-5712] Improve toolchains descriptor documentation,Closed,improvement
MNG-5713,Fri Oct 31 00:00:00 EDT 2014,Fixed, ,Major,Herv� Boutemy,hboutemy,Fri Oct 31 00:00:00 EDT 2014,[MNG-5713] Improve Toolchains API description,Closed,improvement
MNG-5717,Sun Nov 02 00:00:00 EDT 2014,Fixed,Just like settings.xml we need to add information to the toolchain model to be able to trace where certain elements are coming from.,Major,Robert Scholte,rfscholte,Sun Nov 02 00:00:00 EDT 2014,[MNG-5717] Enrich toolchain xml with merge information,Closed,improvement
MNG-5718,Mon Nov 03 00:00:00 EST 2014,Fixed,Officially the content of the &lt;provides&gt; element in a toolchain was free of structure  although we only know Properties-like structures. To be able to support the merging of toolchains ( MNG-5714 ) it is better to drop the free structure and change it to Properties. The jdk toolchain will be modified accordingly  being transparent for users. But any custom toolchain implementation will need to be updated.,Major,Robert Scholte,rfscholte,Mon Nov 03 00:00:00 EST 2014,[MNG-5718] Change 'provides' from Object to Properties in toolchains.xml,Closed,improvement
MNG-5724,Sat Dec 13 00:00:00 EST 2014,Fixed,Release Notes - Maven Wagon - Version 2.7 Bug WAGON-407 - wagon-maven-plugin ITs fail with missing class: org.apache.commons.io.IOUtils WAGON-418 - Changes from WAGON-388 broke the WebDAV Wagon WAGON-419 - HTTP wagons incorrectly encode blank space in URLs causing resources to be uploaded/looked up with a "+" sign New Feature WAGON-420 - Implements RFC 6585 (return code 429: too many requests) Release Notes - Maven Wagon - Version 2.8 Bug WAGON-416 - Lightweight HTTP Wagon doesn't set Proxy-Authorization header WAGON-422 - HTTP wagon AuthScope is not definable from settings ,Major,Olivier Lamy (*$^�%`�),olamy,Mon Nov 17 00:00:00 EST 2014,[MNG-5724] Upgrade to last Wagon 2.8,Closed,improvement
MNG-5734,Sun Feb 22 00:00:00 EST 2015,Fixed,If you define a list of modules within a multi module build like this:   &lt;modules&gt;    ...     &lt;module&gt;assembly&lt;/module&gt;     &lt;module&gt;shade&lt;/module&gt;     &lt;module&gt;&lt;/module&gt;   &lt;/modules&gt; The above will produce a WARNING which should be changed into failing the whole build cause it simply a wrong definition of a module in the list...,Minor,null,null,Thu Dec 11 00:00:00 EST 2014,[MNG-5734] Empty module entry should fail instead of just producing a WARNING,Closed,improvement
MNG-575,Wed Sep 21 00:00:00 EDT 2005,Fixed,&#91;actually maven-artifact-manager..?&#93; Since my umask = 077  m2 deploy stores files in the remote repository that aren't accessible by httpd. I need to provide file permissions in the repository configuration in the pom or in the settings.xml server definitions (perhaps the repo's  but permissions should go with authentication information I think). Wagon already supports filemode and group settings on it's Repositories. DefaultWagonManager doesn't provide a way to fill those settings. ,Major,Brett Porter,brettporter,Tue Jul 12 00:00:00 EDT 2005,[MNG-575] Add a way to configure permissions on deployed files,Closed,improvement
MNG-5752,Sun Jan 11 00:00:00 EST 2015,Fixed,Use of hardcoded system classloader as parent of plugin and project extensions realms makes it hard/impossible to run maven in "advanced" classloading environments  like eclipse maven development tools and integration test harnesses  where system classloader may contain unknown/undesired classes. See https://github.com/takari/takari-plugin-testing-project/blob/master/classloading.md for more detailed explanation of the problem.,Major,igorfie,igorfie,Sun Jan 11 00:00:00 EST 2015,[MNG-5752] avoid hardcoded system classloader references,Closed,improvement
MNG-5754,Sat Jan 17 00:00:00 EST 2015,Fixed,Right now the reading of toolchains is triggered by the maven-toolchains-plugin. This is not efficient  since the same files will be read over and over again in a multimodule project. This might be even be more tricky when building with multiple threads. We probably can assume that if someone has specified a toolchains.xml  he also wants to use it. I don't see any reason why to wait until the first the maven-toolchains-plugin is called.,Major,Robert Scholte,rfscholte,Fri Jan 16 00:00:00 EST 2015,[MNG-5754] Toolchains should be read during initialization,Closed,improvement
MNG-5759,Fri Apr 03 00:00:00 EDT 2015,Fixed,I'm running a run configuration in Eclipse/STS called "Mule Application with Maven" from Mulesoft.  It does not appear to use the m2eclipse plugin or anything like it to pass in a JAVA_HOME environment.  Thus  the mvn shell script in $ {M2} /mvn is left to try and determine the JAVA_HOME environment.   In my case  my Mac has the Apple Java 6 installs  but also has the Oracle Java 7 installs.  The java preferences has 1.7 specified and the /usr/libexec/java_home variable returns "/Library/Java/JavaVirtualMachines/jdk1.7.0_72.jdk/Contents/Home" The mvn script first checks to see if /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK is a symlin/link at ~ line 61.  It is  so it uses that to set JAVA_HOME.  However  since every setting that I know to set has specified java 7  it's incorrectly setting JAVA_HOME to a 1.6 version  which is where the /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK link is pointing too. since /usr/libexec/java_home points to the correct environment  I propose that you move the if block ~ line 82 to above the first if block ~ line 61.  Here's a diff against the current trunk: index 1ed3024..43b8304 100755 &#8212; a/apache-maven/src/bin/mvn +++ b/apache-maven/src/bin/mvn @@ -58 6 +58 13 @@ case "`uname`" in Look for the Apple JDKs first to preserve the existing behaviour  and then look for the new JDKs provided by Oracle. +           if [ -z "$JAVA_HOME" ] &amp;&amp; [ -x "/usr/libexec/java_home" ]; then +             # +             # Apple JDKs +             # +             export JAVA_HOME=$(/usr/libexec/java_home) +           fi +             if [ -z "$JAVA_HOME" ] &amp;&amp; [ -L /System/Library/Frameworks/JavaVM.framework/Versio               # Apple JDKs @@ -78 13 +85 6 @@ case "`uname`" in               #               export JAVA_HOME=/Library/Java/JavaVirtualMachines/CurrentJDK/Contents/Home             fi            - if [ -z "$JAVA_HOME" ] &amp;&amp; [ -x "/usr/libexec/java_home" ]; then # # Apple JDKs # export JAVA_HOME=`/usr/libexec/java_home` fi             ;;  esac there's another bug in the 3.2.5 release which appears to have been fixed in the current trunk:  "export JAVA_HOME=/usr/libexec/java_home" was changed to "export JAVA_HOME=`/usr/libexec/java_home`" (with the back ticks).  I prefer $() over ``  but it's irrelevant. I feel that /usr/libexec/java_home is the preferred method for finding the correct JAVA_HOME environment.  Perhaps that is not correct.,Minor,null,null,Thu Jan 29 00:00:00 EST 2015,[MNG-5759] Change order of IF statements to determine JAVA_HOME,Closed,improvement
MNG-576,Mon Jul 18 00:00:00 EDT 2005,Fixed,The following patches integrates the ear plugin into a m2 lifecycle so that m2 package / install / deploy / etc goals could be used with an 'ear' packaging. First patch is to be applied on maven-core to register ear lifecycle Second patch is to be applied on maven-plugins/maven-ear-plugin to  add support of generateApplicationXml flag which states whether application.xml should be generated or not (default is true). This relates to MNG-563 where the original discussion took place.,Blocker,John Casey,jdcasey,Tue Jul 12 00:00:00 EDT 2005,[MNG-576] Support of EAR lifecycle,Closed,improvement
MNG-5767,Fri Feb 20 00:00:00 EST 2015,Fixed,Some of the projects builds I work on require special jvm options  like minimal -Xmx value  and specific command line parameters  like --builder. Currently  I have to manually configure these every time run the build  which is rather annoying and error prone. This manual configuration also makes it harder for new or external developers to build the projects and many simply give up trying after "mvn package" does not work from the first try. This enhancement request proposes to introduce two new optional configuration files .mvn/jvm.config and .mvn/maven.config  located at the base directory of project source tree. If present  these files will provide default jvm and maven options. Because these files are part of the project source tree  they will be present in all project checkouts and will be automatically used every time the project is build.,Major,igorfie,igorfie,Thu Feb 19 00:00:00 EST 2015,[MNG-5767] project-specific default jvm options and command line parameters,Closed,improvement
MNG-5768,Fri Feb 20 00:00:00 EST 2015,Fixed,When invoking plugin goal from command line  it is possible to configure the goal using special 'default-cli' pom.xml execution id. This has two obvious limitations. First  it is not possible to have more than one configuration for command line use. Second  it is not possible to share configuration between direct plugin invocation and execution bound to lifecycle phase. To address this  I propose to extend direct plugin invocation syntax to allow optional @execution-id parameter  e.g.  org.apache.maven.plugins:maven-remote-resources-plugin:1.0:process@executionId.,Major,igorfie,igorfie,Thu Feb 19 00:00:00 EST 2015,[MNG-5768] specify execution-id for direct plugin goal invocation from command line,Closed,improvement
MNG-5771,Fri Feb 20 00:00:00 EST 2015,Fixed,As of version 3.2.5 maven provides two mechanisms to contribute additional components to maven core runtime. It is possible to add component jars to $M2_HOME/lib/ext directory. It is also possible to specify component jars using -Dmaven.ext.class.path command line parameter. Neither of the mechanisms is user friendly. In both cases  the user is expected to manually locate and download all required jar file. In both cases  this has to be done on all systems where the extensions are needed. In both cases  all extra jars are loaded into single classloader so all extensions must agree of the same set of dependencies. This jira is to track changes needed to make it possible to configure core extensions in terms of groupId/artifactId/version and share set of required extensions across multiple systems. More specifically   introduce new ${maven.projectBasedir}/.mvn/extensions.xml descriptor to specify list of extensions. Initially  the descriptor will only allow specification of extension groupId/artifactId/version  but can be extended to support dependency includes/excludes mechanism and configuration parameters later &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;extensions&gt;   &lt;extension&gt;     &lt;groupId&gt;...&lt;/groupId&gt;     &lt;artifactId&gt;...&lt;/artifactId&gt;     &lt;version&gt;...&lt;/version&gt;   &lt;/extension&gt;   &lt;extension&gt;...&lt;/extension&gt;   ... &lt;/extensions&gt; change maven to read and load core extensions in separate class realms as part of plexus container setup. provide mechanism for extensions to declare exported artifacts and packages using META-INF/maven/extension.xml descriptor. ,Major,igorfie,igorfie,Fri Feb 20 00:00:00 EST 2015,[MNG-5771] improved user-configurable core extensions mechanism,Closed,improvement
MNG-5772,Fri Feb 20 00:00:00 EST 2015,Fixed,just to keep dependencies current sisu 0.3.0.M1 -&gt; 0.3.0: https://wiki.eclipse.org/Sisu/Changelog (doesn't precise changelog from M1 to release...) guice 3.2.3 to 3.2.5: https://github.com/sonatype/sisu-guice/releases,Major,igorfie,igorfie,Fri Feb 20 00:00:00 EST 2015,[MNG-5772] upgrade to sisu 0.3.0 and sisu guice 3.2.5,Closed,improvement
MNG-5794,Mon Apr 06 00:00:00 EDT 2015,Fixed,I did copy the HTTPS proxy entry and modified it into a HTTP entry in the settings.xml. But I forgot to change the id of the second proxy entry. It took me a while to figure out why it isn't working... Untested patch  but I hope you get the idea! with kind regards thomas diff --git a/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java b/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java --- a/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java +++ b/maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequest.java @@ -162 7 +162 10 @@      private boolean useLegacyLocalRepositoryManager = false;        private Map&lt;String  Object&gt; data; -     + +    @Inject +    private Logger logger; +      public DefaultMavenExecutionRequest()      {      } @@ -788 7 +791 14 @@ public MavenExecutionRequest addProxy( Proxy proxy )          {              if ( p.getId() != null &amp;&amp; p.getId().equals( proxy.getId() ) )              { -                return this; +                if( !( p.getProtocol().equals( proxy.getProtocol() ) ) ) +                { +                    logger.warn( "Duplicate proxy id found! But protocol differs!\n" + +                                 "Please check your settings.xml file!" ); +                } else +                { +                    return this; +                }              }          } ,Major,Robert Scholte,rfscholte,Sat Mar 28 00:00:00 EDT 2015,[MNG-5794] Warn about Proxies with duplicate id  but different protocols,Closed,improvement
MNG-5805,Mon Apr 27 00:00:00 EDT 2015,Fixed,Currently  DefaultLifecycleMapping does not support mapping phases to goals with a custom configuration (see maven-core/src/main/resources/META-INF/plexus/default-bindings.xml). It is impossible to bind  say  an assembly plugin to 'package' phase within a custom packaging type  since assembly plugin requires a meaningful configuration to be set. At my job  we have a number of poms  each serving a purpose of defining a lifecycle for a particular type of project (there's one for jar  a couple for wars and several more for other types of deployable artifacts). Now that I somewhat understand maven's lifecycle  It seems natural to convert such poms to custom packaging types  leaving only a single parent with global config and pluginManagement. But it is currently impossible  since we are using mostly standard plugins (only occasional dedicated ones) to configure projects' lifecycles. I did some digging around and put together a relatively straightforward change to maven-core: https://github.com/apache/maven/compare/master...atanasenko:mng-5805-lifecycle-mojo-config?w=1 It both introduces support for specifying configuration and dependencies for mojo executions: &lt;install&gt;   &lt;mojos&gt;     &lt;mojo&gt;       &lt;goal&gt;org.apache.maven.plugins:maven-install-plugin:2.4:install&lt;/goal&gt;       &lt;configuration&gt;...&lt;/configuration&gt;       &lt;dependencies&gt;...&lt;/dependencies&gt;     &lt;/mojo&gt;     &lt;mojo&gt;       ...     &lt;/mojo&gt;   &lt;/mojos&gt; &lt;/install&gt; as well as retains support for existing mapping syntax: &lt;install&gt;org.apache.maven.plugins:maven-install-plugin:2.4:install  ...&lt;/install&gt; I will put together some its (as well as make sure that existing are running ok) and create a pull request for both. Also  there are a couple of changes that break API in org/apache/maven/lifecycle/Lifecycle.java and org/apache/maven/lifecycle/mapping/Lifecycle.java. How critical is it to mantain compatibility in those two? ITS: https://github.com/apache/maven-integration-testing/compare/master...atanasenko:mng-5805-lifecycle-mojo-config?w=1,Minor,Jason van Zyl,jvanzyl,Sat Apr 18 00:00:00 EDT 2015,[MNG-5805] Custom packaging types: configuring DefaultLifecycleMapping mojo executions,Closed,improvement
MNG-5808,Wed Apr 22 00:00:00 EDT 2015,Fixed, ,Major,Jason van Zyl,jvanzyl,Tue Apr 21 00:00:00 EDT 2015,[MNG-5808] Upgrade Maven to use Wagon 2.9,Closed,improvement
MNG-581,Fri Jul 22 00:00:00 EDT 2005,Fixed,An upcoming plugin called during generate-sources produces class files in the classes output directory and sources in the generated-sources directory. While the plugin should be responsible for adding generated-sources to the compileSourceRoot  it may be worthwhile to have the target classes directory in the classpath.,Minor,null,null,Tue Jul 12 00:00:00 EDT 2005,[MNG-581] Add target/classes director to compiler:compile classpath,Closed,improvement
MNG-583,Sat Oct 08 00:00:00 EDT 2005,Fixed,Please add something equivalent to MavenProject.addResourceRoot(String) and MavenProject.addTestResourceRoot(String) to allow plugins to dynamically include generated resources that can be filtered in the same way as version controlled resources in src/main/resources or src/test/resources. This functionality is equivalent to MavenProject.addCompileSourceRoot(String) and MavenProject.addTestCompileSourceRoot(String).,Major,null,null,Wed Jul 13 00:00:00 EDT 2005,[MNG-583] Allow plugins to add dynamic resource roots and test resource roots,Closed,improvement
MNG-5844,Sat Jun 20 00:00:00 EDT 2015,Fixed,The problem here is that if an exception is thrown during the read process the method will exit without closing the stream and hence without releasing the file system resources  it may run out of resources before it does run.,Minor,Kristian Rosenvold,krosenvold,Fri Jun 19 00:00:00 EDT 2015,[MNG-5844] Close IO Streams in finally or try-with-resource statement,Closed,improvement
MNG-5871,Mon Aug 17 00:00:00 EDT 2015,Fixed,currently  default urls calculated for child from parent values are often discussed but their implementation is no easy to find: it's a mix between DefaultInheritanceAssembler.getChildPathAdjustment(  which calculates path adjustment MavenModelBuilder.appendPath  that calculates the child url: in general  parent url is used  but if childpathadjustment is set  this is the algorithm to extrapolate child from parent IMHO  the test on childpathadjustement is a hack; in fact  we should use method overriding: default method just returns arent  but DefaultInheritanceAssembler.InheritanceModelMerger should override it with the extrapolation algorithm this would make the code a lot more clear and help for future enhancements,Major,Herv� Boutemy,hboutemy,Thu Aug 13 00:00:00 EDT 2015,[MNG-5871] make url inheritance algorithm more visible,Closed,improvement
MNG-5888,Mon Sep 14 00:00:00 EDT 2015,Fixed,Upgrade the version of the use modello version from 1.8.1 to 1.8.3,Minor,Karl Heinz Marbaise,khmarbaise,Mon Sep 14 00:00:00 EDT 2015,[MNG-5888] Update used modello version from 1.8.1 to 1.8.3,Closed,improvement
MNG-5889,Tue Feb 14 00:00:00 EST 2017,Fixed,The .mvn directory is not picked up when using the --file switch to build a project from outside of the multi-module root. Example: the module root is /foo/bar .mvn is located at /foo/bar/.mvn current directory is /foo Maven is invoked with mvn --file bar/module/pom.xml I would expect the .mvn directory detection to start at the directory of the POM selected by --file and then go through the parent directories. ,Major,Tibor Digana,tibor17,Tue Sep 15 00:00:00 EDT 2015,[MNG-5889] .mvn directory should be picked when using --file,Closed,improvement
MNG-5892,Sat Sep 26 00:00:00 EDT 2015,Fixed,Currently we have a default life cycle binding for par. I think it does not make sense  cause we don't have a maven-par-plugin in contradiction that this plugin is mentioned in the life cycle binding. If you like to use a par module this can be handled with the maven-ear-plugin where it belong.,Minor,Karl Heinz Marbaise,khmarbaise,Sat Sep 26 00:00:00 EDT 2015,[MNG-5892] Removing par lifecycle from default life cycle bindings,Closed,improvement
MNG-5893,Sat Sep 26 00:00:00 EDT 2015,Fixed,In the default-binding.xml the maven-resources-plugin is given with version 2.4.3 for the ear binding instead of 2.6 as in the other bindings. ,Minor,Karl Heinz Marbaise,khmarbaise,Sat Sep 26 00:00:00 EDT 2015,[MNG-5893] Make used plugin version for maven-resources-plugin in default-bindings.xml consistent,Closed,improvement
MNG-5894,Sat Sep 26 00:00:00 EDT 2015,Fixed,We have currently a binding for ejb3 in the default-binding.xml which contains a reference to a maven-ejb3-plugin which does not exist. Furthermore if you like to make an ejb3 you can use the maven-ejb-plugin with an appropriate configuration.,Minor,Karl Heinz Marbaise,khmarbaise,Sat Sep 26 00:00:00 EDT 2015,[MNG-5894] Removed binding for maven-ejb3-plugin from default binding,Closed,improvement
MNG-5904,Tue Jan 24 00:00:00 EST 2017,Fixed,We should remove the whole Ant build cause we have a large number of Maven versions which could be used to start building Maven itself. So i don't see any usefulness in it anymore.,Minor,Karl Heinz Marbaise,khmarbaise,Wed Oct 07 00:00:00 EDT 2015,[MNG-5904] Remove the whole Ant build,Closed,improvement
MNG-5905,Wed Oct 07 00:00:00 EDT 2015,Fixed,The maven core can not be built with Maven 2.2.1 as the prerequisites stated. We have plugins in the maven-core-build which need Maven 3.0.4 at minimum. This should be forced by using Maven Enforcer Rule.,Blocker,Karl Heinz Marbaise,khmarbaise,Wed Oct 07 00:00:00 EDT 2015,[MNG-5905] Maven build does not work with Maven 2.2.1,Closed,improvement
MNG-5906,Sat Oct 10 00:00:00 EDT 2015,Fixed,Throughout UTC is used. We shall use the canonical name Etc/UTC.,Trivial,Michael Osipov,michael-o,Wed Oct 07 00:00:00 EDT 2015,[MNG-5906] Use canonical name for UTC timezone,Closed,improvement
MNG-591,Sun Jun 19 00:00:00 EDT 2011,Fixed,I'm trying to do an integration test that depends on a war/ear to be deployed. What i'm missing is: integration-test-compile stage and/or: a way to specify an integrationTestSourceDirectory or multiple testSourceDirectories in the pom I can't put the test sources in src/test/java because then surefire will run them in the test stage  when there's no artifact to deploy yet.  &#91;Btw  I&#39;m doing this while creating a cactus plugin  for the moment using cargo in the TestSuite itself to deploy.&#93; The idea is that the integration test sources go in src/itest/*; that there be a integration-test-compile integration-test-package and/or integration-test-appdeploy&#91;or something&#93; and that surefire is also bound to integration-test. Maybe something can be done using the src/test/project/some-project/.... approach seen in maven-javadoc-plugin  maven-site-plugin and maven-eclipse-plugin (i'd like to see some of that standardized anyway to allow plugin testing generally - which can also be seen as integration testing). Thoughts  comments  approaches?,Blocker,Benson Margulies,bmargulies,Thu Jul 14 00:00:00 EDT 2005,[MNG-591] Integration tests lifecycle,Closed,improvement
MNG-5911,Wed Oct 14 00:00:00 EDT 2015,Fixed,Upgrade maven-parent to version 27,Minor,Karl Heinz Marbaise,khmarbaise,Wed Oct 14 00:00:00 EDT 2015,[MNG-5911] Upgrade maven-parent to version 27,Closed,improvement
MNG-5915,Sat Oct 24 00:00:00 EDT 2015,Fixed, ,Minor,Karl Heinz Marbaise,khmarbaise,Sat Oct 24 00:00:00 EDT 2015,[MNG-5915] Upgrade Wagon version to 2.10,Closed,improvement
MNG-5921,Sat Oct 31 00:00:00 EDT 2015,Fixed, ,Major,Kristian Rosenvold,krosenvold,Sat Oct 31 00:00:00 EDT 2015,[MNG-5921] Upgraded to plexus-component-* 1.6 that uses asm 5.x,Closed,improvement
MNG-5922,Sat Oct 31 00:00:00 EDT 2015,Fixed, ,Minor,Robert Scholte,rfscholte,Sat Oct 31 00:00:00 EDT 2015,[MNG-5922] Upgrade plexus-utils to 3.0.22 to support combine.id as configuration attribute for Map merging,Closed,improvement
MNG-5923,Sat Oct 31 00:00:00 EDT 2015,Fixed,Switch to Guice 4.0 https://github.com/apache/maven/pull/45 (Pull Request),Minor,Jason van Zyl,jvanzyl,Sat Oct 31 00:00:00 EDT 2015,[MNG-5923] Switch to official Guice 4.0,Closed,improvement
MNG-5924,Sat Oct 31 00:00:00 EDT 2015,Fixed,Upgrade to Eclipse/Sisu 0.3.2,Minor,Jason van Zyl,jvanzyl,Sat Oct 31 00:00:00 EDT 2015,[MNG-5924] Upgrade to Eclipse/Sisu 0.3.2,Closed,improvement
MNG-5925,Sat Oct 31 00:00:00 EDT 2015,Fixed,Update animal-sniffer-maven-plugin to 1.14. MANIMALSNIFFER-49 required when building with JDK9,Minor,Michael Osipov,michael-o,Sat Oct 31 00:00:00 EDT 2015,[MNG-5925] Update animal-sniffer-maven-plugin to 1.14. MANIMALSNIFFER-49 required when building with JDK9,Closed,improvement
MNG-5931,Wed Jan 25 00:00:00 EST 2017,Fixed,We need to fix the docs on the following page http://maven.apache.org/ref/3.3.9/maven-core/default-bindings.html cause we have removed maven-ejb-plugin and par lifecycle...,Minor,Karl Heinz Marbaise,khmarbaise,Wed Nov 18 00:00:00 EST 2015,[MNG-5931] Fixing documentation ,Closed,improvement
MNG-5934,Sat Feb 11 00:00:00 EST 2017,Fixed,The code linting tool PMD identified numerous places where Maven's string handling is inefficient. I've prepared a set of patches that should help speed things up. The command I used was `pmd -d . -R java-strings`,Minor,Michael Osipov,michael-o,Fri Nov 20 00:00:00 EST 2015,[MNG-5934] String handling issues identified by PMD,Closed,improvement
MNG-5946,Wed Jan 25 00:00:00 EST 2017,Fixed,Fixed the README.txt file which is packaged into the apache-maven binary artifacts.,Minor,Karl Heinz Marbaise,khmarbaise,Fri Dec 11 00:00:00 EST 2015,[MNG-5946] Fix links etc. in README.txt which is part of the delivery,Closed,improvement
MNG-595,Fri Jul 22 00:00:00 EDT 2005,Fixed,for maven-compiler-plugin supports this now:   &lt;build&gt;       &lt;plugins&gt;          &lt;plugin&gt;             &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;             &lt;configuration&gt;                &lt;encoding&gt;utf8&lt;/encoding&gt;             &lt;/configuration&gt;          &lt;/plugin&gt;       &lt;/plugins&gt;    &lt;/build&gt;,Major,Brett Porter,brettporter,Fri Jul 15 00:00:00 EDT 2005,[MNG-595] patch for adding -encoding X to the javac,Closed,improvement
MNG-596,Thu Jul 21 00:00:00 EDT 2005,Fixed,pom for maven2 don't contain any reference to the xsd at http://maven.apache.org/maven-v4_0_0.xsd Adding the xsd reference to poms will enforce validation in IDEs  and add content assist in xsd-aware xml editors. The attached patch will add the following declaration to the root &lt;project&gt; element for all the poms in https://svn.apache.org/repos/asf/maven/components/trunk : &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt; (pom.xml files generated by the archetipe plugin will be affected as well),Trivial,null,null,Sat Jul 16 00:00:00 EDT 2005,[MNG-596] Add xml schema to m2 poms,Closed,improvement
MNG-5968,Sun Feb 12 00:00:00 EST 2017,Fixed,upgrade some plugins in Maven core build (pom.xml)  just because newest are expected to be better (no known bug): groupId artifactId previous version target version org.codehaus.mojo buildnumber-maven-plugincol 1.2 1.4 org.codehaus.mojo animal-sniffer-maven-plugin 1.14 1.15 org.apache.maven.plugins maven-doap-plugin 1.1 1.2 ,Minor,Michael Osipov,michael-o,Mon Jan 25 00:00:00 EST 2016,[MNG-5968] plugin version updates in Maven core build,Closed,improvement
MNG-5975,Sun Jan 22 00:00:00 EST 2017,Fixed,The current code manually formats the timestamp because Commons Lang 3 was not in the dependencies list. Now there is  drop custom code and use builtin features.,Major,Michael Osipov,michael-o,Fri Feb 12 00:00:00 EST 2016,[MNG-5975] Use Java 7's SimpleDateFormat in CLIReportingUtils#formatTimestamp,Closed,improvement
MNG-5977,Mon Jan 23 00:00:00 EST 2017,Fixed,The current output of Downloading/Downladed/Uploading/Uploaded transfer notification has some flaws: 1. It does not scale numbers between 1 and 1000 with appropriate units 2. It should use correct size (kB  MB  GB and time units (s) but doesn't. (see https://en.wikipedia.org/wiki/Binary_prefix and https://en.wikipedia.org/wiki/Metric_prefix) 3. When Aether downloads in parallel (which applies for non-POM files) the progress interleaves due to race conditions to System.out and you do not know to which resource a progress belongs to. Let's use an improved version of MPIR DependenciesRenderer's FileDecimalFormat for it. concrete examples: before 191/191 KB   27/48 KB   48/119 KB   80/87 KB   13/13 KB    after: Progress (4): 500/800 B | 40/45 kB | 193 kB/315 kB | 1.3/9.0 MB | 12/30 MB if total size is unavailable or the file has already been downloaded but not removed from the list  the output will be: Progress (4): 800 B | 40/45 kB | 193 kB | 9.0 MB | 12 MB or in debug mode: Progress (5): xml-apis-1.3.04.jar (&lt;progress&gt;) | maven-shared-utils-0.6.jar (&lt;progress&gt;) | xercesImpl-2.9.1.jar (&lt;progress&gt;) | commons-digester-1.6.jar (&lt;progress&gt;) | maven-reporting-impl-2.3.jar (&lt;progress&gt;) If the scale is between 1 and 10  one decimal place will be printed out. If it is between 10 and 1000+  it will be an integer.,Major,Michael Osipov,michael-o,Sat Feb 13 00:00:00 EST 2016,[MNG-5977] Improve output readability of our MavenTransferListener implementations,Closed,improvement
MNG-5993,Sun Jan 29 00:00:00 EST 2017,Fixed,Executing any goals/phases on this pom.xml leads to a weird error &lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;   &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;   &lt;groupId&gt;com.example.group&lt;/groupId&gt;   &lt;artifactId&gt;testinvalidpom&lt;/artifactId&gt;   &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;      &lt;build&gt;     &lt;pluginManagement&gt;         &lt;plugins&gt;             &lt;plugin&gt;                 &lt;groupId&gt;&lt;/groupId&gt;             &lt;/plugin&gt;         &lt;/plugins&gt;     &lt;/pluginManagement&gt;   &lt;/build&gt; &lt;/project&gt; The error being emitted is  [ERROR] Error resolving version for plugin ':null' from the repositories [local (&lt;some path&gt;)  nexus (&lt;some remote repo url&gt;)]: Plugin not found in any plugin repository -&gt; [Help 1] Even with debug you only see something like this  [ERROR] Error resolving version for plugin ':null' from the repositories [...]: Plugin not found in any plugin repository -&gt; [Help 1] org.apache.maven.plugin.version.PluginVersionResolutionException: Error resolving version for plugin ':null' from the repositories [local (/Users/konradwindszus/.m2/repository)  nexus (https://repo.int.netcentric.biz/nexus/content/groups/public/)]: Plugin not found in any plugin repository at org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver.selectVersion(DefaultPluginVersionResolver.java:236) at org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver.resolveFromRepository(DefaultPluginVersionResolver.java:148) at org.apache.maven.plugin.version.internal.DefaultPluginVersionResolver.resolve(DefaultPluginVersionResolver.java:96) at org.apache.maven.lifecycle.internal.LifecyclePluginResolver.resolveMissingPluginVersions(LifecyclePluginResolver.java:89) at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateExecutionPlan(DefaultLifecycleExecutionPlanCalculator.java:116) at org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator.calculateExecutionPlan(DefaultLifecycleExecutionPlanCalculator.java:135) at org.apache.maven.lifecycle.internal.builder.BuilderCommon.resolveBuildPlan(BuilderCommon.java:97) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:109) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:347) at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:154) at org.apache.maven.cli.MavenCli.execute(MavenCli.java:582) at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214) at org.apache.maven.cli.MavenCli.main(MavenCli.java:158) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) In this example the error is easy to spot  but for bigger pom.xmls with more complex hierarchies it is very hard. Some basic validation should take place that on the merged pom.xml all of groupId  artifactId and version is available and if that is not the case  the line number of the pom.xml together with the filename should be given out  where the according information is missing. A similar error is emitted in case the groupId element is missing as well or there is an empty artifactId.,Major,Karl Heinz Marbaise,khmarbaise,Fri Apr 01 00:00:00 EDT 2016,[MNG-5993] Confusing error message in case of missing/empty artifactId and version in pluginManagement,Closed,improvement
MNG-6001,Mon Jan 30 00:00:00 EST 2017,Fixed,Setting HOME=%HOMEDRIVE%%HOMEPATH% is a relic from Windows NT times. The preferred way is to use %USERPROFILE% which is already done in Java 8 internally. Let's use it to load the mavenrc scripts. Some references: http://stackoverflow.com/a/36392591/696632 http://stackoverflow.com/a/21599376/696632 http://bugs.java.com/view_bug.do?bug_id=4787931 ,Major,Michael Osipov,michael-o,Fri Apr 15 00:00:00 EDT 2016,[MNG-6001] Replace %HOME% with %USERPROFILE% in mvn.cmd,Closed,improvement
MNG-6003,Mon Jan 30 00:00:00 EST 2017,Fixed,Our installation documentation several times requires that JAVA_HOME is set and points to a valid JDK. Though  tens of lines in mvn and mvn.cmd perform some magic to discover it when it is not set. This completely contradicts our requirement that JAVA_HOME must be set. We can drastically reduce this code by checking if JAVA_HOME is set and use it  if not perform which java and use that to run Maven. Not adhering to our requirements is deemed to undefined behavior. A developer must be able to set this simple env var properly. In most cases on Unix/Linux OpenJDK is installed anyway which means that which java points to a JDK anyway. For instance  the JAVA_HOME discovery on FreeBSD competely fails and sets it to /usr/local because /usr/local/bin/java is actually a wrapper script.,Major,Michael Osipov,michael-o,Fri Apr 15 00:00:00 EDT 2016,[MNG-6003] Drastically reduce JAVA_HOME discovery code,Closed,improvement
MNG-6014,Mon Jan 30 00:00:00 EST 2017,Fixed,Remove the ejb3 ArtifactHandler cause we don't have any bounded life cycle since Maven 3.3.9.,Minor,Karl Heinz Marbaise,khmarbaise,Mon May 02 00:00:00 EDT 2016,[MNG-6014] Removing ArtifactHandler for ejb3,Closed,improvement
MNG-6017,Wed Jan 25 00:00:00 EST 2017,Fixed,Remove the ArtifactHandler definition for par lifecycle which has been removed in Maven 3.3.9,Minor,Karl Heinz Marbaise,khmarbaise,Thu May 05 00:00:00 EDT 2016,[MNG-6017] Removing ArtifactHandler for par LifeCycle,Closed,improvement
MNG-6025,Sat May 06 00:00:00 EDT 2017,Fixed,Every mojo execution  if it specifies dependency resolution other than 'none'  will cause a resolution to be performed. There is a guard in MojoExecutor's DependencyContext which guards against performing this resolution multiple times by looking at the changes to dependencyArtifacts list. However  during a build in an incremental/interactive environment  like eclipse m2e or maven console  those mojos might be executed at an arbitrary time and will not benefit from that DependencyContext check. I propose having a ProjectArtifactsCache (very similar to PluginArtifactsCache) that will cache artifact set as returned by LifecycleDependencyResolver#getDependencies(). While it does not improve cli builds  incremental/interactive builds will receive a huge performance boost between pom changes. I've been able to get build of a project with a lot of dependencies (jenkins plugin) and a number of (fully incremental) mojo executions from 7 seconds to around 1.5 on a single java file change in eclipse m2e after introducing this cache. I will provide a patch shortly.,Minor,Jason van Zyl,jvanzyl,Thu May 19 00:00:00 EDT 2016,[MNG-6025] Add a ProjectArtifactsCache similar to PluginArtifactsCache,Closed,improvement
MNG-603,Wed Jul 20 00:00:00 EDT 2005,Fixed,added a sablecc plugin which can be used like this:         &lt;plugin&gt;             &lt;artifactId&gt;maven-sablecc-plugin&lt;/artifactId&gt;             &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;             &lt;configuration&gt;                &lt;grammars&gt;expressions.grammar  aicc.grammar&lt;/grammars&gt;             &lt;/configuration&gt;             &lt;executions&gt;                &lt;execution&gt;                   &lt;phase&gt;generate-sources&lt;/phase&gt;                   &lt;goals&gt;                      &lt;goal&gt;generate&lt;/goal&gt;                   &lt;/goals&gt;                &lt;/execution&gt;             &lt;/executions&gt;          &lt;/plugin&gt;,Major,null,null,Mon Jul 18 00:00:00 EDT 2005,[MNG-603] sablecc plugin,Closed,improvement
MNG-6030,Wed Jan 25 00:00:00 EST 2017,Fixed,after version 3.0.5 we found a very big memory consumption with maven. needed for build memory grows from 1G to 5G  According to current implementation there were change with commit https://git-wip-us.apache.org/repos/asf?p=maven.git;a=commit;h=e778ea67121f17232a7dced3fb4f0a205ffa64af    https://issues.apache.org/jira/browse/MNG-5312 private ModelBuildingRequest getModelBuildingRequest( InternalConfig config )     { @@ -256 7 +256 7 @@ public class DefaultProjectBuilder          request.setUserProperties( configuration.getUserProperties() );          request.setBuildStartTime( configuration.getBuildStartTime() );          request.setModelResolver( resolver ); -        request.setModelCache( config.modelCache ); +        request.setModelCache( new ReactorModelCache() );          return request;      } and as result new ReactorModelCache created for each ModelBuildingRequest which is created new to parse each pom.xml included in the build as module.  so if there is a big projects with a lot of modules ModelBuildingRequest is created for each of them and parse result is not reused between modules.  and if all this modules has the same parent pom it parsed each time and stored as many times as many ModelBuildingRequest was created. As parent pom often contains dependencies  dependencyManagement and common information for all modules it cause a larger memory footprint then was before. In version 3.0.5 and earlier ReactorModelCache was single and was reused between ModelBuildingRequest. in our cause footprint grew from 1g to 5g. it will be better to reuse result of parsing pom files between ModelBuildingRequests.,Major,Karl Heinz Marbaise,khmarbaise,Mon May 30 00:00:00 EDT 2016,[MNG-6030] ReactorModelCache do not used effectively after maven version 3.0.5 which cause a large memory footprint,Closed,improvement
MNG-6032,Tue Jan 24 00:00:00 EST 2017,Fixed, ,Minor,Karl Heinz Marbaise,khmarbaise,Tue May 31 00:00:00 EDT 2016,[MNG-6032] WARNING during build based on absolute path in assembly-descriptor.,Closed,improvement
MNG-6035,Sat Feb 11 00:00:00 EST 2017,Done, ,Minor,Karl Heinz Marbaise,khmarbaise,Fri Jun 03 00:00:00 EDT 2016,[MNG-6035] Upgrade animal-sniffer-maven-plugin to 1.15,Closed,improvement
MNG-6046,Sun Jan 22 00:00:00 EST 2017,Fixed,JAnsi 1.12 blows up when AnsiConsole.systemInstall() is called for a platform where no native lib exists ( see https://repo.maven.apache.org/maven2/org/fusesource/jansi/ for the list of native libraries ) : then Maven becomes unusable for OpenBSD  FreeBSD  Solaris  AIX  ... JAnsi 1.13 contains the critical fix: https://github.com/fusesource/jansi/pull/54,Major,Herv� Boutemy,hboutemy,Thu Jun 16 00:00:00 EDT 2016,[MNG-6046] upgrade JAnsi from 1.12 to 1.13,Closed,improvement
MNG-6068,Mon Jan 30 00:00:00 EST 2017,Fixed,Many people referencing the XSD of the POM file as reference and missing information in there. So adding the information about the default scope which is compile: http://maven.apache.org/ref/3.3.9/maven-model/maven.html#class_dependency,Trivial,Karl Heinz Marbaise,khmarbaise,Mon Jul 18 00:00:00 EDT 2016,[MNG-6068] Document default scope compile in pom XSD and reference documentation,Closed,improvement
MNG-6076,Sat Aug 06 00:00:00 EDT 2016,Fixed,At the moment the reading of the .mvn/maven.config is handled that way that you can define for example a property into this file but it is not possible to overwrite a property via direct command line arguments. Scenario is related to MNG-5576 which makes it possible to define a property as a version. This can be done in .mvn/maven.config having a default value. But using this it is makes it impossible to change the property via command line call mvn -Drevision=XXX.,Minor,Karl Heinz Marbaise,khmarbaise,Sat Aug 06 00:00:00 EDT 2016,[MNG-6076] Add the options of maven.config at the beginning to make it possible to overwrite via command line,Closed,improvement
MNG-6078,Sun Jan 29 00:00:00 EST 2017,Fixed,Currently properties which have been defined in .mvn/maven.config can't be overwritten via command line. This should be made possible.,Major,Karl Heinz Marbaise,khmarbaise,Sun Aug 07 00:00:00 EDT 2016,[MNG-6078] Can't overwrite properties which have been defined in .mvn/maven.config,Closed,improvement
MNG-6081,Sun Jan 22 00:00:00 EST 2017,Fixed,Method Invocation Replaced By Variable In file: apache-maven-3.3.9/maven-compat/src/main/java/org/apache/maven/artifact/resolver/DebugResolutionListener.java from line 70: String keptVersion = kept.getVersion(); if ( omittedVersion != null ? !omittedVersion.equals( keptVersion ) : keptVersion != null ) {     logger.debug( indent + omitted + " (removed - nearer found: " + kept.getVersion() + ")" ); } the "kept.getVersion()" can be replaced with "keptVersion" for the sake of simplicity and readability. ,Minor,Michael Osipov,michael-o,Thu Aug 18 00:00:00 EDT 2016,[MNG-6081] Log refactoring - Method Invocation Replaced By Variable,Closed,improvement
MNG-6102,Tue Jan 24 00:00:00 EST 2017,Fixed,Package maintainers always try to fit a product into the file hierarchy given/mandated by the OS/distribution. They separate the application from the configuration to have one common place for every bit. Currently  Maven does not properly support his. conf/ is tightly coupled with maven.home property and cannot be changed unless the Java code changes. Impossible for a maintainer to stick to FHS or heir(7). By introducing a maven.conf property in m2.conf  a maintainer can easily move the configuration files to /usr/local/etc/maven3  decouple it from the installation.,Major,Michael Osipov,michael-o,Sat Oct 08 00:00:00 EDT 2016,[MNG-6102] Introduce ${maven.conf} in m2.conf,Closed,improvement
MNG-6115,Sun Mar 12 00:00:00 EST 2017,Fixed,By default Jansi extracts the native  shared library to temp which results in unnecessary file I/O and a huge amount of temp files when Maven is run very often. One can avoid that by adding -Dlibrary.jansi.path=${MAVEN_HOME}/lib/ext to the start script. The user has to copy the libjansi.so or jansi.dll once and will avoid the overhead.,Major,Herv� Boutemy,hboutemy,Sat Nov 12 00:00:00 EST 2016,[MNG-6115] Add Jansi native library search path to our start scripts to avoid extraction to temp file on each run,Closed,improvement
MNG-6122,Mon Nov 21 00:00:00 EST 2016,Fixed,Maven does not detect self references in a POM and tries to download the artifact it is about to build  which makes no sense and should result in an early error and abort of the build. E.g. pseudo POM:     &lt;groupId&gt;org.my.acme&lt;/groupId&gt;     &lt;artifactId&gt;my-module&lt;/artifactId&gt;     &lt;version&gt;1.2.3&lt;/version&gt;     &lt;dependencies&gt;         ...         &lt;dependency&gt;             &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;             &lt;artifactId&gt;my-module&lt;/artifactId&gt;             &lt;version&gt;${project.version}&lt;/version&gt;         &lt;dependency&gt;     &lt;dependencies&gt; Maven tries to download my-module.jar but obviously fails...,Major,null,null,Mon Nov 21 00:00:00 EST 2016,[MNG-6122] detect self references in POM and fail fast,Closed,improvement
MNG-613,Mon Sep 12 00:00:00 EDT 2005,Fixed,currently  ranges such as ( 1.0) do not work  as it is incapable of locating the newest version &lt; 1.0. Also  ranges such as [1.0 )  result in RELEASE  which may not be present for all artifacts. We should replace or augment RELEASE with a full listing of versions for an artifact in the repository. This would be repository metadata of the same fashion as the plugin prefix -&gt; id mapping.,Critical,Brett Porter,brettporter,Wed Jul 20 00:00:00 EDT 2005,[MNG-613] improve release selection for ranges,Closed,improvement
MNG-6145,Sat Jan 28 00:00:00 EST 2017,Fixed,apache-maven/src/main/assembly/component.xml defines an include a file m2 which does not exist anymore. It is safe to remove this include.,Trivial,Michael Osipov,michael-o,Tue Jan 03 00:00:00 EST 2017,[MNG-6145]  Remove non-existent m2 include in component.xml,Closed,improvement
MNG-6146,Fri Feb 03 00:00:00 EST 2017,Fixed,The following can easily be squashed: d99f9ef8c7ffe56966945d6f1b66f0280866ded5 Fix checkstyle error 1c9362be4328713386bd23b01f9e2c87674cb952 Use static final values instead of literals 52945a679ec8f3f571d77658eda2fce06d637aa7 Use proper spelling of "e.g." a26cc1b9636e19c28cd32ed1c844fec64dec55b6 Use the proper term for char U+002D (-) hyphen(-minus) instead of dash ,Minor,Michael Osipov,michael-o,Tue Jan 03 00:00:00 EST 2017,[MNG-6146] Several small stylistic and spelling improvements to code and documentation,Closed,improvement
MNG-6147,Sat Jan 28 00:00:00 EST 2017,Fixed,There is an duplicate if clause from lines 110 to 125 which can safely be removed.,Major,Michael Osipov,michael-o,Tue Jan 03 00:00:00 EST 2017,[MNG-6147] MetadataResolutionResult#getGraph() contains duplicate if clause,Closed,improvement
MNG-6150,Wed Feb 15 00:00:00 EST 2017,Fixed,Catch all for Javadoc improvements,Trivial,Michael Osipov,michael-o,Wed Jan 04 00:00:00 EST 2017,[MNG-6150] Javadoc improvements for 3.5.0,Closed,improvement
MNG-616,Sat Oct 08 00:00:00 EDT 2005,Fixed,a couple of things missing: log when a range is restricted due to encountering the same dep with a different version log when a version is selected from a range later  log conflict resolution also  too verbose:  junit:junit:jar:3.8.1 (removed - nearer found: 3.8.1),Minor,Brett Porter,brettporter,Wed Jul 20 00:00:00 EDT 2005,[MNG-616] improve version resolution logging,Closed,improvement
MNG-6163,Sun Jan 29 00:00:00 EST 2017,Fixed,MNG-5538 introduced CLASSWORLDS_JAR  but the issue was dropped due to reproducibility  however mvn.cmd has also a CLASSWORLDS_JAR variable. Both scripts shall behave the same way. Reapply commits from MNG-5538 as this issue.,Major,Michael Osipov,michael-o,Sun Jan 29 00:00:00 EST 2017,[MNG-6163] Introduce CLASSWORLDS_JAR in shell startup scripts,Closed,improvement
MNG-6165,Mon Feb 06 00:00:00 EST 2017,Fixed,According to PR #101 some of the public API methods are incorrectly spelled. Let's clean that up by deprecating and adding a correctly spelled version. The old version will simply call the new one.,Major,Michael Osipov,michael-o,Fri Feb 03 00:00:00 EST 2017,[MNG-6165] Deprecate and replace incorrectly spelled public API,Closed,improvement
MNG-6179,Fri Mar 03 00:00:00 EST 2017,Fixed,During the build of current master of Maven using Maven (3.5.0-alpha-1) you will get the following warning: [WARNING] The project org.apache.maven:maven:pom:3.5.0-SNAPSHOT uses prerequisites which is only intended for maven-plugin projects but not for non maven-plugin projects. For such purposes you should use the maven-enforcer-plugin. See https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html ,Minor,Karl Heinz Marbaise,khmarbaise,Fri Feb 24 00:00:00 EST 2017,[MNG-6179] Remove unused prerequisites,Closed,improvement
MNG-6185,Wed Mar 29 00:00:00 EDT 2017,Fixed,The javadoc of org.apache.maven.plugin.AbstractMojo still describes the usage of doclettags  which should be upgraded/rewritten to annotations.,Minor,Robert Scholte,rfscholte,Fri Mar 10 00:00:00 EST 2017,[MNG-6185] Replace doclettag explanation with annotations in AbstractMojo javadoc,Closed,improvement
MNG-6189,Mon Mar 20 00:00:00 EDT 2017,Fixed,with MNG-4162  a bunch of reporting logic was removed from Maven core. This was globally successful  but not on one topic: it was expected to remove pom's reporting section and replace it with a normal reportPlugins parameter in maven-site-plugin configuration. We later discovered that with this normal parameter  we missed one crucial feature: report plugins inheritance  which would require a new mechanism MSITE-484 Then we reverted our instructions in maven-site-plugin documentation MSITE-647: the new reportPlugins parameter is now just an implementation detail  but should not be used by end-users  reporting section remains the way to configure report plugins MSITE-684 Now adding a warning in Maven core when it detects a reportPlugins parameter in a maven-site-plugin configuration is easy to do  will help users come back to normal reporting configuration  and will permit future enhancements (we need to finally completely clean-up the situation we created with this story...),Major,Herv� Boutemy,hboutemy,Sun Mar 19 00:00:00 EDT 2017,[MNG-6189] WARN if maven-site-plugin configuration contains reportPlugins element,Closed,improvement
MNG-6203,Wed Apr 05 00:00:00 EDT 2017,Fixed,There seems to be some old unnecessary code in the MavenCli.java  that could be cleaned up.,Trivial,Karl Heinz Marbaise,khmarbaise,Sun Apr 02 00:00:00 EDT 2017,[MNG-6203] Minor cleanup in MavenCli.java,Closed,improvement
MNG-621,Tue Aug 02 00:00:00 EDT 2005,Fixed,Need to add a  way to specifiy a custom context root for a war module if the application.xml is automatically generated. Currently it takes the artifactId without the version part (e.g. my-module-1.0.0-SNAPSHOT.war has a context root of /my-module),Major,Stephane Nicoll,snicoll,Wed Jul 20 00:00:00 EDT 2005,[MNG-621] Support of custom context-root for ear plugin,Closed,improvement
MNG-622,Tue Aug 02 00:00:00 EDT 2005,Fixed,All modules included in the EAR are being put currently in the root of the archive. Needs to add a way to specify a custom location for a particular module.,Major,Stephane Nicoll,snicoll,Wed Jul 20 00:00:00 EDT 2005,[MNG-622] Support of custom location for module inside an ear,Closed,improvement
MNG-6228,Wed May 10 00:00:00 EDT 2017,Fixed,Consider you have optional dependencies in your POM and run Maven with -X  you'll see: [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=0  ConflictMarker.markTime=1  ConflictMarker.nodeCount=6  ConflictIdSorter.graphTime=0  ConflictIdSorter.topsortTime=1  ConflictIdSorter.conflictIdCount=5  ConflictIdSorter.conflictIdCycleCount=0  ConflictResolver.totalTime=2  ConflictResolver.conflictItemCount=5  DefaultDependencyCollector.collectTime=26  DefaultDependencyCollector.transformTime=6} [DEBUG] org.apache.maven.its.mng5935:test:jar:0.1 [DEBUG]    com.mysema.querydsl:querydsl-core:jar:3.4.3:compile [DEBUG]       com.google.guava:guava:jar:17.0:compile (version managed from 14.0) [DEBUG]       com.google.code.findbugs:jsr305:jar:2.0.3:compile (version managed from 1.3.9) [DEBUG]       com.mysema.commons:mysema-commons-lang:jar:0.2.4:compile [DEBUG]       com.infradna.tool:bridge-method-annotation:jar:1.13:compile The optional flag is never displayed. This leads to two issues: 1. It causes confusion with the user 2. The user thinks that the option flag does not work This required information shall be printed as same as MDEP does: ...(optional) The expected result would be: [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=0  ConflictMarker.markTime=1  ConflictMarker.nodeCount=6  ConflictIdSorter.graphTime=0  ConflictIdSorter.topsortTime=1  ConflictIdSorter.conflictIdCount=5  ConflictIdSorter.conflictIdCycleCount=0  ConflictResolver.totalTime=2  ConflictResolver.conflictItemCount=5  DefaultDependencyCollector.collectTime=26  DefaultDependencyCollector.transformTime=6} [DEBUG] org.apache.maven.its.mng5935:test:jar:0.1 [DEBUG]    com.mysema.querydsl:querydsl-core:jar:3.4.3:compile (optional) [DEBUG]       com.google.guava:guava:jar:17.0:compile (version managed from 14.0) (optional) [DEBUG]       com.google.code.findbugs:jsr305:jar:2.0.3:compile (version managed from 1.3.9) (optional) [DEBUG]       com.mysema.commons:mysema-commons-lang:jar:0.2.4:compile (optional) [DEBUG]       com.infradna.tool:bridge-method-annotation:jar:1.13:compile (optional) ,Major,Michael Osipov,michael-o,Tue May 09 00:00:00 EDT 2017,[MNG-6228] Optionality not displayed in dependency tree when run in debug mode,Closed,improvement
MNG-6229,Tue May 09 00:00:00 EDT 2017,Fixed,Several upcoming issues require to test wether a dependency is optional or not. Neither maven-it-plugin-dependency-collection nor maven-it-plugin-dependency-resolution do this at the moment. Add this information as (optional) in IT plugins output to verify optionality.,Major,Michael Osipov,michael-o,Tue May 09 00:00:00 EDT 2017,[MNG-6229] Write out optionality in Core IT Plugins for collection and resolution,Closed,improvement
MNG-623,Mon Aug 15 00:00:00 EDT 2005,Fixed,Improvment of the exclusion/inclusion mechanism: for now this is working based on dependencies wich are neither test nor provided. Need also to handle jar modules which needs to be declared in a &lt;module&gt;   &lt;java&gt;&#91;...&#93;&lt;/java&gt; &lt;/module&gt; entry. ,Major,Stephane Nicoll,snicoll,Wed Jul 20 00:00:00 EDT 2005,[MNG-623] Improve the exclusion / inclusion of a dependency inside the ear,Closed,improvement
MNG-625,Fri Jul 22 00:00:00 EDT 2005,Fixed,projects are able to declare the required Maven version to build  but it would also be handy for plugins to declare a minimum requirement so that when Maven attempts to upgrade them  if its minimum requirement is higher it can stick to the previous versino rather than prompting for an update.,Critical,Brett Porter,brettporter,Wed Jul 20 00:00:00 EDT 2005,[MNG-625] plugin runtime maven version requirement,Closed,improvement
MNG-631,Thu Aug 04 00:00:00 EDT 2005,Fixed,Apache XML Beans is an xml schema compiler which produces a framework for loading xml into java class objects. The attached zip is an update to the xml beans plugin for the current m2 api. The plugin has been tested but unit test cases are still being developed based on the Apache site's xml beans tutorial for consistency. It seemed more important to test against a few projects first and release it quickly. ,Major,null,null,Fri Jul 22 00:00:00 EDT 2005,[MNG-631] Update the Apache XML Beans plugin based on latest changes to plugin API & 1.x releases.,Closed,improvement
MNG-632,Sat Sep 03 00:00:00 EDT 2005,Fixed,add line ending and mode handling to both fileSet and dependencySet:   &lt;fileMode&gt;770&lt;/fileMode&gt;   &lt;lineEndings&gt;crlf&lt;/lineEndings&gt; ,Minor,kenneyw,kenneyw,Fri Jul 22 00:00:00 EDT 2005,[MNG-632] file line ending conversions/permissions in assembly,Closed,improvement
MNG-642,Wed Jul 27 00:00:00 EDT 2005,Fixed,Added a setter to the MavenArchiveConfiguration class in the maven-archiver plugin component.  This allows other plugins to set the fully qualified path to a manifest file to be used by the maven archiver configuration.  Modified MavenArchiveConfiguration.java class is attached  but simply adds the following code: public void setManifestFile(String manifestFile) { this.manifestFile = manifestFile; },Minor,Brett Porter,brettporter,Mon Jul 25 00:00:00 EDT 2005,[MNG-642] Added Setter for manifest file in MavenArchiveConfiguration,Closed,improvement
MNG-643,Mon Aug 22 00:00:00 EDT 2005,Fixed,m2 currently supports FileSets in &lt;resources&gt; and &lt;testResources&gt; which allow for the inclusion and exclusion of files based on a pattern. Users may benefit from having this functionality in the source and testSource directory definitions as well. Here are some scenarios: 1) a volative package of java files may be excluded from a build to permit developers to continue building the other source files without having to delete or resolve issues for the problem files. 2) Source files and test source files may be kept in the same source tree in the same manner that resources and testResources may currently be kept in a single directory. 3) The change will allow for a parent pom.xml which applies a custom plugin against all source files for subprojects (modules) and subprojects which only compile subsets of these files to all point at the same directory. 4) Some development environments keep their source files in a single directory regardless of the deployment breakout. One reason is it isn't always obvious which artifact a particular source file is located in and consolidation eliminates the need to look around. 5) Elegant way of continuing to maintain Maven's one project one source set mantra in a multi-project environment without increasing the number of source directories. In an effort to avoid breaking the existing pom format  the following tags would be supported:      &lt;sourceDirectory&gt;../../src/java&lt;/sourceDirectory&gt; xor       &lt;source&gt;          &lt;directory&gt;../../src/java&lt;/directory&gt;          &lt;includes&gt;            &lt;include&gt;*/package/.java&lt;/include&gt;          &lt;/includes&gt;          &lt;excludes&gt;            &lt;exclude&gt;**/*Test.java&lt;/exclude&gt;          &lt;/excludes&gt;      &lt;/source&gt; and       &lt;testSourceDirectory&gt;../../src/java&lt;/testSourceDirectory&gt; xor       &lt;testSource&gt;          &lt;directory&gt;../../src/java&lt;/directory&gt;          &lt;includes&gt;            &lt;include&gt;**/*Test.java&lt;/include&gt;          &lt;/includes&gt;      &lt;/testSource&gt; This issue is NOT endorsing the support of multiple source directories. It would simply be possible to exclude some source files from the single directory.  The change creates a path for deprecating the existing format later if desired. The change would not break existing pom.xml files. If a patch is not included with this issue  expect one soon. This f is a blocker for our development environment because we have several critical tools which traverse all source files in a company project  not just a single artifact's files. So either support for multiple source directories by a parent project (ugh!) or filters on a single directory is a must have. I am currently working on the patch.,Critical,John Casey,jdcasey,Mon Jul 25 00:00:00 EDT 2005,[MNG-643] Support <includes> and <excludes> for the source and testSource directories.,Closed,improvement
MNG-652,Thu Aug 11 00:00:00 EDT 2005,Fixed,defaulting can make it confusing when you expect a particular packaging that isn't available due to a typo or misconfiguration. We should include all the known packagings and fail if it is not found.,Major,John Casey,jdcasey,Tue Jul 26 00:00:00 EDT 2005,[MNG-652] don't default the lifecycle on unknown packagings,Closed,improvement
MNG-653,Mon Oct 03 00:00:00 EDT 2005,Fixed,currently the filename to use is constructed within the packaging goal  and again in the install/deploy goal as $ {pom.build.finalName} .$ {extension}  (or equivalent for others). The filename may be different under some packagings  however. For install/deploy to work  the filename must be stored on the artifact (using setFile)  and that used to install/deploy the file.,Major,Brett Porter,brettporter,Tue Jul 26 00:00:00 EDT 2005,[MNG-653] need filename symmetry through packaging  install and deploy,Closed,improvement
MNG-654,Fri Aug 12 00:00:00 EDT 2005,Fixed,I have noticed this happening multiple times within a project - while it may be resolved locally it is still logged and so needs to be checked.,Major,John Casey,jdcasey,Tue Jul 26 00:00:00 EDT 2005,[MNG-654] plugins.xml resolved multiple times,Closed,improvement
MNG-655,Mon Jun 04 00:00:00 EDT 2007,Fixed,this should be done on a project by project basis - currently  they are all loaded into the main container.,Major,null,null,Wed Jul 27 00:00:00 EDT 2005,[MNG-655] don't load extensions into the main container,Closed,improvement
MNG-662,Tue Aug 09 00:00:00 EDT 2005,Fixed,The release plugin should be refactored to: 1/ handle injection/deletion of release-pom.xml from SCM HEAD/trunk before and after tagging...we're waiting on maven-scm to settle down a little before implementing this. See MNG-607 for more information. 2/ handle reactored builds (rather  builds where the POM has a &lt;modules/&gt; section  which is NOT the same as using the '-r' tag). See MNG-521 for more information on this.,Blocker,John Casey,jdcasey,Wed Jul 27 00:00:00 EDT 2005,[MNG-662] Refactor release plugin to handle reactored build and release-pom.xml-SCM interactions.,Closed,improvement
MNG-663,Wed Jul 27 00:00:00 EDT 2005,Fixed,In this page  the developers organization URLs are not created as hyperlinks ( while contributors ones are).,Minor,Siveton Vincent,siveton,Wed Jul 27 00:00:00 EDT 2005,[MNG-663] In Project Team page  developers organization URLs are not links,Closed,improvement
MNG-665,Wed Jul 27 00:00:00 EDT 2005,Fixed,Actually  the site goal generates several warn or info messages coming from Velocity. Maybe we could turn off these? A quick solution is to add the following properties in the components.xml file in the plexus-velocity-1.1.jar             &lt;property&gt;             &lt;name&gt;velocimacro.messages.on&lt;/name&gt;             &lt;value&gt;false&lt;/value&gt;           &lt;/property&gt;           &lt;property&gt;             &lt;name&gt;resource.manager.logwhenfound&lt;/name&gt;             &lt;value&gt;false&lt;/value&gt;           &lt;/property&gt;,Trivial,Emmanuel Venisse,evenisse,Wed Jul 27 00:00:00 EDT 2005,[MNG-665] Improve the log statement for Velocity with site goal,Closed,improvement
MNG-669,Mon Oct 03 00:00:00 EDT 2005,Fixed,currently  you have to use the os.name system property to activate a profile by operating system. This can be problematic as os.name is something like "Windows XP" and you may want to match "Windows". I think plexus-utils has an Os class that can assist in breaking it down to known families which we can use as keywords.,Major,John Casey,jdcasey,Wed Jul 27 00:00:00 EDT 2005,[MNG-669] implement OS family activator for profiles,Closed,improvement
MNG-670,Thu Jul 28 00:00:00 EDT 2005,Fixed,currently  you might set scope = test on junit in your local POM  and it ends up being a compile time dependency  because something you depended on declared it that way. This is correct behaviour (avoids hiding an error)  but unintuitive when you really intended it to be test and "know better" than your dependency did. A big warning should be introduced here. To actually state you know better  you must still use a dependencyManagement element.,Major,null,null,Wed Jul 27 00:00:00 EDT 2005,[MNG-670] warn when local dependency scope is vetoed,Closed,improvement
MNG-675,Wed Aug 17 00:00:00 EDT 2005,Fixed,When leaving out a &lt;version&gt; from at least one dependency  the following error message appears. With a lot of dependencies  where all versions are managed in dependencyManagement in the parent pom  it's hard to tell which version is missing: &#91;INFO&#93; BUILD FAILURE &#91;INFO&#93; ---------------------------------------------------------------------------- &#91;INFO&#93; Reason: Failed to validate POM for 'm:\qwesken_adm_1.0_dev_inc2\spf\products\adm\design\application\pom.xml'.   Reason(s):   &#91;0&#93;  'dependencies.dependency.version' is missing. ,Major,John Casey,jdcasey,Thu Jul 28 00:00:00 EDT 2005,[MNG-675] Improve 'dependencies.dependency.version is missing' error message,Closed,improvement
MNG-686,Fri Aug 12 00:00:00 EDT 2005,Fixed,Comes down to moving 'directory' from Build.java to BuildBase.java and updating DefaultModelInheritanceAssembler,Major,John Casey,jdcasey,Mon Aug 01 00:00:00 EDT 2005,[MNG-686] Allow build directory specification in pom profile,Closed,improvement
MNG-700,Thu Aug 04 00:00:00 EDT 2005,Fixed,The XML Beans plugin code has been committed to the codehaus repo. Once it's available in the ibiblio repo the Maven Plugin Matrix should be updated to reflect its release.,Minor,null,null,Thu Aug 04 00:00:00 EDT 2005,[MNG-700] Update Maven Plugin Matrix to reflect availability of maven XML Beans Plugin.,Closed,improvement
MNG-707,Sat Oct 08 00:00:00 EDT 2005,Fixed,noticed this in the repository converter. It would be good to accept the alternate spellings on input (not necessarily preserve it on output though).,Minor,Brett Porter,brettporter,Sat Aug 06 00:00:00 EDT 2005,[MNG-707] model should parse "organisation" as well,Closed,improvement
MNG-710,Tue Aug 23 00:00:00 EDT 2005,Fixed,Add the ability to fork the maven-compiler-plugin.  This would allow projects to be compiled with a JDK other than the one used to run Maven from.,Major,Trygve Laugst�l,trygvis,Mon Aug 08 00:00:00 EDT 2005,[MNG-710] Add ability to fork the maven-compiler-plugin,Closed,improvement
MNG-715,Thu Aug 11 00:00:00 EDT 2005,Fixed,Currently  most aspects of mojo development accommodate some sort of deprecation process. Methods can be deprecated using standard Java language support  and any given mojo can declare one of its parameters as deprecated. However  we do not currently support deprecation of the parameters available to mojo developers. A case in point is $ {project.build.resources}. Ideally  we should not be modifying the underlying Model at runtime; doing so will compromise our ability to write a fully resolved POM to disk (which should not encompass runtime additions  which could be dependent on a profile's activation) and similar functionality. Instead  to add resources and then access them  a mojo should use ${project.resources} and MavenProject.addResource(..) (both new). The most graceful way to encourage this switch would be to deprecate ${project.build.resources}  from the parameter evaluator  and remove it later. Currently  this requires case-by-case exceptions to be coded directly into the PluginParameterExpressionEvaluator  which is not very elegant. One possible solution might be to simply put a list of deprecated expressions into the evaluator  and also maybe a list of banned expressions. First step in evaluation could be to check vs. these lists  and give appropriate warnings/errors when detected.,Major,John Casey,jdcasey,Tue Aug 09 00:00:00 EDT 2005,[MNG-715] find a scalable way to add deprecation information to parameter expressions,Closed,improvement
MNG-721,Sat Oct 08 00:00:00 EDT 2005,Fixed, ,Minor,Brett Porter,brettporter,Wed Aug 10 00:00:00 EDT 2005,[MNG-721] reactor summary should have time taken next to SUCCESS message for each subproject,Closed,improvement
MNG-73,Thu Jan 27 00:00:00 EST 2005,Fixed,When throwing an TransitiveArtifactResolutionException from collect  I add the atrifact.toString() to the error message. I was creating simple poms (groupId artifactId version) in my local repository - for all artifacts that my project uses.  This way I could start trying out m2 on a project. I was having issues trying to identify which POM was corrupt in my local repository  since I was creating them by hand.,Major,null,null,Sun Aug 22 00:00:00 EDT 2004,[MNG-73] Change to DefaultArtifactResolver to indicate which artifact fails,Closed,improvement
MNG-732,Thu Aug 25 00:00:00 EDT 2005,Fixed,If the property are the same in the parent and the child project  then the parent property is not inherited. This is fine for simple properties but breaks for complex properties such as lists. Here's an example: My parent POM:   &lt;build&gt;     &lt;pluginManagement&gt;       &lt;plugins&gt;         &lt;plugin&gt;           &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;           &lt;configuration&gt;             &lt;systemProperties&gt;               &lt;property&gt;                 &lt;name&gt;cargo.resin3x.port&lt;/name&gt;                 &lt;value&gt;8280&lt;/value&gt;               &lt;/property&gt;               &lt;property&gt;                 &lt;name&gt;cargo.resin3x.url&lt;/name&gt;                 &lt;value&gt;http://www.caucho.com/download/resin-3.0.9.zip&lt;/value&gt;               &lt;/property&gt;             &lt;/systemProperties&gt;           &lt;/configuration&gt;         &lt;/plugin&gt;       &lt;/plugins&gt;     &lt;/pluginManagement&gt;   &lt;/build&gt; My child POM:   &lt;build&gt;     &lt;plugins&gt;       &lt;plugin&gt;         &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;         &lt;configuration&gt;           &lt;systemProperties&gt;             &lt;!-- Default list of containers to run on. If you want to shorten or change the                  execution of 'samples'  simply specify a shorter list of containers on the                  command line or in your settings --&gt;             &lt;property&gt;               &lt;name&gt;cargo.containers&lt;/name&gt;               &lt;value&gt;resin3x  orion2x  tomcat5x  jetty4xEmbedded&lt;/value&gt;             &lt;/property&gt;             &lt;!-- Location where to download and install the containers for the tests --&gt;             &lt;property&gt;               &lt;name&gt;cargo.install.dir&lt;/name&gt;               &lt;value&gt;$ {basedir} /../../target/installs&lt;/value&gt;             &lt;/property&gt;           &lt;/systemProperties&gt;         &lt;/configuration&gt;       &lt;/plugin&gt;     &lt;/plugins&gt;   &lt;/build&gt; It sounds a reasonable expectations that the system properties will get merged.,Critical,John Casey,jdcasey,Sat Aug 13 00:00:00 EDT 2005,[MNG-732] Improve plugin configuration property merge algorithm,Closed,improvement
MNG-738,Sat Oct 08 00:00:00 EDT 2005,Fixed,This feature helps settting up directory/pom structure of large projects. Currently it only shows Downloading: http://uscus-ebulnx2/usr/scm/repositories/m2-snapshot/com/borland/e nterprise/util/util-master/7.0-SNAPSHOT/util-master-7.0-SNAPSHOT.pom &#91;WARNING&#93; Unable to get resource from repository http://uscus-ebulnx2/usr/scm/re positories/m2-snapshot &#91;WARNING&#93; Using defaults for missing POM com.borland.enterprise.util:util-master:pom:7.0-SNAPSHOT ***** In my case  the pom is not in local or remote.  But the message does not show m2 actually pickup the pom in the source tree ,Minor,Brett Porter,brettporter,Mon Aug 15 00:00:00 EDT 2005,[MNG-738] Ability to see where m2 picks up the parent pom (remote  local  source tree),Closed,improvement
MNG-741,Tue Aug 16 00:00:00 EDT 2005,Fixed,in the sablecc plugin I have a case of *.dat files getting created that need to get jared up with the actual project so I needed to add them as a resource to the project...since the plugin developers should have to have a minimal exposure to internals of maven I added this method to MavenProject as a convience method...also means I have one less dependency that the plugin itself needs to reference...whichever one model is a part of.,Major,null,null,Mon Aug 15 00:00:00 EDT 2005,[MNG-741] new method: addResource( String directory  String includes  String excludes ) on MavenProject,Closed,improvement
MNG-742,Tue Aug 23 00:00:00 EDT 2005,Fixed,Added functionality to the maven-archiver plugin so that other plugins can add custom manifest entries.  Made some fairly minor changes to both MavenArchiveConfiguration.java and MavenArchiver.java.  Description of changes below  and I've attached my marked up changes to the M2 HEAD of both files. MavenArchiveConfiguration.java ========================= Added the following methods (along with appropriate imports):         private Map manifestEntries = new HashMap(); public void addManifestEntry(Object key  Object value)  { manifestEntries.put(key  value); } public void addManifestEntries(Map map)  { manifestEntries.putAll(map); } public boolean isManifestEntriesEmpty()  { return manifestEntries.isEmpty(); } public Map getManifestEntries()  { return manifestEntries; } Changes maintain a collection of custom manifest entries stored a name-value pairs.  Plugins use the first two methods to add custom manifest entries to the collection.  MavenArchiver uses the last two methods to retrieve the set of entries and add them to the archive's manifest. =============== MavenArchiver.java =============== In the createArchive() method of MavenArchiver  added the following marked code block to retrieve the custom manifest entries (if any available) from the MavenArchiveConfiguration and add them to the archive's manifest.         Manifest manifest = getManifest( project  archiveConfiguration.getManifest() ); // THIS IS THE START OF THE CODE BLOCK I ADDED // any custom manifest entries in the archive configuration manifest? if (!archiveConfiguration.isManifestEntriesEmpty()) { Map entries = archiveConfiguration.getManifestEntries(); Set keys = entries.keySet(); for (Iterator iter = keys.iterator(); iter.hasNext(); )  { String key = (String) iter.next(); String value = (String) entries.get(key); Manifest.Attribute attr = new Manifest.Attribute(key  value); manifest.addConfiguredAttribute(attr); } } // THIS IS THE END OF THE CODE BLOCK I ADDED         // Configure the jar         archiver.addConfiguredManifest( manifest );,Critical,Brett Porter,brettporter,Mon Aug 15 00:00:00 EDT 2005,[MNG-742] Added functionality to maven-archiver so plug-ins can add custom entries to the archiver's manifest,Closed,improvement
MNG-746,Fri Aug 19 00:00:00 EDT 2005,Fixed, ,Major,Brett Porter,brettporter,Wed Aug 17 00:00:00 EDT 2005,[MNG-746] Add <include>**/*TestCase.java</include> and <exclude>**/Abstract*TestCase</exclude> to default surefire configuration.,Closed,improvement
MNG-75,Fri Apr 15 00:00:00 EDT 2005,Fixed,commons-logging may not play well with classloaders (eg  under current implementation  a POM with just hibernate 2.1.3 in it will get the infamous "Jdk14Logger does not implement Log" error). Devise a way to handle this. It may need to be something in classworlds  or maybe putting commons-logging into the root of the classloader with a Maven implementation (as long as this only affects Maven and its plugins  not projects built by Maven and run from Maven for tests).,Major,null,null,Sun Aug 22 00:00:00 EDT 2004,[MNG-75] resolve issues with commons-logging,Closed,improvement
MNG-753,Fri Aug 26 00:00:00 EDT 2005,Fixed,In our Maven 1.0.2 build environment  we went to the trouble of building a replica of the ibiblio repository on a local machine because we would have builds hang for minutes if ibiblio decided to hiccup while the build was trying to update the snapshots of our current projects. It would be nice if Maven 2 would look for dependencies in the local repositories (those defined in the project and parent POMs) before looking in the central repository.  This would allow locally-produced artifacts to be found faster (especially if the internet connection is dial-up) and would probably also reduce the load on the ibiblio servers.,Minor,Brett Porter,brettporter,Fri Aug 19 00:00:00 EDT 2005,[MNG-753] Check for artifacts in POM-defined repositories before checking the central repository,Closed,improvement
MNG-758,Tue Aug 23 00:00:00 EDT 2005,Fixed,I'm finding the expression vs default-value a bit confusing - I think we have discussed this before. expression is often being used as the default value - sometimes by necessity because default-value doesn't accept expressions. Suggestions: default-value should accept expressions add a @component role="..." roleHint="..." to replace the component expression expression should be the value (And if null  use the default-value). THis usually represents the project field to look up  or the system property to use ,Blocker,Brett Porter,brettporter,Sun Aug 21 00:00:00 EDT 2005,[MNG-758] final clarifications of Mojo API,Closed,improvement
MNG-760,Mon Sep 12 00:00:00 EDT 2005,Fixed,This patch adds the following to the M2 eclipse plugin: downloading of source attachments and configuration in .classpath customization of project builders and natures in .project (like in the m1 plugin) additional conclasspath entries in .classpath (like in the m1 plugin) fix: don't add duplicate directories if main/resources directories overlap  (like in the m1 plugin) support for flexible projects (.wtpmodules file generation for utility  modules  wars  ejbs) Along with these new features the plugin has been refactored  splitting the single big EclipseWriter class to several specific classes and all the messages have been externalized in a property file. There are still some todos in the code  which probably some M2 guru could look at  but anyway all the existing functionalities continue to work and some other tests have been added. Due to the refactoring the patch looks more like a complete rewrite: sorry for that  but adding new features without splitting the existing file was ugly ,Major,Brett Porter,brettporter,Sun Aug 21 00:00:00 EDT 2005,[MNG-760] m2 eclipse plugin improvements (source download and attachment  customization of natures/builders/conclasspath  flexible project dupport) and refactoring,Closed,improvement
MNG-764,Tue Nov 01 00:00:00 EST 2005,Fixed, ,Major,Edwin Punzalan,elpunzalan,Sun Aug 21 00:00:00 EDT 2005,[MNG-764] pom with modules should fail if packaging is not pom or an aggregator,Closed,improvement
MNG-801,Sat Oct 08 00:00:00 EDT 2005,Fixed,eg  no / in id's.,Minor,Brett Porter,brettporter,Sun Aug 28 00:00:00 EDT 2005,[MNG-801] need to validate model elements for content,Closed,improvement
MNG-802,Fri Oct 07 00:00:00 EDT 2005,Fixed,refer to:  http://mail-archives.apache.org/mod_mbox/maven-users/200508.mbox/next-thread?%3c3C67E582-5944-49F2-9D2C-B4034303DD20@latencyzero.com%3e http://mail-archives.apache.org/mod_mbox/maven-users/200508.mbox/%3cc38ad92d05082516333bc3e116@mail.gmail.com%3e,Minor,null,null,Mon Aug 29 00:00:00 EDT 2005,[MNG-802] Clarify SUN's jar distribution policy on site and in Maven so users know to install those files in their own remote repo,Closed,improvement
MNG-806,Mon Sep 12 00:00:00 EDT 2005,Fixed,Sun SDKs have a tools.jar that provides API for extending the Sun java tools. This includes APT and Javadoc. There is no mechanism in maven for loading in tools.jar as a dependency. It can be added to the classpath before maven is launched  or manually loaded into the local repository. However  neither of these solutions are very satisfactory. Could we have some smarts in the dependency loading that understands a magical jdk groupId that resolves to the current JDK being used for compilation? This would let JDK-dependent stuff be linked in. In the case of tools.jar  the dependency snippet would look something like this: &lt;dependency&gt;   &lt;groupId&gt;sun.jdk&lt;/groupId&gt;   &lt;artifactId&gt;tools&lt;/artifactId&gt;   &lt;type&gt;jar&lt;/type&gt;   &lt;scope&gt;provided&lt;/scope&gt; &lt;/dependency&gt;,Major,John Casey,jdcasey,Tue Aug 30 00:00:00 EDT 2005,[MNG-806] tools.jar needs to be supported as a normal dependency,Closed,improvement
MNG-828,Sat Oct 08 00:00:00 EDT 2005,Fixed,when we have this  we should remove the debugging code from plugins such as ear that do this manually.,Minor,Brett Porter,brettporter,Sat Sep 03 00:00:00 EDT 2005,[MNG-828] log all mojo parameters and their populated values in debug mode,Closed,improvement
MNG-829,Sat Oct 15 00:00:00 EDT 2005,Fixed, ,Major,Johnny R. Ruiz III,jruiz,Sat Sep 03 00:00:00 EDT 2005,[MNG-829] review all plugins for basedir aligned parameters and make them File's instead of String's,Closed,improvement
MNG-830,Mon Nov 06 00:00:00 EST 2006,Fixed,we also need a good explanation written down of the difference. default-value is used when expression is null expression is intended to be used to get the user's override  eg from a system property Perhaps if we could cover that other use case differently (eg by a standard system property mechanism that went &#91;plugin-prefix.goal.configuration&#93;)  we could eliminate expression altogether in a future version of Maven.,Major,Allan Ramirez,aramirez,Sat Sep 03 00:00:00 EDT 2005,[MNG-830] review plugins use of expression and change to default-value/component where appropriate,Closed,improvement
MNG-837,Mon Sep 05 00:00:00 EDT 2005,Fixed,Here's a patch just giving a hint or two about how to load a .jar into the local repository using m2 install:install-file - I'm guessing it needs a disclaimer saying that the .jar should realy be put into a repository somewherem  with apropreate links to how to do that.,Trivial,Trygve Laugst�l,trygvis,Mon Sep 05 00:00:00 EDT 2005,[MNG-837] faq entry for how to load a jar into your local repository,Closed,improvement
MNG-850,Fri Oct 07 00:00:00 EDT 2005,Fixed,When running a reactor build in a large project hierarchy  the lack of console feedback makes it appear that m2 has hung.  Need to provide feedback to the user about which poms have been discovered as and when they are found. It would also be nice to see the build order of the accumulated projects.,Minor,Brett Porter,brettporter,Thu Sep 08 00:00:00 EDT 2005,[MNG-850] Reactor should provide console feedback when scanning for projects,Closed,improvement
MNG-852,Sun Sep 25 00:00:00 EDT 2005,Fixed,Add javadoc and apt doc for an overview,Minor,Stephane Nicoll,snicoll,Fri Sep 09 00:00:00 EDT 2005,[MNG-852] Maven EJB Plugin Documentation,Closed,improvement
MNG-853,Fri Sep 23 00:00:00 EDT 2005,Fixed,Add javadoc and apt doc for an overview,Major,Stephane Nicoll,snicoll,Fri Sep 09 00:00:00 EDT 2005,[MNG-853] Maven WAR Plugin Documentation,Closed,improvement
MNG-854,Sun Sep 25 00:00:00 EDT 2005,Fixed,Add java doc and apt doc for an overview,Minor,Stephane Nicoll,snicoll,Fri Sep 09 00:00:00 EDT 2005,[MNG-854] Maven RAR plugin documentation,Closed,improvement
MNG-855,Sun Sep 25 00:00:00 EDT 2005,Fixed,Add javadoc and apt doc for an overview,Minor,Johnny R. Ruiz III,jruiz,Fri Sep 09 00:00:00 EDT 2005,[MNG-855] Maven Surefire Plugin Documentation,Closed,improvement
MNG-856,Wed Sep 21 00:00:00 EDT 2005,Fixed,add javadoc and apt doc for an overview,Minor,Allan Ramirez,aramirez,Fri Sep 09 00:00:00 EDT 2005,[MNG-856] Maven FAQ/XDoc/Site documentation,Closed,improvement
MNG-857,Sun Oct 30 00:00:00 EDT 2005,Fixed,add javadoc and apt doc for an overview,Minor,Jason van Zyl,jvanzyl,Fri Sep 09 00:00:00 EDT 2005,[MNG-857] Maven Archetype documentation,Closed,improvement
MNG-858,Tue Sep 20 00:00:00 EDT 2005,Fixed,Add java doc and apt doc for an overview,Minor,Stephane Nicoll,snicoll,Fri Sep 09 00:00:00 EDT 2005,[MNG-858] Maven JAR Plugin documentation,Closed,improvement
MNG-859,Thu Sep 22 00:00:00 EDT 2005,Fixed,Add java doc and apt doc for an overview,Minor,Johnny R. Ruiz III,jruiz,Fri Sep 09 00:00:00 EDT 2005,[MNG-859] Maven compiler plugin documentation,Closed,improvement
MNG-889,Thu Oct 02 00:00:00 EDT 2008,Fixed,if the project file is found but has a different version  this may indicate a sync issue in the code or SCM. This should either warn or fail (with option to bypass if intentional),Minor,null,null,Wed Sep 14 00:00:00 EDT 2005,[MNG-889] m2 should warn (fail?) if a parent POM is discovered in the USD with a different version to the one requested,Closed,improvement
MNG-894,Fri Oct 07 00:00:00 EDT 2005,Fixed,See http://www.biojava.org/docs/bj_in_anger/index.htm for an example of this. It's a sort of hybrid between FAQ and HOW-TO  and would be really useful for beginners. As the complexity of m2 increases  we need to seriously consider helping people bootstrap into using m2.,Major,null,null,Wed Sep 14 00:00:00 EDT 2005,[MNG-894] Add task-oriented mini-HOWTO's to Maven 2.0 documentation,Closed,improvement
MNG-897,Fri Jan 13 00:00:00 EST 2006,Fixed,Per John Casey  This is logged to that it stays on the radar. Please consider incorporating my antfile plugin. I have included the following in the ZIP maven-antrun-plugin --&gt; the basic antrun w/ a few small mods maven-antfile-plugin maven-axisant-plugin --&gt; an example plugin using the antfile plugin axis-master --&gt; a "grouping" plugin for axis example my-app --&gt; an example app using the axisant plugin. Cheers &#8211; Chris ,Major,John Casey,jdcasey,Thu Sep 15 00:00:00 EDT 2005,[MNG-897] allows use of Ant build files,Closed,improvement
MNG-90,Fri Dec 24 00:00:00 EST 2004,Fixed,The scm inheritance isn't quite good enough. A first improvement is to append the artifactId to the parents connection and developer connection.,Major,Trygve Laugst�l,trygvis,Fri Oct 08 00:00:00 EDT 2004,[MNG-90] Improve <scm> inheritance.,Closed,improvement
MNG-905,Wed Sep 05 00:00:00 EDT 2007,Fixed,we've got some cruft: old junit logging non default provider implementations (eclipse compiler) These should be trimmed so a clean repo install is very quick and painless.,Trivial,null,null,Fri Sep 16 00:00:00 EDT 2005,[MNG-905] review clean repo install of m2 for download trimming,Closed,improvement
MNG-91,Fri Dec 24 00:00:00 EST 2004,Fixed,The plexus container artifact (plexus-0.17-SNAPSHOT) has been separated into three pieces: plexus-container-api is the artifact which contains the container API defined by the plexus system; plexus-utils is the artifact which contains common utilities in plexus; and plexus is still the standard container implementation. All of the new artifacts outlined above have the version 0.18-SNAPSHOT to distinguish them from the 0.17-* integrated lineage. To maintain compatibility with the new definition of plexus containers (separated API and utilities)  we need to migrate all maven2 builds to use these three artifacts rather than just plexus-0.17-SNAPSHOT. This will require migrating all plexus-0.17-SNAPSHOT dependency declarations to plexus-container-api-0.18-SNAPSHOT. Depending on the particular build  it MAY also involve re-addition of the standard container: plexus-0.18-SNAPSHOT (for standard container-specific APIs). Depending on the particular build  it MAY also involve addition of the utilities artifact: plexus-utils-0.18-SNAPSHOT (to accommodate usage of the DAG for instance). We need to make adjustments as necessary  and verify that all builds function in the plx-0.18-snapshot environment. This issue is related to PLX-83 and PLX-84.,Major,John Casey,jdcasey,Mon Oct 11 00:00:00 EDT 2004,[MNG-91] Migrate all m2 builds to use new plexus 0.18-SNAPSHOT and separated container api artifact,Closed,improvement
MNG-934,Mon Oct 03 00:00:00 EDT 2005,Fixed,will this cause more problems than it solves? it seems like the majority of users don't use this feature  unless it's in the case of a new m2 release  where they're still on the old release...but I'm not sure what impact this would have on that situtation. WDYT?,Blocker,John Casey,jdcasey,Tue Sep 20 00:00:00 EDT 2005,[MNG-934] change default value of usePluginRegistry in settings.xml to 'false',Closed,improvement
MNG-938,Thu Sep 22 00:00:00 EDT 2005,Fixed,Javadoc plugin parameters and method for Idea Plugin and Add a brief how to use APT doc,Major,Johnny R. Ruiz III,jruiz,Wed Sep 21 00:00:00 EDT 2005,[MNG-938] Javadoc plugin parameters and method for Maven Idea Plugin and Add a brief how to use APT doc,Closed,improvement
MNG-94,Thu Sep 15 00:00:00 EDT 2005,Fixed,currently each project reports build successful  time and memory. The reactor should have a similar output at the end summarising all. eg: Successful projects: X Failed projects:     X Max memory used:     X Final memory used:   X Total time:          X,Major,John Casey,jdcasey,Fri Oct 15 00:00:00 EDT 2004,[MNG-94] reactor run should have its own summary,Closed,improvement
MNG-946,Wed Sep 21 00:00:00 EDT 2005,Fixed,Create an additional default of Test*.java.,Major,Jason van Zyl,jvanzyl,Wed Sep 21 00:00:00 EDT 2005,[MNG-946] Surefire should run Test*.java tests,Closed,improvement
MNG-947,Sun Sep 25 00:00:00 EDT 2005,Fixed, "optional" should be equivalent to "compile" but not passed on in transitive deps. This will allow us to repair dependencies like dom4j and avoid a lot of &lt;exclusions/&gt;,Major,Brett Porter,brettporter,Wed Sep 21 00:00:00 EDT 2005,[MNG-947] add optional flag for dependencies,Closed,improvement
MNG-95,Thu Aug 04 00:00:00 EDT 2005,Fixed,reactor should have "ignoreFailures" like m1  but smarted. failure setting: fail build on first subproject failure process all  but overall fail if there were any failures process all  report success regardless (eg  we were running site and want to continue with something else next) Additionally  if the second two options are in play  a project should fail if one of its dependencies failed (eg if maven-artifact fails to build  so does maven-core  but maven-model does not),Blocker,John Casey,jdcasey,Fri Oct 15 00:00:00 EDT 2004,[MNG-95] reactor failed project behaviour,Closed,improvement
MNG-952,Sun Sep 25 00:00:00 EDT 2005,Fixed,Create How to docs and add sample report.,Minor,Allan Ramirez,aramirez,Thu Sep 22 00:00:00 EDT 2005,[MNG-952] Maven Checkstyle plugin documentation,Closed,improvement
MNG-953,Tue Sep 27 00:00:00 EDT 2005,Fixed,Add a brief how to use APT document and Sample Reports,Minor,Johnny R. Ruiz III,jruiz,Thu Sep 22 00:00:00 EDT 2005,[MNG-953] Add sample report to Project Info Report Plugin and brief How to use APT Document.,Closed,improvement
MNG-962,Sun Oct 09 00:00:00 EDT 2005,Fixed,so far: plexus-utils resources plugin war plugin,Major,Brett Porter,brettporter,Thu Sep 22 00:00:00 EDT 2005,[MNG-962] track down and unify default excludes,Closed,improvement
MNG-971,Fri Oct 07 00:00:00 EDT 2005,Fixed,It would be real nice if specifying a goal without a colon in it (e.g.  "clean" or "site") would check to see if there is a plugin by that name with a goal by the same name.  I think this would ease the transition for some people and greatly help people like me who can't type worth a darn.,Minor,Brett Porter,brettporter,Thu Sep 22 00:00:00 EDT 2005,[MNG-971] Allow goals such as "clean:clean" to be specified as "clean",Closed,improvement
MNG-980,Sat Apr 07 00:00:00 EDT 2007,Fixed,settings.xml has a &lt;pluginGroups&gt; section to list additional groupIds to search for top level m2 plugin goals. By default  "org.apache.maven.plugins" is not required to be present in this list  and always wins if there is a collision. &lt;pluginGroups&gt; that explicitly list "org.apache.maven.plugins" should be able to control this default behavior  so that a different plugin groupId can always win in the case of a collision. For example  in settings.xml: &lt;pluginGroups&gt;   &lt;pluginGroup&gt;org.example.maven.plugins&lt;/pluginGroup&gt;   &lt;pluginGroup&gt;org.apache.maven.plugins&lt;/pluginGroup&gt; &lt;/pluginGroups&gt; This would allow "org.example.maven.plugins" to always win in the case of a collision  whereas: &lt;pluginGroups&gt;   &lt;pluginGroup&gt;org.example.maven.plugins&lt;/pluginGroup&gt; &lt;/pluginGroups&gt; would still allow "org.apache.maven.plugins" to always win  as it does today.,Major,Brian Fox,brianf,Thu Sep 22 00:00:00 EDT 2005,[MNG-980] Provide control over precedence of org.apache.maven.plugins group in search path,Closed,improvement
MNG-988,Tue Oct 04 00:00:00 EDT 2005,Fixed, ,Major,Brett Porter,brettporter,Thu Sep 22 00:00:00 EDT 2005,[MNG-988] apply new stylesheet,Closed,improvement
